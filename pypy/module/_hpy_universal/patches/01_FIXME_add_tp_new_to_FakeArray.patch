This is a temporary workaround for a pypy bug: currently if you don't specify
an HPy_tp_new, you end up creating W_ObjectObject instances instead of
W_HPyObject. We should kill this patch ASAP

diff --git a/extra_tests/hpy_tests/_vendored/test_slots.py b/extra_tests/hpy_tests/_vendored/test_slots.py
--- a/extra_tests/hpy_tests/_vendored/test_slots.py
+++ b/extra_tests/hpy_tests/_vendored/test_slots.py
@@ -273,6 +273,20 @@ class TestSlots(HPyTest):
                 int exports;
             } FakeArrayObject;
 
+            HPyDef_SLOT(FakeArray_new, new_fakearray_impl, HPy_tp_new)
+            static HPy new_fakearray_impl(HPyContext *ctx, HPy cls, HPy *args,
+                                          HPy_ssize_t nargs, HPy kw)
+            {
+                if (!HPyArg_Parse(ctx, NULL, args, nargs, ""))
+                    return HPy_NULL;
+                FakeArrayObject *arr;
+                HPy h_arr = HPy_New(ctx, cls, &arr);
+                if (HPy_IsNull(h_arr))
+                    return HPy_NULL;
+                arr->exports = 0;
+                return h_arr;
+            }
+
             static char static_mem[12] = {0,1,2,3,4,5,6,7,8,9,10,11};
             static HPy_ssize_t _shape[1] = {12};
             static HPy_ssize_t _strides[1] = {1};
@@ -308,6 +322,7 @@ class TestSlots(HPyTest):
             }
 
             static HPyDef *FakeArray_defines[] = {
+                &FakeArray_new,
                 &FakeArray_getbuffer,
                 &FakeArray_releasebuffer,
                 NULL

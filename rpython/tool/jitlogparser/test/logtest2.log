[1cffd8feb691] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f5514b31000 +0  48894D58488945604889556848895D70488975784889BD800000004C8985880000004C898D900000004C8995980000004C89A5A00000004C89ADA80000004C89B5B00000004C89BDB8000000584889452058488945104889E84C8BBC24880000004C8BB424800000004C8B6C24784C8B642470488B5C2468488B6C24604881C498000000C3
[1cffd8ffaba6] jit-backend-dump}
[1cffd90012ee] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f5514b31085 +0  48894D58488945604889556848895D70488975784889BD800000004C8985880000004C898D900000004C8995980000004C89A5A00000004C89ADA80000004C89B5B00000004C89BDB8000000488B1C2508E6150348C7042500E615030000000048C7042508E615030000000048895D38584889452058488945104889E84C8BBC24880000004C8BB424800000004C8B6C24784C8B642470488B5C2468488B6C24604881C498000000C3
[1cffd9003b76] jit-backend-dump}
[1cffd900719f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f5514b3112e +0  4889455848894D60488955684889757048897D784C8985800000004C898D880000004C899590000000488B7C240841BBB064120141FFD3488B4558488B4D60488B5568488B7570488B7D784C8B85800000004C8B8D880000004C8B9590000000C20800
[1cffd9008c81] jit-backend-dump}
[1cffd900b384] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f5514b31191 +0  4889455848894D60488955684889757048897D784C8985800000004C898D880000004C899590000000488B7C240841BBF065120141FFD3488B442408F6400480488B4558488B4D60488B5568488B7570488B7D784C8B85800000004C8B8D880000004C8B9590000000C20800
[1cffd900cf18] jit-backend-dump}
[1cffd9010345] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f5514b311fd +0  4883EC384889442408F20F114424184889EF48895C24284C89642430488B1C2508E615034C8B242500E6150348C7042500E615030000000048C7042508E615030000000041BBB064120141FFD3F20F10442418488B44240848891C2508E615034C89242500E61503488B5C24284C8B642430488D642438C3
[1cffd9011f0b] jit-backend-dump}
[1cffd9015bd8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f5514b
[1cffd901a191] jit-backend-dump}
[1cffd901b3a6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f5514b
[1cffd901dc46] jit-backend-dump}
[1cffd901ef79] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f5514b
[1cffd902ce01] jit-backend-dump}
[1cffd902e819] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f5514b316bd
[1cffd9031b79] jit-backend-dump}
[1cffd90331b0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f5514b3181e
[1cffd903629a] jit-backend-dump}
[1cffd903736b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f5514b31988 +0  488B042508E6150348C7042500E615030000000048C7042508E61503000000004889453848C7451000C2B5014889E84C8BBC24880000004C8BB424800000004C8B6C24784C8B642470488B5C2468488B6C24604881C498000000C3
[1cffd9038a70] jit-backend-dump}
[1cffd903e2cd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f5514b319e
[1cffd904265b] jit-backend-dump}
[1cffd90448f2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f5514b31bd6 +0  4889E74883EC0841BBD00F210141FFD34883C408488B042500E615034885C07501C34883C40849BB8819B314557F000041FFE3
[1cffd9045d15] jit-backend-dump}
[1cffd904647a] {jit-backend-counts
[1cffd9046851] jit-backend-counts}
[1cffd9636773] {jit-backend
[1cffd9afbdde] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f5514b31ce
[1cffd9b146d6] jit-backend-dump}
[1cffd9b14ff3] {jit-backend-addr
Loop 0 (<code object g, file 'x.py', line 8> #9 LOAD_FAST) has address 0x7f5514b31d30 to 0x7f5514b31e80 (bootstrap 0x7f5514b31ce0)
[1cffd9b16753] jit-backend-addr}
[1cffd9b17245] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f5514b31de1 +0  9B000000
[1cffd9b18103] jit-backend-dump}
[1cffd9b18762] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f5514b31df3 +0  AE000000
[1cffd9b191ae] jit-backend-dump}
[1cffd9b1960b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f5514b31dfd +0  C9000000
[1cffd9b19f1f] jit-backend-dump}
[1cffd9b1a32f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f5514b31e10 +0  DB000000
[1cffd9b1ac8d] jit-backend-dump}
[1cffd9b1b091] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f5514b31e1e +0  F2000000
[1cffd9b1ba54] jit-backend-dump}
[1cffd9b1bfec] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f5514b31e35 +0  25010000
[1cffd9b1c8d3] jit-backend-dump}
[1cffd9b1ccfb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f5514b31e5e +0  21010000
[1cffd9b1d5d6] jit-backend-dump}
[1cffd9b1da25] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f5514b31e74 +0  55010000
[1cffd9b1e3b8] jit-backend-dump}
[1cffd9b1f0b2] jit-backend}
[1cffd9b20d9f] {jit-log-opt-loop
# Loop 0 (<code object g, file 'x.py', line 8> #9 LOAD_FAST) : loop with 59 ops
[p0, p1]
+110: p2 = getfield_gc_r(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_w_f_trace 128>)
+124: p3 = getfield_gc_r(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_last_exception 80>)
+128: p4 = getfield_gc_r(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_pycode 112>)
+132: i5 = getfield_gc_i(p0, descr=<FieldU pypy.interpreter.pyframe.PyFrame.inst_is_being_profiled 142>)
+140: p6 = getfield_gc_r(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_lastblock 96>)
+144: i7 = getfield_gc_i(p0, descr=<FieldS pypy.interpreter.pyframe.PyFrame.inst_valuestackdepth 120>)
+148: i8 = getfield_gc_i(p0, descr=<FieldS pypy.interpreter.pyframe.PyFrame.inst_last_instr 88>)
+152: p9 = getfield_gc_r(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_locals_stack_w 104>)
+156: p11 = getarrayitem_gc_r(p9, 0, descr=<ArrayP 8>)
+160: p13 = getarrayitem_gc_r(p9, 1, descr=<ArrayP 8>)
+164: p15 = getarrayitem_gc_r(p9, 2, descr=<ArrayP 8>)
+168: p17 = getarrayitem_gc_r(p9, 3, descr=<ArrayP 8>)
+172: p18 = getfield_gc_r(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_cells 40>)
+172: label(p0, p1, p2, p3, p4, i5, p6, i7, i8, p11, p13, p15, p17, descr=TargetToken(140003404595232))
debug_merge_point(0, 0, '<code object g. file 'x.py'. line 8> #9 LOAD_FAST')
+251: guard_value(i7, 2, descr=<Guard0x7f551532e020>) [i7, p1, p0, p2, p3, p4, i5, p6, i8, p11, p13, p15, p17]
+261: guard_nonnull_class(p11, ConstClass(W_IntObject), descr=<Guard0x7f551538c638>) [p1, p0, p11, p2, p3, p4, i5, p6, p13, p15, p17]
+279: guard_value(i5, 0, descr=<Guard0x7f551538c5c0>) [i5, p1, p0, p2, p3, p4, p6, p11, p13, p17]
debug_merge_point(0, 0, '<code object g. file 'x.py'. line 8> #12 LOAD_CONST')
+289: guard_value(p4, ConstPtr(ptr22), descr=<Guard0x7f551538c548>) [p1, p0, p4, p2, p3, p6, p11, p13, p17]
debug_merge_point(0, 0, '<code object g. file 'x.py'. line 8> #15 COMPARE_OP')
+308: i23 = getfield_gc_i(p11, descr=<FieldS pypy.objspace.std.intobject.W_IntObject.inst_intval 8>)
+312: i25 = int_lt(i23, 10)
guard_true(i25, descr=<Guard0x7f551538c4d0>) [p1, p0, p11, p2, p3, p6, p13]
debug_merge_point(0, 0, '<code object g. file 'x.py'. line 8> #18 POP_JUMP_IF_FALSE')
debug_merge_point(0, 0, '<code object g. file 'x.py'. line 8> #21 LOAD_CONST')
debug_merge_point(0, 0, '<code object g. file 'x.py'. line 8> #24 STORE_FAST')
debug_merge_point(0, 0, '<code object g. file 'x.py'. line 8> #27 LOAD_FAST')
debug_merge_point(0, 0, '<code object g. file 'x.py'. line 8> #30 LOAD_CONST')
debug_merge_point(0, 0, '<code object g. file 'x.py'. line 8> #33 INPLACE_ADD')
+322: i27 = int_add(i23, 1)
debug_merge_point(0, 0, '<code object g. file 'x.py'. line 8> #34 STORE_FAST')
debug_merge_point(0, 0, '<code object g. file 'x.py'. line 8> #37 JUMP_ABSOLUTE')
+327: guard_not_invalidated(descr=<Guard0x7f551538c458>) [p1, p0, p2, p3, p6, i27]
+327: i29 = getfield_raw_i(51804288, descr=<FieldS pypysig_long_struct.c_value 0>)
+335: i31 = int_lt(i29, 0)
guard_false(i31, descr=<Guard0x7f551538c3e0>) [p1, p0, p2, p3, p6, i27]
debug_merge_point(0, 0, '<code object g. file 'x.py'. line 8> #9 LOAD_FAST')
+345: label(p0, p1, p2, p3, p6, i27, descr=TargetToken(140003404595320))
debug_merge_point(0, 0, '<code object g. file 'x.py'. line 8> #9 LOAD_FAST')
debug_merge_point(0, 0, '<code object g. file 'x.py'. line 8> #12 LOAD_CONST')
debug_merge_point(0, 0, '<code object g. file 'x.py'. line 8> #15 COMPARE_OP')
+376: i32 = int_lt(i27, 10)
guard_true(i32, descr=<Guard0x7f551538c368>) [p1, p0, p2, p3, p6, i27]
debug_merge_point(0, 0, '<code object g. file 'x.py'. line 8> #18 POP_JUMP_IF_FALSE')
debug_merge_point(0, 0, '<code object g. file 'x.py'. line 8> #21 LOAD_CONST')
debug_merge_point(0, 0, '<code object g. file 'x.py'. line 8> #24 STORE_FAST')
debug_merge_point(0, 0, '<code object g. file 'x.py'. line 8> #27 LOAD_FAST')
debug_merge_point(0, 0, '<code object g. file 'x.py'. line 8> #30 LOAD_CONST')
debug_merge_point(0, 0, '<code object g. file 'x.py'. line 8> #33 INPLACE_ADD')
+386: i33 = int_add(i27, 1)
debug_merge_point(0, 0, '<code object g. file 'x.py'. line 8> #34 STORE_FAST')
debug_merge_point(0, 0, '<code object g. file 'x.py'. line 8> #37 JUMP_ABSOLUTE')
+390: guard_not_invalidated(descr=<Guard0x7f551538c2f0>) [p1, p0, p2, p3, p6, i33, None]
+390: i35 = getfield_raw_i(51804288, descr=<FieldS pypysig_long_struct.c_value 0>)
+398: i36 = int_lt(i35, 0)
guard_false(i36, descr=<Guard0x7f551538c278>) [p1, p0, p2, p3, p6, i33, None]
debug_merge_point(0, 0, '<code object g. file 'x.py'. line 8> #9 LOAD_FAST')
+408: jump(p0, p1, p2, p3, p6, i33, descr=TargetToken(140003404595320))
+416: --end of the loop--
[1cffd9ba83b9] jit-log-opt-loop}
[1cffd9d7af1e] {jit-backend
[1cffd9ea4873] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f5514b
[1cffd9ebc29f] jit-backend-dump}
[1cffd9ebcab0] {jit-backend-addr
Loop 1 (<code object h, file 'x.py', line 14> #13 FOR_ITER) has address 0x7f5514b32178 to 0x7f5514b32470 (bootstrap 0x7f5514b32128)
[1cffd9ebde77] jit-backend-addr}
[1cffd9ebe969] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f5514b32222 +0  4A020000
[1cffd9ebfa23] jit-backend-dump}
[1cffd9ec0059] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f5514b3222e +0  63020000
[1cffd9ec0ae6] jit-backend-dump}
[1cffd9ec0f4f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f5514b3223b +0  7B020000
[1cffd9ec18bc] jit-backend-dump}
[1cffd9ec1d28] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f5514b3224f +0  8C020000
[1cffd9ec2689] jit-backend-dump}
[1cffd9ec2b07] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f5514b32269 +0  97020000
[1cffd9ec3474] jit-backend-dump}
[1cffd9ec38bc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f5514b32272 +0  B3020000
[1cffd9ec4220] jit-backend-dump}
[1cffd9ec4677] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f5514b32291 +0  B9020000
[1cffd9ec5011] jit-backend-dump}
[1cffd9ec5459] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f5514b322a2 +0  CD020000
[1cffd9ec5e1c] jit-backend-dump}
[1cffd9ec6279] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f5514b3232d +0  67020000
[1cffd9ec6bd7] jit-backend-dump}
[1cffd9ec77c9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f5514b3235d +0  81020000
[1cffd9ec8142] jit-backend-dump}
[1cffd9ec85c0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f5514b32377 +0  8C020000
[1cffd9ecbf8d] jit-backend-dump}
[1cffd9ecc51d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f5514b323a2 +0  86020000
[1cffd9eccee0] jit-backend-dump}
[1cffd9ecd33a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f5514b32426 +0  27020000
[1cffd9ecdc8f] jit-backend-dump}
[1cffd9ece160] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE python
CODE_DUMP @7f5514b3244f +0  48020000
[1cffd9eceab8] jit-backend-dump}
[1cffd9ecf545] jit-backend}
[1cffd9ed0c35] {jit-log-opt-loop
# Loop 1 (<code object h, file 'x.py', line 14> #13 FOR_ITER) : loop with 82 ops
[p0, p1]
+110: p2 = getfield_gc_r(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_w_f_trace 128>)
+124: p3 = getfield_gc_r(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_last_exception 80>)
+128: p4 = getfield_gc_r(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_pycode 112>)
+132: i5 = getfield_gc_i(p0, descr=<FieldU pypy.interpreter.pyframe.PyFrame.inst_is_being_profiled 142>)
+140: p6 = getfield_gc_r(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_lastblock 96>)
+144: i7 = getfield_gc_i(p0, descr=<FieldS pypy.interpreter.pyframe.PyFrame.inst_valuestackdepth 120>)
+148: i8 = getfield_gc_i(p0, descr=<FieldS pypy.interpreter.pyframe.PyFrame.inst_last_instr 88>)
+152: p9 = getfield_gc_r(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_locals_stack_w 104>)
+156: p11 = getarrayitem_gc_r(p9, 0, descr=<ArrayP 8>)
+160: p13 = getarrayitem_gc_r(p9, 1, descr=<ArrayP 8>)
+164: p15 = getarrayitem_gc_r(p9, 2, descr=<ArrayP 8>)
+168: p17 = getarrayitem_gc_r(p9, 3, descr=<ArrayP 8>)
+172: p18 = getfield_gc_r(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_cells 40>)
+172: label(p0, p1, p2, p3, p4, i5, p6, i7, i8, p11, p13, p15, p17, descr=TargetToken(140003443320224))
debug_merge_point(0, 0, '<code object h. file 'x.py'. line 14> #13 FOR_ITER')
+244: guard_value(i7, 3, descr=<Guard0x7f55177f96a0>) [i7, p1, p0, p2, p3, p4, i5, p6, i8, p11, p13, p15, p17]
+254: guard_class(p15, 26177128, descr=<Guard0x7f5517834a70>) [p1, p0, p15, p2, p3, p4, i5, p6, p11, p13, p17]
+266: p21 = getfield_gc_r(p15, descr=<FieldP pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_w_seq 16>)
+270: guard_nonnull(p21, descr=<Guard0x7f55178349f8>) [p1, p0, p15, p21, p2, p3, p4, i5, p6, p11, p13, p17]
+279: i22 = getfield_gc_i(p15, descr=<FieldS pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_index 8>)
+283: p23 = getfield_gc_r(p21, descr=<FieldP pypy.objspace.std.listobject.W_ListObject.inst_strategy 16>)
+287: guard_class(p23, 26517736, descr=<Guard0x7f5517834980>) [p1, p0, p15, i22, p23, p21, p2, p3, p4, i5, p6, p11, p13, p17]
+299: p25 = getfield_gc_r(p21, descr=<FieldP pypy.objspace.std.listobject.W_ListObject.inst_lstorage 8>)
+303: i26 = getfield_gc_i(p25, descr=<FieldS tuple3.item0 8>)
+307: i27 = getfield_gc_i(p25, descr=<FieldS tuple3.item1 16>)
+311: i28 = getfield_gc_i(p25, descr=<FieldS tuple3.item2 24>)
+315: i30 = int_lt(i22, 0)
guard_false(i30, descr=<Guard0x7f5517834908>) [p1, p0, p15, i22, i28, i27, i26, p2, p3, p4, i5, p6, p11, p13, p17]
+325: i31 = int_ge(i22, i28)
guard_false(i31, descr=<Guard0x7f5517834890>) [p1, p0, p15, i22, i27, i26, p2, p3, p4, i5, p6, p11, p13, p17]
+334: i32 = int_mul(i22, i27)
+341: i33 = int_add(i26, i32)
+347: i35 = int_add(i22, 1)
+351: setfield_gc(p15, i35, descr=<FieldS pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_index 8>)
+355: guard_value(i5, 0, descr=<Guard0x7f5517834818>) [i5, p1, p0, p2, p3, p4, p6, p11, p13, p15, i33]
debug_merge_point(0, 0, '<code object h. file 'x.py'. line 14> #16 STORE_FAST')
debug_merge_point(0, 0, '<code object h. file 'x.py'. line 14> #19 LOAD_FAST')
debug_merge_point(0, 0, '<code object h. file 'x.py'. line 14> #22 LIST_APPEND')
+365: p37 = getfield_gc_r(p13, descr=<FieldP pypy.objspace.std.listobject.W_ListObject.inst_strategy 16>)
+369: guard_class(p37, 26402184, descr=<Guard0x7f55178347a0>) [p1, p0, p37, p13, p2, p3, p4, p6, p15, i33]
+382: p39 = getfield_gc_r(p13, descr=<FieldP pypy.objspace.std.listobject.W_ListObject.inst_lstorage 8>)
+386: i40 = getfield_gc_i(p39, descr=<FieldS list.length 8>)
+390: i42 = int_add(i40, 1)
+394: p43 = getfield_gc_r(p39, descr=<FieldP list.items 16>)
+394: i44 = arraylen_gc(p43, descr=<ArrayS 8>)
+394: call_n(ConstClass(_ll_list_resize_ge_trampoline__v672___simple_call__function__), p39, i42, descr=<Callv 0 ri EF=4>)
+506: guard_no_exception(descr=<Guard0x7f5517834728>) [p1, p0, i40, i33, p39, p2, p3, p4, p6, p13, p15, None]
+521: p47 = getfield_gc_r(p39, descr=<FieldP list.items 16>)
+532: setarrayitem_gc(p47, i40, i33, descr=<ArrayS 8>)
debug_merge_point(0, 0, '<code object h. file 'x.py'. line 14> #25 JUMP_ABSOLUTE')
+551: guard_not_invalidated(descr=<Guard0x7f55178346b0>) [p1, p0, p2, p3, p4, p6, p13, p15, i33]
+551: i49 = getfield_raw_i(51804288, descr=<FieldS pypysig_long_struct.c_value 0>)
+559: i51 = int_lt(i49, 0)
guard_false(i51, descr=<Guard0x7f5517834638>) [p1, p0, p2, p3, p4, p6, p13, p15, i33]
+569: guard_value(p4, ConstPtr(ptr52), descr=<Guard0x7f55178345c0>) [p1, p0, p4, p2, p3, p6, p13, p15, i33]
debug_merge_point(0, 0, '<code object h. file 'x.py'. line 14> #13 FOR_ITER')
+595: label(p0, p1, p2, p3, p6, i33, p13, p15, i35, i28, i27, i26, p39, descr=TargetToken(140003443320312))
debug_merge_point(0, 0, '<code object h. file 'x.py'. line 14> #13 FOR_ITER')
+625: i53 = int_ge(i35, i28)
guard_false(i53, descr=<Guard0x7f5517834548>) [p1, p0, p15, i35, i27, i26, p2, p3, p6, p13, i33]
+638: i54 = int_mul(i35, i27)
+649: i55 = int_add(i26, i54)
+655: i56 = int_add(i35, 1)
debug_merge_point(0, 0, '<code object h. file 'x.py'. line 14> #16 STORE_FAST')
debug_merge_point(0, 0, '<code object h. file 'x.py'. line 14> #19 LOAD_FAST')
debug_merge_point(0, 0, '<code object h. file 'x.py'. line 14> #22 LIST_APPEND')
+659: i57 = getfield_gc_i(p39, descr=<FieldS list.length 8>)
+663: i58 = int_add(i57, 1)
+667: p59 = getfield_gc_r(p39, descr=<FieldP list.items 16>)
+667: i60 = arraylen_gc(p59, descr=<ArrayS 8>)
+667: call_n(ConstClass(_ll_list_resize_ge_trampoline__v672___simple_call__function__), p39, i58, descr=<Callv 0 ri EF=4>)
+744: setfield_gc(p15, i56, descr=<FieldS pypy.objspace.std.iterobject.W_AbstractSeqIterObject.inst_index 8>)
+755: guard_no_exception(descr=<Guard0x7f55178344d0>) [p1, p0, i57, i55, p39, p2, p3, p6, p13, p15, None]
+770: p61 = getfield_gc_r(p39, descr=<FieldP list.items 16>)
+781: setarrayitem_gc(p61, i57, i55, descr=<ArrayS 8>)
debug_merge_point(0, 0, '<code object h. file 'x.py'. line 14> #25 JUMP_ABSOLUTE')
+793: guard_not_invalidated(descr=<Guard0x7f5517834458>) [p1, p0, p2, p3, p6, p13, p15, i55, None]
+793: i62 = getfield_raw_i(51804288, descr=<FieldS pypysig_long_struct.c_value 0>)
+801: i63 = int_lt(i62, 0)
guard_false(i63, descr=<Guard0x7f55178343e0>) [p1, p0, p2, p3, p6, p13, p15, i55, None]
debug_merge_point(0, 0, '<code object h. file 'x.py'. line 14> #13 FOR_ITER')
+811: jump(p0, p1, p2, p3, p6, i55, p13, p15, i56, i28, i27, i26, p39, descr=TargetToken(140003443320312))
+840: --end of the loop--
[1cffd9f27224] jit-log-opt-loop}
[1cffd9f6f244] {jit-backend-counts
entry 0:1
TargetToken(140003404595232):1
TargetToken(140003404595320):4
entry 1:1
TargetToken(140003443320224):1
TargetToken(140003443320312):4
[1cffd9f72430] jit-backend-counts}

.{
    // C6.2.1 ADC
    .{
        .pattern = "ADC <Wd>, <Wn>, <Wm>",
        .symbols = .{
            .Wd = .{ .reg = .{ .format = .{ .general = .word } } },
            .Wn = .{ .reg = .{ .format = .{ .general = .word } } },
            .Wm = .{ .reg = .{ .format = .{ .general = .word } } },
        },
        .encode = .{ .adc, .Wd, .Wn, .Wm },
    },
    .{
        .pattern = "ADC <Xd>, <Xn>, <Xm>",
        .symbols = .{
            .Xd = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Xn = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Xm = .{ .reg = .{ .format = .{ .general = .doubleword } } },
        },
        .encode = .{ .adc, .Xd, .Xn, .Xm },
    },
    // C6.2.2 ADCS
    .{
        .pattern = "ADCS <Wd>, <Wn>, <Wm>",
        .symbols = .{
            .Wd = .{ .reg = .{ .format = .{ .general = .word } } },
            .Wn = .{ .reg = .{ .format = .{ .general = .word } } },
            .Wm = .{ .reg = .{ .format = .{ .general = .word } } },
        },
        .encode = .{ .adcs, .Wd, .Wn, .Wm },
    },
    .{
        .pattern = "ADCS <Xd>, <Xn>, <Xm>",
        .symbols = .{
            .Xd = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Xn = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Xm = .{ .reg = .{ .format = .{ .general = .doubleword } } },
        },
        .encode = .{ .adcs, .Xd, .Xn, .Xm },
    },
    // C6.2.3 ADD (extended register)
    .{
        .pattern = "ADD <Wd|WSP>, <Wn|WSP>, <Wm>",
        .symbols = .{
            .Wd = .{ .reg = .{ .format = .{ .general = .word }, .allow_sp = true } },
            .Wn = .{ .reg = .{ .format = .{ .general = .word }, .allow_sp = true } },
            .Wm = .{ .reg = .{ .format = .{ .general = .word } } },
        },
        .encode = .{ .add, .Wd, .Wn, .{ .register = .Wm } },
    },
    .{
        .pattern = "ADD <Wd|WSP>, <Wn|WSP>, <Wm>, <extend>",
        .symbols = .{
            .Wd = .{ .reg = .{ .format = .{ .general = .word }, .allow_sp = true } },
            .Wn = .{ .reg = .{ .format = .{ .general = .word }, .allow_sp = true } },
            .Wm = .{ .reg = .{ .format = .{ .general = .word } } },
            .extend = .{ .extend = .{} },
        },
        .encode = .{ .add, .Wd, .Wn, .{ .extended_register_explicit = .{
            .register = .Wm,
            .option = .extend,
            .amount = 0,
        } } },
    },
    .{
        .pattern = "ADD <Wd|WSP>, <Wn|WSP>, <Wm>, <extend> #<amount>",
        .symbols = .{
            .Wd = .{ .reg = .{ .format = .{ .general = .word }, .allow_sp = true } },
            .Wn = .{ .reg = .{ .format = .{ .general = .word }, .allow_sp = true } },
            .Wm = .{ .reg = .{ .format = .{ .general = .word } } },
            .extend = .{ .extend = .{} },
            .amount = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 3 }, .max_valid = 4 } },
        },
        .encode = .{ .add, .Wd, .Wn, .{ .extended_register_explicit = .{
            .register = .Wm,
            .option = .extend,
            .amount = .amount,
        } } },
    },
    .{
        .pattern = "ADD <Xd|SP>, <Xn|SP>, <Xm>",
        .symbols = .{
            .Xd = .{ .reg = .{ .format = .{ .general = .doubleword }, .allow_sp = true } },
            .Xn = .{ .reg = .{ .format = .{ .general = .doubleword }, .allow_sp = true } },
            .Xm = .{ .reg = .{ .format = .{ .general = .doubleword } } },
        },
        .encode = .{ .add, .Xd, .Xn, .{ .register = .Xm } },
    },
    .{
        .pattern = "ADD <Xd|SP>, <Xn|SP>, <Wm>, <extend>",
        .symbols = .{
            .Xd = .{ .reg = .{ .format = .{ .general = .doubleword }, .allow_sp = true } },
            .Xn = .{ .reg = .{ .format = .{ .general = .doubleword }, .allow_sp = true } },
            .Wm = .{ .reg = .{ .format = .{ .general = .word } } },
            .extend = .{ .extend = .{ .size = .word } },
        },
        .encode = .{ .add, .Xd, .Xn, .{ .extended_register_explicit = .{
            .register = .Wm,
            .option = .extend,
            .amount = 0,
        } } },
    },
    .{
        .pattern = "ADD <Xd|SP>, <Xn|SP>, <Wm>, <extend> #<amount>",
        .symbols = .{
            .Xd = .{ .reg = .{ .format = .{ .general = .doubleword }, .allow_sp = true } },
            .Xn = .{ .reg = .{ .format = .{ .general = .doubleword }, .allow_sp = true } },
            .Wm = .{ .reg = .{ .format = .{ .general = .word } } },
            .extend = .{ .extend = .{ .size = .word } },
            .amount = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 3 }, .max_valid = 4 } },
        },
        .encode = .{ .add, .Xd, .Xn, .{ .extended_register_explicit = .{
            .register = .Wm,
            .option = .extend,
            .amount = .amount,
        } } },
    },
    .{
        .pattern = "ADD <Xd|SP>, <Xn|SP>, <Xm>, <extend>",
        .symbols = .{
            .Xd = .{ .reg = .{ .format = .{ .general = .doubleword }, .allow_sp = true } },
            .Xn = .{ .reg = .{ .format = .{ .general = .doubleword }, .allow_sp = true } },
            .Xm = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .extend = .{ .extend = .{ .size = .doubleword } },
        },
        .encode = .{ .add, .Xd, .Xn, .{ .extended_register_explicit = .{
            .register = .Xm,
            .option = .extend,
            .amount = 0,
        } } },
    },
    .{
        .pattern = "ADD <Xd|SP>, <Xn|SP>, <Xm>, <extend> #<amount>",
        .symbols = .{
            .Xd = .{ .reg = .{ .format = .{ .general = .doubleword }, .allow_sp = true } },
            .Xn = .{ .reg = .{ .format = .{ .general = .doubleword }, .allow_sp = true } },
            .Xm = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .extend = .{ .extend = .{ .size = .doubleword } },
            .amount = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 3 }, .max_valid = 4 } },
        },
        .encode = .{ .add, .Xd, .Xn, .{ .extended_register_explicit = .{
            .register = .Xm,
            .option = .extend,
            .amount = .amount,
        } } },
    },
    // C6.2.4 ADD (immediate)
    .{
        .pattern = "ADD <Wd|WSP>, <Wn|WSP>, #<imm>",
        .symbols = .{
            .Wd = .{ .reg = .{ .format = .{ .general = .word }, .allow_sp = true } },
            .Wn = .{ .reg = .{ .format = .{ .general = .word }, .allow_sp = true } },
            .imm = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 12 } } },
        },
        .encode = .{ .add, .Wd, .Wn, .{ .immediate = .imm } },
    },
    .{
        .pattern = "ADD <Wd|WSP>, <Wn|WSP>, #<imm>, LSL #<shift>",
        .symbols = .{
            .Wd = .{ .reg = .{ .format = .{ .general = .word }, .allow_sp = true } },
            .Wn = .{ .reg = .{ .format = .{ .general = .word }, .allow_sp = true } },
            .imm = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 12 } } },
            .shift = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 4 }, .multiple_of = 12 } },
        },
        .encode = .{ .add, .Wd, .Wn, .{ .shifted_immediate = .{ .immediate = .imm, .lsl = .shift } } },
    },
    .{
        .pattern = "ADD <Xd|SP>, <Xn|SP>, #<imm>",
        .symbols = .{
            .Xd = .{ .reg = .{ .format = .{ .general = .doubleword }, .allow_sp = true } },
            .Xn = .{ .reg = .{ .format = .{ .general = .doubleword }, .allow_sp = true } },
            .imm = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 12 } } },
        },
        .encode = .{ .add, .Xd, .Xn, .{ .immediate = .imm } },
    },
    .{
        .pattern = "ADD <Xd|SP>, <Xn|SP>, #<imm>, LSL #<shift>",
        .symbols = .{
            .Xd = .{ .reg = .{ .format = .{ .general = .doubleword }, .allow_sp = true } },
            .Xn = .{ .reg = .{ .format = .{ .general = .doubleword }, .allow_sp = true } },
            .imm = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 12 } } },
            .shift = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 4 }, .multiple_of = 12 } },
        },
        .encode = .{ .add, .Xd, .Xn, .{ .shifted_immediate = .{ .immediate = .imm, .lsl = .shift } } },
    },
    // C6.2.5 ADD (shifted register)
    .{
        .pattern = "ADD <Wd>, <Wn>, <Wm>",
        .symbols = .{
            .Wd = .{ .reg = .{ .format = .{ .general = .word } } },
            .Wn = .{ .reg = .{ .format = .{ .general = .word } } },
            .Wm = .{ .reg = .{ .format = .{ .general = .word } } },
        },
        .encode = .{ .add, .Wd, .Wn, .{ .register = .Wm } },
    },
    .{
        .pattern = "ADD <Wd>, <Wn>, <Wm>, <shift> #<amount>",
        .symbols = .{
            .Wd = .{ .reg = .{ .format = .{ .general = .word } } },
            .Wn = .{ .reg = .{ .format = .{ .general = .word } } },
            .Wm = .{ .reg = .{ .format = .{ .general = .word } } },
            .shift = .{ .shift = .{ .allow_ror = false } },
            .amount = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 5 } } },
        },
        .encode = .{ .add, .Wd, .Wn, .{ .shifted_register_explicit = .{
            .register = .Wm,
            .shift = .shift,
            .amount = .amount,
        } } },
    },
    .{
        .pattern = "ADD <Xd>, <Xn>, <Xm>",
        .symbols = .{
            .Xd = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Xn = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Xm = .{ .reg = .{ .format = .{ .general = .doubleword } } },
        },
        .encode = .{ .add, .Xd, .Xn, .{ .register = .Xm } },
    },
    .{
        .pattern = "ADD <Xd>, <Xn>, <Xm>, <shift> #<amount>",
        .symbols = .{
            .Xd = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Xn = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Xm = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .shift = .{ .shift = .{ .allow_ror = false } },
            .amount = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 6 } } },
        },
        .encode = .{ .add, .Xd, .Xn, .{ .shifted_register_explicit = .{
            .register = .Xm,
            .shift = .shift,
            .amount = .amount,
        } } },
    },
    // C6.2.6 ADDG
    .{
        .requires = .{.mte},
        .pattern = "ADDG <Xd|SP>, <Xn|SP>, #<uimm6>,  #<uimm4>",
        .symbols = .{
            .Xd = .{ .reg = .{ .format = .{ .general = .doubleword }, .allow_sp = true } },
            .Xn = .{ .reg = .{ .format = .{ .general = .doubleword }, .allow_sp = true } },
            .uimm6 = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 10 }, .multiple_of = 16 } },
            .uimm4 = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 4 } } },
        },
        .encode = .{ .addg, .Xd, .Xn, .uimm6, .uimm4 },
    },
    // C6.2.7 ADDS (extended register)
    .{
        .pattern = "ADDS <Wd>, <Wn|WSP>, <Wm>",
        .symbols = .{
            .Wd = .{ .reg = .{ .format = .{ .general = .word } } },
            .Wn = .{ .reg = .{ .format = .{ .general = .word }, .allow_sp = true } },
            .Wm = .{ .reg = .{ .format = .{ .general = .word } } },
        },
        .encode = .{ .adds, .Wd, .Wn, .{ .register = .Wm } },
    },
    .{
        .pattern = "ADDS <Wd>, <Wn|WSP>, <Wm>, <extend>",
        .symbols = .{
            .Wd = .{ .reg = .{ .format = .{ .general = .word } } },
            .Wn = .{ .reg = .{ .format = .{ .general = .word }, .allow_sp = true } },
            .Wm = .{ .reg = .{ .format = .{ .general = .word } } },
            .extend = .{ .extend = .{} },
        },
        .encode = .{ .adds, .Wd, .Wn, .{ .extended_register_explicit = .{
            .register = .Wm,
            .option = .extend,
            .amount = 0,
        } } },
    },
    .{
        .pattern = "ADDS <Wd>, <Wn|WSP>, <Wm>, <extend> #<amount>",
        .symbols = .{
            .Wd = .{ .reg = .{ .format = .{ .general = .word } } },
            .Wn = .{ .reg = .{ .format = .{ .general = .word }, .allow_sp = true } },
            .Wm = .{ .reg = .{ .format = .{ .general = .word } } },
            .extend = .{ .extend = .{} },
            .amount = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 3 }, .max_valid = 4 } },
        },
        .encode = .{ .adds, .Wd, .Wn, .{ .extended_register_explicit = .{
            .register = .Wm,
            .option = .extend,
            .amount = .amount,
        } } },
    },
    .{
        .pattern = "ADDS <Xd>, <Xn|SP>, <Xm>",
        .symbols = .{
            .Xd = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Xn = .{ .reg = .{ .format = .{ .general = .doubleword }, .allow_sp = true } },
            .Xm = .{ .reg = .{ .format = .{ .general = .doubleword } } },
        },
        .encode = .{ .adds, .Xd, .Xn, .{ .register = .Xm } },
    },
    .{
        .pattern = "ADDS <Xd>, <Xn|SP>, <Wm>, <extend>",
        .symbols = .{
            .Xd = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Xn = .{ .reg = .{ .format = .{ .general = .doubleword }, .allow_sp = true } },
            .Wm = .{ .reg = .{ .format = .{ .general = .word } } },
            .extend = .{ .extend = .{ .size = .word } },
        },
        .encode = .{ .adds, .Xd, .Xn, .{ .extended_register_explicit = .{
            .register = .Wm,
            .option = .extend,
            .amount = 0,
        } } },
    },
    .{
        .pattern = "ADDS <Xd>, <Xn|SP>, <Wm>, <extend> #<amount>",
        .symbols = .{
            .Xd = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Xn = .{ .reg = .{ .format = .{ .general = .doubleword }, .allow_sp = true } },
            .Wm = .{ .reg = .{ .format = .{ .general = .word } } },
            .extend = .{ .extend = .{ .size = .word } },
            .amount = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 3 }, .max_valid = 4 } },
        },
        .encode = .{ .adds, .Xd, .Xn, .{ .extended_register_explicit = .{
            .register = .Wm,
            .option = .extend,
            .amount = .amount,
        } } },
    },
    .{
        .pattern = "ADDS <Xd>, <Xn|SP>, <Xm>, <extend>",
        .symbols = .{
            .Xd = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Xn = .{ .reg = .{ .format = .{ .general = .doubleword }, .allow_sp = true } },
            .Xm = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .extend = .{ .extend = .{ .size = .doubleword } },
        },
        .encode = .{ .adds, .Xd, .Xn, .{ .extended_register_explicit = .{
            .register = .Xm,
            .option = .extend,
            .amount = 0,
        } } },
    },
    .{
        .pattern = "ADDS <Xd>, <Xn|SP>, <Xm>, <extend> #<amount>",
        .symbols = .{
            .Xd = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Xn = .{ .reg = .{ .format = .{ .general = .doubleword }, .allow_sp = true } },
            .Xm = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .extend = .{ .extend = .{ .size = .doubleword } },
            .amount = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 3 }, .max_valid = 4 } },
        },
        .encode = .{ .adds, .Xd, .Xn, .{ .extended_register_explicit = .{
            .register = .Xm,
            .option = .extend,
            .amount = .amount,
        } } },
    },
    // C6.2.8 ADDS (immediate)
    .{
        .pattern = "ADDS <Wd>, <Wn|WSP>, #<imm>",
        .symbols = .{
            .Wd = .{ .reg = .{ .format = .{ .general = .word } } },
            .Wn = .{ .reg = .{ .format = .{ .general = .word }, .allow_sp = true } },
            .imm = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 12 } } },
        },
        .encode = .{ .adds, .Wd, .Wn, .{ .immediate = .imm } },
    },
    .{
        .pattern = "ADDS <Wd>, <Wn|WSP>, #<imm>, LSL #<shift>",
        .symbols = .{
            .Wd = .{ .reg = .{ .format = .{ .general = .word } } },
            .Wn = .{ .reg = .{ .format = .{ .general = .word }, .allow_sp = true } },
            .imm = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 12 } } },
            .shift = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 4 }, .multiple_of = 12 } },
        },
        .encode = .{ .adds, .Wd, .Wn, .{ .shifted_immediate = .{ .immediate = .imm, .lsl = .shift } } },
    },
    .{
        .pattern = "ADDS <Xd>, <Xn|SP>, #<imm>",
        .symbols = .{
            .Xd = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Xn = .{ .reg = .{ .format = .{ .general = .doubleword }, .allow_sp = true } },
            .imm = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 12 } } },
        },
        .encode = .{ .adds, .Xd, .Xn, .{ .immediate = .imm } },
    },
    .{
        .pattern = "ADDS <Xd>, <Xn|SP>, #<imm>, LSL #<shift>",
        .symbols = .{
            .Xd = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Xn = .{ .reg = .{ .format = .{ .general = .doubleword }, .allow_sp = true } },
            .imm = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 12 } } },
            .shift = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 4 }, .multiple_of = 12 } },
        },
        .encode = .{ .adds, .Xd, .Xn, .{ .shifted_immediate = .{ .immediate = .imm, .lsl = .shift } } },
    },
    // C6.2.9 ADDS (shifted register)
    .{
        .pattern = "ADDS <Wd>, <Wn>, <Wm>",
        .symbols = .{
            .Wd = .{ .reg = .{ .format = .{ .general = .word } } },
            .Wn = .{ .reg = .{ .format = .{ .general = .word } } },
            .Wm = .{ .reg = .{ .format = .{ .general = .word } } },
        },
        .encode = .{ .adds, .Wd, .Wn, .{ .register = .Wm } },
    },
    .{
        .pattern = "ADDS <Wd>, <Wn>, <Wm>, <shift> #<amount>",
        .symbols = .{
            .Wd = .{ .reg = .{ .format = .{ .general = .word } } },
            .Wn = .{ .reg = .{ .format = .{ .general = .word } } },
            .Wm = .{ .reg = .{ .format = .{ .general = .word } } },
            .shift = .{ .shift = .{ .allow_ror = false } },
            .amount = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 5 } } },
        },
        .encode = .{ .adds, .Wd, .Wn, .{ .shifted_register_explicit = .{
            .register = .Wm,
            .shift = .shift,
            .amount = .amount,
        } } },
    },
    .{
        .pattern = "ADDS <Xd>, <Xn>, <Xm>",
        .symbols = .{
            .Xd = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Xn = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Xm = .{ .reg = .{ .format = .{ .general = .doubleword } } },
        },
        .encode = .{ .adds, .Xd, .Xn, .{ .register = .Xm } },
    },
    .{
        .pattern = "ADDS <Xd>, <Xn>, <Xm>, <shift> #<amount>",
        .symbols = .{
            .Xd = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Xn = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Xm = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .shift = .{ .shift = .{ .allow_ror = false } },
            .amount = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 6 } } },
        },
        .encode = .{ .adds, .Xd, .Xn, .{ .shifted_register_explicit = .{
            .register = .Xm,
            .shift = .shift,
            .amount = .amount,
        } } },
    },
    // C6.2.13 AND (shifted register)
    .{
        .pattern = "AND <Wd>, <Wn>, <Wm>",
        .symbols = .{
            .Wd = .{ .reg = .{ .format = .{ .general = .word } } },
            .Wn = .{ .reg = .{ .format = .{ .general = .word } } },
            .Wm = .{ .reg = .{ .format = .{ .general = .word } } },
        },
        .encode = .{ .@"and", .Wd, .Wn, .{ .register = .Wm } },
    },
    .{
        .pattern = "AND <Wd>, <Wn>, <Wm>, <shift> #<amount>",
        .symbols = .{
            .Wd = .{ .reg = .{ .format = .{ .general = .word } } },
            .Wn = .{ .reg = .{ .format = .{ .general = .word } } },
            .Wm = .{ .reg = .{ .format = .{ .general = .word } } },
            .shift = .{ .shift = .{} },
            .amount = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 5 } } },
        },
        .encode = .{ .@"and", .Wd, .Wn, .{ .shifted_register_explicit = .{
            .register = .Wm,
            .shift = .shift,
            .amount = .amount,
        } } },
    },
    .{
        .pattern = "AND <Xd>, <Xn>, <Xm>",
        .symbols = .{
            .Xd = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Xn = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Xm = .{ .reg = .{ .format = .{ .general = .doubleword } } },
        },
        .encode = .{ .@"and", .Xd, .Xn, .{ .register = .Xm } },
    },
    .{
        .pattern = "AND <Xd>, <Xn>, <Xm>, <shift> #<amount>",
        .symbols = .{
            .Xd = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Xn = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Xm = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .shift = .{ .shift = .{} },
            .amount = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 6 } } },
        },
        .encode = .{ .@"and", .Xd, .Xn, .{ .shifted_register_explicit = .{
            .register = .Xm,
            .shift = .shift,
            .amount = .amount,
        } } },
    },
    // C6.2.15 ANDS (shifted register)
    .{
        .pattern = "ANDS <Wd>, <Wn>, <Wm>",
        .symbols = .{
            .Wd = .{ .reg = .{ .format = .{ .general = .word } } },
            .Wn = .{ .reg = .{ .format = .{ .general = .word } } },
            .Wm = .{ .reg = .{ .format = .{ .general = .word } } },
        },
        .encode = .{ .ands, .Wd, .Wn, .{ .register = .Wm } },
    },
    .{
        .pattern = "ANDS <Wd>, <Wn>, <Wm>, <shift> #<amount>",
        .symbols = .{
            .Wd = .{ .reg = .{ .format = .{ .general = .word } } },
            .Wn = .{ .reg = .{ .format = .{ .general = .word } } },
            .Wm = .{ .reg = .{ .format = .{ .general = .word } } },
            .shift = .{ .shift = .{} },
            .amount = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 5 } } },
        },
        .encode = .{ .ands, .Wd, .Wn, .{ .shifted_register_explicit = .{
            .register = .Wm,
            .shift = .shift,
            .amount = .amount,
        } } },
    },
    .{
        .pattern = "ANDS <Xd>, <Xn>, <Xm>",
        .symbols = .{
            .Xd = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Xn = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Xm = .{ .reg = .{ .format = .{ .general = .doubleword } } },
        },
        .encode = .{ .ands, .Xd, .Xn, .{ .register = .Xm } },
    },
    .{
        .pattern = "ANDS <Xd>, <Xn>, <Xm>, <shift> #<amount>",
        .symbols = .{
            .Xd = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Xn = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Xm = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .shift = .{ .shift = .{} },
            .amount = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 6 } } },
        },
        .encode = .{ .ands, .Xd, .Xn, .{ .shifted_register_explicit = .{
            .register = .Xm,
            .shift = .shift,
            .amount = .amount,
        } } },
    },
    // C6.2.16 ASR (register)
    .{
        .pattern = "ASR <Wd>, <Wn>, <Wm>",
        .symbols = .{
            .Wd = .{ .reg = .{ .format = .{ .general = .word } } },
            .Wn = .{ .reg = .{ .format = .{ .general = .word } } },
            .Wm = .{ .reg = .{ .format = .{ .general = .word } } },
        },
        .encode = .{ .asrv, .Wd, .Wn, .Wm },
    },
    .{
        .pattern = "ASR <Xd>, <Xn>, <Xm>",
        .symbols = .{
            .Xd = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Xn = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Xm = .{ .reg = .{ .format = .{ .general = .doubleword } } },
        },
        .encode = .{ .asrv, .Xd, .Xn, .Xm },
    },
    // C6.2.17 ASR (immediate)
    .{
        .pattern = "ASR <Wd>, <Wn>, #<shift>",
        .symbols = .{
            .Wd = .{ .reg = .{ .format = .{ .general = .word } } },
            .Wn = .{ .reg = .{ .format = .{ .general = .word } } },
            .shift = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 5 } } },
        },
        .encode = .{ .sbfm, .Wd, .Wn, .{ .N = .word, .immr = .shift, .imms = 31 } },
    },
    .{
        .pattern = "ASR <Xd>, <Xn>, #<shift>",
        .symbols = .{
            .Xd = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Xn = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .shift = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 6 } } },
        },
        .encode = .{ .sbfm, .Xd, .Xn, .{ .N = .doubleword, .immr = .shift, .imms = 63 } },
    },
    // C6.2.18 ASRV
    .{
        .pattern = "ASRV <Wd>, <Wn>, <Wm>",
        .symbols = .{
            .Wd = .{ .reg = .{ .format = .{ .general = .word } } },
            .Wn = .{ .reg = .{ .format = .{ .general = .word } } },
            .Wm = .{ .reg = .{ .format = .{ .general = .word } } },
        },
        .encode = .{ .asrv, .Wd, .Wn, .Wm },
    },
    .{
        .pattern = "ASRV <Xd>, <Xn>, <Xm>",
        .symbols = .{
            .Xd = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Xn = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Xm = .{ .reg = .{ .format = .{ .general = .doubleword } } },
        },
        .encode = .{ .asrv, .Xd, .Xn, .Xm },
    },
    // C6.2.24 AXFLAG
    .{
        .requires = .{.altnzcv},
        .pattern = "AXFLAG",
        .symbols = .{},
        .encode = .{.axflag},
    },
    // C6.2.28 BFC
    .{
        .pattern = "BFC <Wd>, #<lsb>, #<width>",
        .symbols = .{
            .Wd = .{ .reg = .{ .format = .{ .general = .word } } },
            .lsb = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 5 }, .adjust = .neg_wrap } },
            .width = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 5 }, .adjust = .dec } },
        },
        .encode = .{ .bfm, .Wd, .wzr, .{ .N = .word, .immr = .lsb, .imms = .width } },
    },
    .{
        .pattern = "BFC <Xd>, #<lsb>, #<width>",
        .symbols = .{
            .Xd = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .lsb = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 6 }, .adjust = .neg_wrap } },
            .width = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 6 }, .adjust = .dec } },
        },
        .encode = .{ .bfm, .Xd, .xzr, .{ .N = .doubleword, .immr = .lsb, .imms = .width } },
    },
    // C6.2.29 BFI
    .{
        .pattern = "BFI <Wd>, <Wn>, #<lsb>, #<width>",
        .symbols = .{
            .Wd = .{ .reg = .{ .format = .{ .general = .word } } },
            .Wn = .{ .reg = .{ .format = .{ .general = .word } } },
            .lsb = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 5 }, .adjust = .neg_wrap } },
            .width = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 5 }, .adjust = .dec } },
        },
        .encode = .{ .bfm, .Wd, .Wn, .{ .N = .word, .immr = .lsb, .imms = .width } },
    },
    .{
        .pattern = "BFI <Xd>, <Xn>, #<lsb>, #<width>",
        .symbols = .{
            .Xd = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Xn = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .lsb = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 6 }, .adjust = .neg_wrap } },
            .width = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 6 }, .adjust = .dec } },
        },
        .encode = .{ .bfm, .Xd, .Xn, .{ .N = .doubleword, .immr = .lsb, .imms = .width } },
    },
    // C6.2.30 BFM
    .{
        .pattern = "BFM <Wd>, <Wn>, #<immr>, #<imms>",
        .symbols = .{
            .Wd = .{ .reg = .{ .format = .{ .general = .word } } },
            .Wn = .{ .reg = .{ .format = .{ .general = .word } } },
            .immr = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 5 } } },
            .imms = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 5 } } },
        },
        .encode = .{ .bfm, .Wd, .Wn, .{ .N = .word, .immr = .immr, .imms = .imms } },
    },
    .{
        .pattern = "BFM <Xd>, <Xn>, #<immr>, #<imms>",
        .symbols = .{
            .Xd = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Xn = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .immr = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 6 } } },
            .imms = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 6 } } },
        },
        .encode = .{ .bfm, .Xd, .Xn, .{ .N = .doubleword, .immr = .immr, .imms = .imms } },
    },
    // C6.2.35 BLR
    .{
        .pattern = "BLR <Xn>",
        .symbols = .{
            .Xn = .{ .reg = .{ .format = .{ .general = .doubleword } } },
        },
        .encode = .{ .blr, .Xn },
    },
    // C6.2.37 BR
    .{
        .pattern = "BR <Xn>",
        .symbols = .{
            .Xn = .{ .reg = .{ .format = .{ .general = .doubleword } } },
        },
        .encode = .{ .br, .Xn },
    },
    // C6.2.40 BRK
    .{
        .pattern = "BRK #<imm>",
        .symbols = .{
            .imm = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 16 } } },
        },
        .encode = .{ .brk, .imm },
    },
    // C6.2.52 CFINV
    .{
        .requires = .{.flagm},
        .pattern = "CFINV",
        .symbols = .{},
        .encode = .{.cfinv},
    },
    // C6.2.56 CLREX
    .{
        .pattern = "CLREX",
        .symbols = .{},
        .encode = .{ .clrex, 0b1111 },
    },
    .{
        .pattern = "CLREX #<imm>",
        .symbols = .{
            .imm = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 4 } } },
        },
        .encode = .{ .clrex, .imm },
    },
    // C6.2.57 CLS
    .{
        .pattern = "CLS <Wd>, <Wn>",
        .symbols = .{
            .Wd = .{ .reg = .{ .format = .{ .general = .word } } },
            .Wn = .{ .reg = .{ .format = .{ .general = .word } } },
        },
        .encode = .{ .cls, .Wd, .Wn },
    },
    .{
        .pattern = "CLS <Xd>, <Xn>",
        .symbols = .{
            .Xd = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Xn = .{ .reg = .{ .format = .{ .general = .doubleword } } },
        },
        .encode = .{ .cls, .Xd, .Xn },
    },
    // C6.2.58 CLZ
    .{
        .pattern = "CLZ <Wd>, <Wn>",
        .symbols = .{
            .Wd = .{ .reg = .{ .format = .{ .general = .word } } },
            .Wn = .{ .reg = .{ .format = .{ .general = .word } } },
        },
        .encode = .{ .clz, .Wd, .Wn },
    },
    .{
        .pattern = "CLZ <Xd>, <Xn>",
        .symbols = .{
            .Xd = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Xn = .{ .reg = .{ .format = .{ .general = .doubleword } } },
        },
        .encode = .{ .clz, .Xd, .Xn },
    },
    // C6.2.109 DC
    .{
        .pattern = "DC IVAC, <Xt>",
        .symbols = .{
            .Xt = .{ .reg = .{ .format = .{ .general = .doubleword } } },
        },
        .encode = .{ .sys, 0b000, 0b0111, 0b0110, 0b001, .Xt },
    },
    .{
        .pattern = "DC ISW, <Xt>",
        .symbols = .{
            .Xt = .{ .reg = .{ .format = .{ .general = .doubleword } } },
        },
        .encode = .{ .sys, 0b000, 0b0111, 0b0110, 0b010, .Xt },
    },
    .{
        .pattern = "DC CSW, <Xt>",
        .symbols = .{
            .Xt = .{ .reg = .{ .format = .{ .general = .doubleword } } },
        },
        .encode = .{ .sys, 0b000, 0b0111, 0b1010, 0b010, .Xt },
    },
    .{
        .pattern = "DC CISW, <Xt>",
        .symbols = .{
            .Xt = .{ .reg = .{ .format = .{ .general = .doubleword } } },
        },
        .encode = .{ .sys, 0b000, 0b0111, 0b1110, 0b010, .Xt },
    },
    .{
        .pattern = "DC ZVA, <Xt>",
        .symbols = .{
            .Xt = .{ .reg = .{ .format = .{ .general = .doubleword } } },
        },
        .encode = .{ .sys, 0b011, 0b0111, 0b0100, 0b001, .Xt },
    },
    .{
        .pattern = "DC CVAC, <Xt>",
        .symbols = .{
            .Xt = .{ .reg = .{ .format = .{ .general = .doubleword } } },
        },
        .encode = .{ .sys, 0b011, 0b0111, 0b1010, 0b001, .Xt },
    },
    .{
        .pattern = "DC CVAU, <Xt>",
        .symbols = .{
            .Xt = .{ .reg = .{ .format = .{ .general = .doubleword } } },
        },
        .encode = .{ .sys, 0b011, 0b0111, 0b1011, 0b001, .Xt },
    },
    .{
        .pattern = "DC CIVAC, <Xt>",
        .symbols = .{
            .Xt = .{ .reg = .{ .format = .{ .general = .doubleword } } },
        },
        .encode = .{ .sys, 0b011, 0b0111, 0b1110, 0b001, .Xt },
    },
    // C6.2.110 DCPS1
    .{
        .pattern = "DCPS1",
        .symbols = .{},
        .encode = .{ .dcps1, 0 },
    },
    .{
        .pattern = "DCPS1 #<imm>",
        .symbols = .{
            .imm = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 16 } } },
        },
        .encode = .{ .dcps1, .imm },
    },
    // C6.2.111 DCPS2
    .{
        .pattern = "DCPS2",
        .symbols = .{},
        .encode = .{ .dcps2, 0 },
    },
    .{
        .pattern = "DCPS2 #<imm>",
        .symbols = .{
            .imm = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 16 } } },
        },
        .encode = .{ .dcps2, .imm },
    },
    // C6.2.112 DCPS3
    .{
        .pattern = "DCPS3",
        .symbols = .{},
        .encode = .{ .dcps3, 0 },
    },
    .{
        .pattern = "DCPS3 #<imm>",
        .symbols = .{
            .imm = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 16 } } },
        },
        .encode = .{ .dcps3, .imm },
    },
    // C6.2.116 DSB
    .{
        .pattern = "DSB <option>",
        .symbols = .{
            .option = .{ .barrier = .{} },
        },
        .encode = .{ .dsb, .option },
    },
    .{
        .pattern = "DSB #<imm>",
        .symbols = .{
            .imm = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 4 } } },
        },
        .encode = .{ .dsb, .imm },
    },
    // C6.2.120 EOR (shifted register)
    .{
        .pattern = "EOR <Wd>, <Wn>, <Wm>",
        .symbols = .{
            .Wd = .{ .reg = .{ .format = .{ .general = .word } } },
            .Wn = .{ .reg = .{ .format = .{ .general = .word } } },
            .Wm = .{ .reg = .{ .format = .{ .general = .word } } },
        },
        .encode = .{ .eor, .Wd, .Wn, .{ .register = .Wm } },
    },
    .{
        .pattern = "EOR <Wd>, <Wn>, <Wm>, <shift> #<amount>",
        .symbols = .{
            .Wd = .{ .reg = .{ .format = .{ .general = .word } } },
            .Wn = .{ .reg = .{ .format = .{ .general = .word } } },
            .Wm = .{ .reg = .{ .format = .{ .general = .word } } },
            .shift = .{ .shift = .{} },
            .amount = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 5 } } },
        },
        .encode = .{ .eor, .Wd, .Wn, .{ .shifted_register_explicit = .{
            .register = .Wm,
            .shift = .shift,
            .amount = .amount,
        } } },
    },
    .{
        .pattern = "EOR <Xd>, <Xn>, <Xm>",
        .symbols = .{
            .Xd = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Xn = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Xm = .{ .reg = .{ .format = .{ .general = .doubleword } } },
        },
        .encode = .{ .eor, .Xd, .Xn, .{ .register = .Xm } },
    },
    .{
        .pattern = "EOR <Xd>, <Xn>, <Xm>, <shift> #<amount>",
        .symbols = .{
            .Xd = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Xn = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Xm = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .shift = .{ .shift = .{} },
            .amount = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 6 } } },
        },
        .encode = .{ .eor, .Xd, .Xn, .{ .shifted_register_explicit = .{
            .register = .Xm,
            .shift = .shift,
            .amount = .amount,
        } } },
    },
    // C6.2.124 EXTR
    .{
        .pattern = "EXTR <Wd>, <Wn>, <Wm>, #<lsb>",
        .symbols = .{
            .Wd = .{ .reg = .{ .format = .{ .general = .word } } },
            .Wn = .{ .reg = .{ .format = .{ .general = .word } } },
            .Wm = .{ .reg = .{ .format = .{ .general = .word } } },
            .lsb = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 5 } } },
        },
        .encode = .{ .extr, .Wd, .Wn, .Wm, .lsb },
    },
    .{
        .pattern = "EXTR <Xd>, <Xn>, <Xm>, #<lsb>",
        .symbols = .{
            .Xd = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Xn = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Xm = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .lsb = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 6 } } },
        },
        .encode = .{ .extr, .Xd, .Xn, .Xm, .lsb },
    },
    // C6.2.126 HINT
    .{
        .pattern = "HINT #<imm>",
        .symbols = .{
            .imm = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 7 } } },
        },
        .encode = .{ .hint, .imm },
    },
    // C6.2.127 HLT
    .{
        .pattern = "HLT #<imm>",
        .symbols = .{
            .imm = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 16 } } },
        },
        .encode = .{ .hlt, .imm },
    },
    // C6.2.128 HVC
    .{
        .pattern = "HVC #<imm>",
        .symbols = .{
            .imm = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 16 } } },
        },
        .encode = .{ .hvc, .imm },
    },
    // C6.2.129 IC
    .{
        .pattern = "IC IALLUIS",
        .symbols = .{},
        .encode = .{ .sys, 0b000, 0b0111, 0b0001, 0b000, .xzr },
    },
    .{
        .pattern = "IC IALLUIS, <Xt>",
        .symbols = .{
            .Xt = .{ .reg = .{ .format = .{ .general = .doubleword } } },
        },
        .encode = .{ .sys, 0b000, 0b0111, 0b0001, 0b000, .Xt },
    },
    .{
        .pattern = "IC IALLU",
        .symbols = .{},
        .encode = .{ .sys, 0b000, 0b0111, 0b0101, 0b000, .xzr },
    },
    .{
        .pattern = "IC IALLU, <Xt>",
        .symbols = .{
            .Xt = .{ .reg = .{ .format = .{ .general = .doubleword } } },
        },
        .encode = .{ .sys, 0b000, 0b0111, 0b0101, 0b000, .Xt },
    },
    .{
        .pattern = "IC IVAU",
        .symbols = .{},
        .encode = .{ .sys, 0b011, 0b0111, 0b0101, 0b001, .xzr },
    },
    .{
        .pattern = "IC IVAU, <Xt>",
        .symbols = .{
            .Xt = .{ .reg = .{ .format = .{ .general = .doubleword } } },
        },
        .encode = .{ .sys, 0b011, 0b0111, 0b0101, 0b001, .Xt },
    },
    // C6.2.131 ISB
    .{
        .pattern = "ISB",
        .symbols = .{},
        .encode = .{ .isb, .sy },
    },
    .{
        .pattern = "ISB <option>",
        .symbols = .{
            .option = .{ .barrier = .{ .only_sy = true } },
        },
        .encode = .{ .isb, .option },
    },
    .{
        .pattern = "ISB #<imm>",
        .symbols = .{
            .imm = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 4 } } },
        },
        .encode = .{ .isb, .imm },
    },
    // C6.2.164 LDP
    .{
        .pattern = "LDP <Wt1>, <Wt2>, [<Xn|SP>], #<imm>",
        .symbols = .{
            .Wt1 = .{ .reg = .{ .format = .{ .general = .word } } },
            .Wt2 = .{ .reg = .{ .format = .{ .general = .word } } },
            .Xn = .{ .reg = .{ .format = .{ .general = .doubleword }, .allow_sp = true } },
            .imm = .{ .imm = .{ .type = .{ .signedness = .signed, .bits = 9 }, .multiple_of = 4 } },
        },
        .encode = .{ .ldp, .Wt1, .Wt2, .{ .post_index = .{ .base = .Xn, .index = .imm } } },
    },
    .{
        .pattern = "LDP <Xt1>, <Xt2>, [<Xn|SP>], #<imm>",
        .symbols = .{
            .Xt1 = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Xt2 = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Xn = .{ .reg = .{ .format = .{ .general = .doubleword }, .allow_sp = true } },
            .imm = .{ .imm = .{ .type = .{ .signedness = .signed, .bits = 10 }, .multiple_of = 8 } },
        },
        .encode = .{ .ldp, .Xt1, .Xt2, .{ .post_index = .{ .base = .Xn, .index = .imm } } },
    },
    .{
        .pattern = "LDP <Wt1>, <Wt2>, [<Xn|SP>, #<imm>]!",
        .symbols = .{
            .Wt1 = .{ .reg = .{ .format = .{ .general = .word } } },
            .Wt2 = .{ .reg = .{ .format = .{ .general = .word } } },
            .Xn = .{ .reg = .{ .format = .{ .general = .doubleword }, .allow_sp = true } },
            .imm = .{ .imm = .{ .type = .{ .signedness = .signed, .bits = 9 }, .multiple_of = 4 } },
        },
        .encode = .{ .ldp, .Wt1, .Wt2, .{ .pre_index = .{ .base = .Xn, .index = .imm } } },
    },
    .{
        .pattern = "LDP <Xt1>, <Xt2>, [<Xn|SP>, #<imm>]!",
        .symbols = .{
            .Xt1 = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Xt2 = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Xn = .{ .reg = .{ .format = .{ .general = .doubleword }, .allow_sp = true } },
            .imm = .{ .imm = .{ .type = .{ .signedness = .signed, .bits = 10 }, .multiple_of = 8 } },
        },
        .encode = .{ .ldp, .Xt1, .Xt2, .{ .pre_index = .{ .base = .Xn, .index = .imm } } },
    },
    .{
        .pattern = "LDP <Wt1>, <Wt2>, [<Xn|SP>]",
        .symbols = .{
            .Wt1 = .{ .reg = .{ .format = .{ .general = .word } } },
            .Wt2 = .{ .reg = .{ .format = .{ .general = .word } } },
            .Xn = .{ .reg = .{ .format = .{ .general = .doubleword }, .allow_sp = true } },
        },
        .encode = .{ .ldp, .Wt1, .Wt2, .{ .base = .Xn } },
    },
    .{
        .pattern = "LDP <Wt1>, <Wt2>, [<Xn|SP>, #<imm>]",
        .symbols = .{
            .Wt1 = .{ .reg = .{ .format = .{ .general = .word } } },
            .Wt2 = .{ .reg = .{ .format = .{ .general = .word } } },
            .Xn = .{ .reg = .{ .format = .{ .general = .doubleword }, .allow_sp = true } },
            .imm = .{ .imm = .{ .type = .{ .signedness = .signed, .bits = 9 }, .multiple_of = 4 } },
        },
        .encode = .{ .ldp, .Wt1, .Wt2, .{ .signed_offset = .{ .base = .Xn, .offset = .imm } } },
    },
    .{
        .pattern = "LDP <Xt1>, <Xt2>, [<Xn|SP>]",
        .symbols = .{
            .Xt1 = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Xt2 = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Xn = .{ .reg = .{ .format = .{ .general = .doubleword }, .allow_sp = true } },
        },
        .encode = .{ .ldp, .Xt1, .Xt2, .{ .base = .Xn } },
    },
    .{
        .pattern = "LDP <Xt1>, <Xt2>, [<Xn|SP>, #<imm>]",
        .symbols = .{
            .Xt1 = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Xt2 = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Xn = .{ .reg = .{ .format = .{ .general = .doubleword }, .allow_sp = true } },
            .imm = .{ .imm = .{ .type = .{ .signedness = .signed, .bits = 10 }, .multiple_of = 8 } },
        },
        .encode = .{ .ldp, .Xt1, .Xt2, .{ .signed_offset = .{ .base = .Xn, .offset = .imm } } },
    },
    // C6.2.166 LDR (immediate)
    .{
        .pattern = "LDR <Wt>, [<Xn|SP>], #<simm>",
        .symbols = .{
            .Wt = .{ .reg = .{ .format = .{ .general = .word } } },
            .Xn = .{ .reg = .{ .format = .{ .general = .doubleword }, .allow_sp = true } },
            .simm = .{ .imm = .{ .type = .{ .signedness = .signed, .bits = 9 } } },
        },
        .encode = .{ .ldr, .Wt, .{ .post_index = .{ .base = .Xn, .index = .simm } } },
    },
    .{
        .pattern = "LDR <Xt>, [<Xn|SP>], #<simm>",
        .symbols = .{
            .Xt = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Xn = .{ .reg = .{ .format = .{ .general = .doubleword }, .allow_sp = true } },
            .simm = .{ .imm = .{ .type = .{ .signedness = .signed, .bits = 9 } } },
        },
        .encode = .{ .ldr, .Xt, .{ .post_index = .{ .base = .Xn, .index = .simm } } },
    },
    .{
        .pattern = "LDR <Wt>, [<Xn|SP>, #<simm>]!",
        .symbols = .{
            .Wt = .{ .reg = .{ .format = .{ .general = .word } } },
            .Xn = .{ .reg = .{ .format = .{ .general = .doubleword }, .allow_sp = true } },
            .simm = .{ .imm = .{ .type = .{ .signedness = .signed, .bits = 9 } } },
        },
        .encode = .{ .ldr, .Wt, .{ .pre_index = .{ .base = .Xn, .index = .simm } } },
    },
    .{
        .pattern = "LDR <Xt>, [<Xn|SP>, #<simm>]!",
        .symbols = .{
            .Xt = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Xn = .{ .reg = .{ .format = .{ .general = .doubleword }, .allow_sp = true } },
            .simm = .{ .imm = .{ .type = .{ .signedness = .signed, .bits = 9 } } },
        },
        .encode = .{ .ldr, .Xt, .{ .pre_index = .{ .base = .Xn, .index = .simm } } },
    },
    .{
        .pattern = "LDR <Wt>, [<Xn|SP>]",
        .symbols = .{
            .Wt = .{ .reg = .{ .format = .{ .general = .word } } },
            .Xn = .{ .reg = .{ .format = .{ .general = .doubleword }, .allow_sp = true } },
        },
        .encode = .{ .ldr, .Wt, .{ .base = .Xn } },
    },
    .{
        .pattern = "LDR <Wt>, [<Xn|SP>, #<pimm>]",
        .symbols = .{
            .Wt = .{ .reg = .{ .format = .{ .general = .word } } },
            .Xn = .{ .reg = .{ .format = .{ .general = .doubleword }, .allow_sp = true } },
            .pimm = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 14 }, .multiple_of = 4 } },
        },
        .encode = .{ .ldr, .Wt, .{ .unsigned_offset = .{ .base = .Xn, .offset = .pimm } } },
    },
    .{
        .pattern = "LDR <Xt>, [<Xn|SP>]",
        .symbols = .{
            .Xt = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Xn = .{ .reg = .{ .format = .{ .general = .doubleword }, .allow_sp = true } },
        },
        .encode = .{ .ldr, .Xt, .{ .base = .Xn } },
    },
    .{
        .pattern = "LDR <Xt>, [<Xn|SP>, #<pimm>]",
        .symbols = .{
            .Xt = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Xn = .{ .reg = .{ .format = .{ .general = .doubleword }, .allow_sp = true } },
            .pimm = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 15 }, .multiple_of = 8 } },
        },
        .encode = .{ .ldr, .Xt, .{ .unsigned_offset = .{ .base = .Xn, .offset = .pimm } } },
    },
    // C6.2.212 LSL (register)
    .{
        .pattern = "LSL <Wd>, <Wn>, <Wm>",
        .symbols = .{
            .Wd = .{ .reg = .{ .format = .{ .general = .word } } },
            .Wn = .{ .reg = .{ .format = .{ .general = .word } } },
            .Wm = .{ .reg = .{ .format = .{ .general = .word } } },
        },
        .encode = .{ .lslv, .Wd, .Wn, .Wm },
    },
    .{
        .pattern = "LSL <Xd>, <Xn>, <Xm>",
        .symbols = .{
            .Xd = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Xn = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Xm = .{ .reg = .{ .format = .{ .general = .doubleword } } },
        },
        .encode = .{ .lslv, .Xd, .Xn, .Xm },
    },
    // C6.2.214 LSLV
    .{
        .pattern = "LSLV <Wd>, <Wn>, <Wm>",
        .symbols = .{
            .Wd = .{ .reg = .{ .format = .{ .general = .word } } },
            .Wn = .{ .reg = .{ .format = .{ .general = .word } } },
            .Wm = .{ .reg = .{ .format = .{ .general = .word } } },
        },
        .encode = .{ .lslv, .Wd, .Wn, .Wm },
    },
    .{
        .pattern = "LSLV <Xd>, <Xn>, <Xm>",
        .symbols = .{
            .Xd = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Xn = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Xm = .{ .reg = .{ .format = .{ .general = .doubleword } } },
        },
        .encode = .{ .lslv, .Xd, .Xn, .Xm },
    },
    // C6.2.215 LSR (register)
    .{
        .pattern = "LSR <Wd>, <Wn>, <Wm>",
        .symbols = .{
            .Wd = .{ .reg = .{ .format = .{ .general = .word } } },
            .Wn = .{ .reg = .{ .format = .{ .general = .word } } },
            .Wm = .{ .reg = .{ .format = .{ .general = .word } } },
        },
        .encode = .{ .lsrv, .Wd, .Wn, .Wm },
    },
    .{
        .pattern = "LSR <Xd>, <Xn>, <Xm>",
        .symbols = .{
            .Xd = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Xn = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Xm = .{ .reg = .{ .format = .{ .general = .doubleword } } },
        },
        .encode = .{ .lsrv, .Xd, .Xn, .Xm },
    },
    // C6.2.217 LSRV
    .{
        .pattern = "LSRV <Wd>, <Wn>, <Wm>",
        .symbols = .{
            .Wd = .{ .reg = .{ .format = .{ .general = .word } } },
            .Wn = .{ .reg = .{ .format = .{ .general = .word } } },
            .Wm = .{ .reg = .{ .format = .{ .general = .word } } },
        },
        .encode = .{ .lsrv, .Wd, .Wn, .Wm },
    },
    .{
        .pattern = "LSRV <Xd>, <Xn>, <Xm>",
        .symbols = .{
            .Xd = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Xn = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Xm = .{ .reg = .{ .format = .{ .general = .doubleword } } },
        },
        .encode = .{ .lsrv, .Xd, .Xn, .Xm },
    },
    // C6.2.218 MADD
    .{
        .pattern = "MADD <Wd>, <Wn>, <Wm>, <Wa>",
        .symbols = .{
            .Wd = .{ .reg = .{ .format = .{ .general = .word } } },
            .Wn = .{ .reg = .{ .format = .{ .general = .word } } },
            .Wm = .{ .reg = .{ .format = .{ .general = .word } } },
            .Wa = .{ .reg = .{ .format = .{ .general = .word } } },
        },
        .encode = .{ .madd, .Wd, .Wn, .Wm, .Wa },
    },
    .{
        .pattern = "MADD <Xd>, <Xn>, <Xm>, <Xa>",
        .symbols = .{
            .Xd = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Xn = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Xm = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Xa = .{ .reg = .{ .format = .{ .general = .doubleword } } },
        },
        .encode = .{ .madd, .Xd, .Xn, .Xm, .Xa },
    },
    // C6.2.219 MNEG
    .{
        .pattern = "MNEG <Wd>, <Wn>, <Wm>",
        .symbols = .{
            .Wd = .{ .reg = .{ .format = .{ .general = .word } } },
            .Wn = .{ .reg = .{ .format = .{ .general = .word } } },
            .Wm = .{ .reg = .{ .format = .{ .general = .word } } },
        },
        .encode = .{ .msub, .Wd, .Wn, .Wm, .wzr },
    },
    .{
        .pattern = "MNEG <Xd>, <Xn>, <Xm>",
        .symbols = .{
            .Xd = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Xn = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Xm = .{ .reg = .{ .format = .{ .general = .doubleword } } },
        },
        .encode = .{ .msub, .Xd, .Xn, .Xm, .xzr },
    },
    // C6.2.220 MOV (to/from SP)
    .{
        .pattern = "MOV WSP, <Wn|WSP>",
        .symbols = .{
            .Wn = .{ .reg = .{ .format = .{ .general = .word }, .allow_sp = true } },
        },
        .encode = .{ .add, .wsp, .Wn, .{ .immediate = 0 } },
    },
    .{
        .pattern = "MOV <Wd|WSP>, WSP",
        .symbols = .{
            .Wd = .{ .reg = .{ .format = .{ .general = .word }, .allow_sp = true } },
        },
        .encode = .{ .add, .Wd, .wsp, .{ .immediate = 0 } },
    },
    .{
        .pattern = "MOV SP, <Xn|SP>",
        .symbols = .{
            .Xn = .{ .reg = .{ .format = .{ .general = .doubleword }, .allow_sp = true } },
        },
        .encode = .{ .add, .sp, .Xn, .{ .immediate = 0 } },
    },
    .{
        .pattern = "MOV <Xd|SP>, SP",
        .symbols = .{
            .Xd = .{ .reg = .{ .format = .{ .general = .doubleword }, .allow_sp = true } },
        },
        .encode = .{ .add, .Xd, .sp, .{ .immediate = 0 } },
    },
    // C6.2.222 MOV (wide immediate)
    .{
        .pattern = "MOV <Wd>, #<imm>",
        .symbols = .{
            .Wd = .{ .reg = .{ .format = .{ .general = .word } } },
            .imm = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 16 } } },
        },
        .encode = .{ .movz, .Wd, .imm, .{ .lsl = .@"0" } },
    },
    .{
        .pattern = "MOV <Xd>, #<imm>",
        .symbols = .{
            .Xd = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .imm = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 16 } } },
        },
        .encode = .{ .movz, .Xd, .imm, .{ .lsl = .@"0" } },
    },
    // C6.2.224 MOV (register)
    .{
        .pattern = "MOV <Wd>, <Wm>",
        .symbols = .{
            .Wd = .{ .reg = .{ .format = .{ .general = .word } } },
            .Wm = .{ .reg = .{ .format = .{ .general = .word } } },
        },
        .encode = .{ .orr, .Wd, .wzr, .{ .register = .Wm } },
    },
    .{
        .pattern = "MOV <Xd>, <Xm>",
        .symbols = .{
            .Xd = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Xm = .{ .reg = .{ .format = .{ .general = .doubleword } } },
        },
        .encode = .{ .orr, .Xd, .xzr, .{ .register = .Xm } },
    },
    // C6.2.225 MOVK
    .{
        .pattern = "MOVK <Wd>, #<imm>",
        .symbols = .{
            .Wd = .{ .reg = .{ .format = .{ .general = .word } } },
            .imm = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 16 } } },
        },
        .encode = .{ .movk, .Wd, .imm, .{} },
    },
    .{
        .pattern = "MOVK <Wd>, #<imm>, LSL #<shift>",
        .symbols = .{
            .Wd = .{ .reg = .{ .format = .{ .general = .word } } },
            .imm = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 16 } } },
            .shift = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 5 }, .multiple_of = 16 } },
        },
        .encode = .{ .movk, .Wd, .imm, .{ .lsl = .shift } },
    },
    .{
        .pattern = "MOVK <Xd>, #<imm>",
        .symbols = .{
            .Xd = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .imm = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 16 } } },
        },
        .encode = .{ .movk, .Xd, .imm, .{} },
    },
    .{
        .pattern = "MOVK <Xd>, #<imm>, LSL #<shift>",
        .symbols = .{
            .Xd = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .imm = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 16 } } },
            .shift = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 6 }, .multiple_of = 16 } },
        },
        .encode = .{ .movk, .Xd, .imm, .{ .lsl = .shift } },
    },
    // C6.2.226 MOVN
    .{
        .pattern = "MOVN <Wd>, #<imm>",
        .symbols = .{
            .Wd = .{ .reg = .{ .format = .{ .general = .word } } },
            .imm = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 16 } } },
        },
        .encode = .{ .movn, .Wd, .imm, .{} },
    },
    .{
        .pattern = "MOVN <Wd>, #<imm>, LSL #<shift>",
        .symbols = .{
            .Wd = .{ .reg = .{ .format = .{ .general = .word } } },
            .imm = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 16 } } },
            .shift = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 5 }, .multiple_of = 16 } },
        },
        .encode = .{ .movn, .Wd, .imm, .{ .lsl = .shift } },
    },
    .{
        .pattern = "MOVN <Xd>, #<imm>",
        .symbols = .{
            .Xd = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .imm = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 16 } } },
        },
        .encode = .{ .movn, .Xd, .imm, .{} },
    },
    .{
        .pattern = "MOVN <Xd>, #<imm>, LSL #<shift>",
        .symbols = .{
            .Xd = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .imm = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 16 } } },
            .shift = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 6 }, .multiple_of = 16 } },
        },
        .encode = .{ .movn, .Xd, .imm, .{ .lsl = .shift } },
    },
    // C6.2.227 MOVZ
    .{
        .pattern = "MOVZ <Wd>, #<imm>",
        .symbols = .{
            .Wd = .{ .reg = .{ .format = .{ .general = .word } } },
            .imm = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 16 } } },
        },
        .encode = .{ .movz, .Wd, .imm, .{} },
    },
    .{
        .pattern = "MOVZ <Wd>, #<imm>, LSL #<shift>",
        .symbols = .{
            .Wd = .{ .reg = .{ .format = .{ .general = .word } } },
            .imm = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 16 } } },
            .shift = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 5 }, .multiple_of = 16 } },
        },
        .encode = .{ .movz, .Wd, .imm, .{ .lsl = .shift } },
    },
    .{
        .pattern = "MOVZ <Xd>, #<imm>",
        .symbols = .{
            .Xd = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .imm = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 16 } } },
        },
        .encode = .{ .movz, .Xd, .imm, .{} },
    },
    .{
        .pattern = "MOVZ <Xd>, #<imm>, LSL #<shift>",
        .symbols = .{
            .Xd = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .imm = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 16 } } },
            .shift = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 6 }, .multiple_of = 16 } },
        },
        .encode = .{ .movz, .Xd, .imm, .{ .lsl = .shift } },
    },
    // C6.2.228 MRS
    .{
        .pattern = "MRS <Xt>, <systemreg>",
        .symbols = .{
            .Xt = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .systemreg = .systemreg,
        },
        .encode = .{ .mrs, .Xt, .systemreg },
    },
    // C6.2.230 MSR (register)
    .{
        .pattern = "MSR <systemreg>, <Xt>",
        .symbols = .{
            .systemreg = .systemreg,
            .Xt = .{ .reg = .{ .format = .{ .general = .doubleword } } },
        },
        .encode = .{ .msr, .systemreg, .Xt },
    },
    // C6.2.231 MSUB
    .{
        .pattern = "MSUB <Wd>, <Wn>, <Wm>, <Wa>",
        .symbols = .{
            .Wd = .{ .reg = .{ .format = .{ .general = .word } } },
            .Wn = .{ .reg = .{ .format = .{ .general = .word } } },
            .Wm = .{ .reg = .{ .format = .{ .general = .word } } },
            .Wa = .{ .reg = .{ .format = .{ .general = .word } } },
        },
        .encode = .{ .msub, .Wd, .Wn, .Wm, .Wa },
    },
    .{
        .pattern = "MSUB <Xd>, <Xn>, <Xm>, <Xa>",
        .symbols = .{
            .Xd = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Xn = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Xm = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Xa = .{ .reg = .{ .format = .{ .general = .doubleword } } },
        },
        .encode = .{ .msub, .Xd, .Xn, .Xm, .Xa },
    },
    // C6.2.232 MUL
    .{
        .pattern = "MUL <Wd>, <Wn>, <Wm>",
        .symbols = .{
            .Wd = .{ .reg = .{ .format = .{ .general = .word } } },
            .Wn = .{ .reg = .{ .format = .{ .general = .word } } },
            .Wm = .{ .reg = .{ .format = .{ .general = .word } } },
        },
        .encode = .{ .madd, .Wd, .Wn, .Wm, .wzr },
    },
    .{
        .pattern = "MUL <Xd>, <Xn>, <Xm>",
        .symbols = .{
            .Xd = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Xn = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Xm = .{ .reg = .{ .format = .{ .general = .doubleword } } },
        },
        .encode = .{ .madd, .Xd, .Xn, .Xm, .xzr },
    },
    // C6.2.234 NEG
    .{
        .pattern = "NEG <Wd>, <Wm>",
        .symbols = .{
            .Wd = .{ .reg = .{ .format = .{ .general = .word } } },
            .Wm = .{ .reg = .{ .format = .{ .general = .word } } },
        },
        .encode = .{ .sub, .Wd, .wzr, .{ .register = .Wm } },
    },
    .{
        .pattern = "NEG <Wd>, <Wm>, <shift> #<amount>",
        .symbols = .{
            .Wd = .{ .reg = .{ .format = .{ .general = .word } } },
            .Wm = .{ .reg = .{ .format = .{ .general = .word } } },
            .shift = .{ .shift = .{ .allow_ror = false } },
            .amount = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 5 } } },
        },
        .encode = .{ .sub, .Wd, .wzr, .{ .shifted_register_explicit = .{
            .register = .Wm,
            .shift = .shift,
            .amount = .amount,
        } } },
    },
    .{
        .pattern = "NEG <Xd>, <Xm>",
        .symbols = .{
            .Xd = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Xm = .{ .reg = .{ .format = .{ .general = .doubleword } } },
        },
        .encode = .{ .sub, .Xd, .xzr, .{ .register = .Xm } },
    },
    .{
        .pattern = "NEG <Xd>, <Xm>, <shift> #<amount>",
        .symbols = .{
            .Xd = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Xm = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .shift = .{ .shift = .{ .allow_ror = false } },
            .amount = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 6 } } },
        },
        .encode = .{ .sub, .Xd, .xzr, .{ .shifted_register_explicit = .{
            .register = .Xm,
            .shift = .shift,
            .amount = .amount,
        } } },
    },
    // C6.2.238 NOP
    .{
        .pattern = "NOP",
        .symbols = .{},
        .encode = .{.nop},
    },
    // C6.2.241 ORR (shifted register)
    .{
        .pattern = "ORR <Wd>, <Wn>, <Wm>",
        .symbols = .{
            .Wd = .{ .reg = .{ .format = .{ .general = .word } } },
            .Wn = .{ .reg = .{ .format = .{ .general = .word } } },
            .Wm = .{ .reg = .{ .format = .{ .general = .word } } },
        },
        .encode = .{ .orr, .Wd, .Wn, .{ .register = .Wm } },
    },
    .{
        .pattern = "ORR <Wd>, <Wn>, <Wm>, <shift> #<amount>",
        .symbols = .{
            .Wd = .{ .reg = .{ .format = .{ .general = .word } } },
            .Wn = .{ .reg = .{ .format = .{ .general = .word } } },
            .Wm = .{ .reg = .{ .format = .{ .general = .word } } },
            .shift = .{ .shift = .{} },
            .amount = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 5 } } },
        },
        .encode = .{ .orr, .Wd, .Wn, .{ .shifted_register_explicit = .{
            .register = .Wm,
            .shift = .shift,
            .amount = .amount,
        } } },
    },
    .{
        .pattern = "ORR <Xd>, <Xn>, <Xm>",
        .symbols = .{
            .Xd = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Xn = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Xm = .{ .reg = .{ .format = .{ .general = .doubleword } } },
        },
        .encode = .{ .orr, .Xd, .Xn, .{ .register = .Xm } },
    },
    .{
        .pattern = "ORR <Xd>, <Xn>, <Xm>, <shift> #<amount>",
        .symbols = .{
            .Xd = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Xn = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Xm = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .shift = .{ .shift = .{} },
            .amount = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 6 } } },
        },
        .encode = .{ .orr, .Xd, .Xn, .{ .shifted_register_explicit = .{
            .register = .Xm,
            .shift = .shift,
            .amount = .amount,
        } } },
    },
    // C6.2.253 RBIT
    .{
        .pattern = "RBIT <Wd>, <Wn>",
        .symbols = .{
            .Wd = .{ .reg = .{ .format = .{ .general = .word } } },
            .Wn = .{ .reg = .{ .format = .{ .general = .word } } },
        },
        .encode = .{ .rbit, .Wd, .Wn },
    },
    .{
        .pattern = "RBIT <Xd>, <Xn>",
        .symbols = .{
            .Xd = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Xn = .{ .reg = .{ .format = .{ .general = .doubleword } } },
        },
        .encode = .{ .rbit, .Xd, .Xn },
    },
    // C6.2.254 RET
    .{
        .pattern = "RET",
        .symbols = .{},
        .encode = .{ .ret, .x30 },
    },
    .{
        .pattern = "RET <Xn>",
        .symbols = .{
            .Xn = .{ .reg = .{ .format = .{ .general = .doubleword } } },
        },
        .encode = .{ .ret, .Xn },
    },
    // C6.2.256 REV
    .{
        .pattern = "REV <Wd>, <Wn>",
        .symbols = .{
            .Wd = .{ .reg = .{ .format = .{ .general = .word } } },
            .Wn = .{ .reg = .{ .format = .{ .general = .word } } },
        },
        .encode = .{ .rev, .Wd, .Wn },
    },
    .{
        .pattern = "REV <Xd>, <Xn>",
        .symbols = .{
            .Xd = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Xn = .{ .reg = .{ .format = .{ .general = .doubleword } } },
        },
        .encode = .{ .rev, .Xd, .Xn },
    },
    // C6.2.257 REV16
    .{
        .pattern = "REV16 <Wd>, <Wn>",
        .symbols = .{
            .Wd = .{ .reg = .{ .format = .{ .general = .word } } },
            .Wn = .{ .reg = .{ .format = .{ .general = .word } } },
        },
        .encode = .{ .rev16, .Wd, .Wn },
    },
    .{
        .pattern = "REV16 <Xd>, <Xn>",
        .symbols = .{
            .Xd = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Xn = .{ .reg = .{ .format = .{ .general = .doubleword } } },
        },
        .encode = .{ .rev16, .Xd, .Xn },
    },
    // C6.2.258 REV32
    .{
        .pattern = "REV32 <Xd>, <Xn>",
        .symbols = .{
            .Xd = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Xn = .{ .reg = .{ .format = .{ .general = .doubleword } } },
        },
        .encode = .{ .rev32, .Xd, .Xn },
    },
    // C6.2.259 REV64
    .{
        .pattern = "REV64 <Xd>, <Xn>",
        .symbols = .{
            .Xd = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Xn = .{ .reg = .{ .format = .{ .general = .doubleword } } },
        },
        .encode = .{ .rev, .Xd, .Xn },
    },
    // C6.2.261 ROR (immediate)
    .{
        .pattern = "ROR <Wd>, <Ws>, #<shift>",
        .symbols = .{
            .Wd = .{ .reg = .{ .format = .{ .general = .word } } },
            .Ws = .{ .reg = .{ .format = .{ .general = .word } } },
            .shift = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 5 } } },
        },
        .encode = .{ .extr, .Wd, .Ws, .Ws, .shift },
    },
    .{
        .pattern = "ROR <Xd>, <Xs>, #<shift>",
        .symbols = .{
            .Xd = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Xs = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .shift = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 6 } } },
        },
        .encode = .{ .extr, .Xd, .Xs, .Xs, .shift },
    },
    // C6.2.262 ROR (register)
    .{
        .pattern = "ROR <Wd>, <Wn>, <Wm>",
        .symbols = .{
            .Wd = .{ .reg = .{ .format = .{ .general = .word } } },
            .Wn = .{ .reg = .{ .format = .{ .general = .word } } },
            .Wm = .{ .reg = .{ .format = .{ .general = .word } } },
        },
        .encode = .{ .rorv, .Wd, .Wn, .Wm },
    },
    .{
        .pattern = "ROR <Xd>, <Xn>, <Xm>",
        .symbols = .{
            .Xd = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Xn = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Xm = .{ .reg = .{ .format = .{ .general = .doubleword } } },
        },
        .encode = .{ .rorv, .Xd, .Xn, .Xm },
    },
    // C6.2.263 RORV
    .{
        .pattern = "RORV <Wd>, <Wn>, <Wm>",
        .symbols = .{
            .Wd = .{ .reg = .{ .format = .{ .general = .word } } },
            .Wn = .{ .reg = .{ .format = .{ .general = .word } } },
            .Wm = .{ .reg = .{ .format = .{ .general = .word } } },
        },
        .encode = .{ .rorv, .Wd, .Wn, .Wm },
    },
    .{
        .pattern = "RORV <Xd>, <Xn>, <Xm>",
        .symbols = .{
            .Xd = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Xn = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Xm = .{ .reg = .{ .format = .{ .general = .doubleword } } },
        },
        .encode = .{ .rorv, .Xd, .Xn, .Xm },
    },
    // C6.2.265 SBC
    .{
        .pattern = "SBC <Wd>, <Wn>, <Wm>",
        .symbols = .{
            .Wd = .{ .reg = .{ .format = .{ .general = .word } } },
            .Wn = .{ .reg = .{ .format = .{ .general = .word } } },
            .Wm = .{ .reg = .{ .format = .{ .general = .word } } },
        },
        .encode = .{ .sbc, .Wd, .Wn, .Wm },
    },
    .{
        .pattern = "SBC <Xd>, <Xn>, <Xm>",
        .symbols = .{
            .Xd = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Xn = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Xm = .{ .reg = .{ .format = .{ .general = .doubleword } } },
        },
        .encode = .{ .sbc, .Xd, .Xn, .Xm },
    },
    // C6.2.266 SBCS
    .{
        .pattern = "SBCS <Wd>, <Wn>, <Wm>",
        .symbols = .{
            .Wd = .{ .reg = .{ .format = .{ .general = .word } } },
            .Wn = .{ .reg = .{ .format = .{ .general = .word } } },
            .Wm = .{ .reg = .{ .format = .{ .general = .word } } },
        },
        .encode = .{ .sbcs, .Wd, .Wn, .Wm },
    },
    .{
        .pattern = "SBCS <Xd>, <Xn>, <Xm>",
        .symbols = .{
            .Xd = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Xn = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Xm = .{ .reg = .{ .format = .{ .general = .doubleword } } },
        },
        .encode = .{ .sbcs, .Xd, .Xn, .Xm },
    },
    // C6.2.268 SBFM
    .{
        .pattern = "SBFM <Wd>, <Wn>, #<immr>, #<imms>",
        .symbols = .{
            .Wd = .{ .reg = .{ .format = .{ .general = .word } } },
            .Wn = .{ .reg = .{ .format = .{ .general = .word } } },
            .immr = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 5 } } },
            .imms = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 5 } } },
        },
        .encode = .{ .sbfm, .Wd, .Wn, .{ .N = .word, .immr = .immr, .imms = .imms } },
    },
    .{
        .pattern = "SBFM <Xd>, <Xn>, #<immr>, #<imms>",
        .symbols = .{
            .Xd = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Xn = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .immr = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 6 } } },
            .imms = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 6 } } },
        },
        .encode = .{ .sbfm, .Xd, .Xn, .{ .N = .doubleword, .immr = .immr, .imms = .imms } },
    },
    // C6.2.270 SDIV
    .{
        .pattern = "SDIV <Wd>, <Wn>, <Wm>",
        .symbols = .{
            .Wd = .{ .reg = .{ .format = .{ .general = .word } } },
            .Wn = .{ .reg = .{ .format = .{ .general = .word } } },
            .Wm = .{ .reg = .{ .format = .{ .general = .word } } },
        },
        .encode = .{ .sdiv, .Wd, .Wn, .Wm },
    },
    .{
        .pattern = "SDIV <Xd>, <Xn>, <Xm>",
        .symbols = .{
            .Xd = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Xn = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Xm = .{ .reg = .{ .format = .{ .general = .doubleword } } },
        },
        .encode = .{ .sdiv, .Xd, .Xn, .Xm },
    },
    // C6.2.280 SEV
    .{
        .pattern = "SEV",
        .symbols = .{},
        .encode = .{.sev},
    },
    // C6.2.281 SEVL
    .{
        .pattern = "SEVL",
        .symbols = .{},
        .encode = .{.sevl},
    },
    // C6.2.282 SMADDL
    .{
        .pattern = "SMADDL <Xd>, <Wn>, <Wm>, <Xa>",
        .symbols = .{
            .Xd = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Wn = .{ .reg = .{ .format = .{ .general = .word } } },
            .Wm = .{ .reg = .{ .format = .{ .general = .word } } },
            .Xa = .{ .reg = .{ .format = .{ .general = .doubleword } } },
        },
        .encode = .{ .smaddl, .Xd, .Wn, .Wm, .Xa },
    },
    // C6.2.283 SMC
    .{
        .pattern = "SMC #<imm>",
        .symbols = .{
            .imm = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 16 } } },
        },
        .encode = .{ .smc, .imm },
    },
    // C6.2.284 SMNEGL
    .{
        .pattern = "SMNEGL <Xd>, <Wn>, <Wm>",
        .symbols = .{
            .Xd = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Wn = .{ .reg = .{ .format = .{ .general = .word } } },
            .Wm = .{ .reg = .{ .format = .{ .general = .word } } },
        },
        .encode = .{ .smsubl, .Xd, .Wn, .Wm, .xzr },
    },
    // C6.2.287 SMSUBL
    .{
        .pattern = "SMSUBL <Xd>, <Wn>, <Wm>, <Xa>",
        .symbols = .{
            .Xd = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Wn = .{ .reg = .{ .format = .{ .general = .word } } },
            .Wm = .{ .reg = .{ .format = .{ .general = .word } } },
            .Xa = .{ .reg = .{ .format = .{ .general = .doubleword } } },
        },
        .encode = .{ .smsubl, .Xd, .Wn, .Wm, .Xa },
    },
    // C6.2.288 SMULH
    .{
        .pattern = "SMULH <Xd>, <Xn>, <Xm>",
        .symbols = .{
            .Xd = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Xn = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Xm = .{ .reg = .{ .format = .{ .general = .doubleword } } },
        },
        .encode = .{ .smulh, .Xd, .Xn, .Xm },
    },
    // C6.2.289 SMULL
    .{
        .pattern = "SMULL <Xd>, <Wn>, <Wm>",
        .symbols = .{
            .Xd = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Wn = .{ .reg = .{ .format = .{ .general = .word } } },
            .Wm = .{ .reg = .{ .format = .{ .general = .word } } },
        },
        .encode = .{ .smaddl, .Xd, .Wn, .Wm, .xzr },
    },
    // C6.2.321 STP
    .{
        .pattern = "STP <Wt1>, <Wt2>, [<Xn|SP>], #<imm>",
        .symbols = .{
            .Wt1 = .{ .reg = .{ .format = .{ .general = .word } } },
            .Wt2 = .{ .reg = .{ .format = .{ .general = .word } } },
            .Xn = .{ .reg = .{ .format = .{ .general = .doubleword }, .allow_sp = true } },
            .imm = .{ .imm = .{ .type = .{ .signedness = .signed, .bits = 9 }, .multiple_of = 4 } },
        },
        .encode = .{ .stp, .Wt1, .Wt2, .{ .post_index = .{ .base = .Xn, .index = .imm } } },
    },
    .{
        .pattern = "STP <Xt1>, <Xt2>, [<Xn|SP>], #<imm>",
        .symbols = .{
            .Xt1 = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Xt2 = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Xn = .{ .reg = .{ .format = .{ .general = .doubleword }, .allow_sp = true } },
            .imm = .{ .imm = .{ .type = .{ .signedness = .signed, .bits = 10 }, .multiple_of = 8 } },
        },
        .encode = .{ .stp, .Xt1, .Xt2, .{ .post_index = .{ .base = .Xn, .index = .imm } } },
    },
    .{
        .pattern = "STP <Wt1>, <Wt2>, [<Xn|SP>, #<imm>]!",
        .symbols = .{
            .Wt1 = .{ .reg = .{ .format = .{ .general = .word } } },
            .Wt2 = .{ .reg = .{ .format = .{ .general = .word } } },
            .Xn = .{ .reg = .{ .format = .{ .general = .doubleword }, .allow_sp = true } },
            .imm = .{ .imm = .{ .type = .{ .signedness = .signed, .bits = 9 }, .multiple_of = 4 } },
        },
        .encode = .{ .stp, .Wt1, .Wt2, .{ .pre_index = .{ .base = .Xn, .index = .imm } } },
    },
    .{
        .pattern = "STP <Xt1>, <Xt2>, [<Xn|SP>, #<imm>]!",
        .symbols = .{
            .Xt1 = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Xt2 = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Xn = .{ .reg = .{ .format = .{ .general = .doubleword }, .allow_sp = true } },
            .imm = .{ .imm = .{ .type = .{ .signedness = .signed, .bits = 10 }, .multiple_of = 8 } },
        },
        .encode = .{ .stp, .Xt1, .Xt2, .{ .pre_index = .{ .base = .Xn, .index = .imm } } },
    },
    .{
        .pattern = "STP <Wt1>, <Wt2>, [<Xn|SP>]",
        .symbols = .{
            .Wt1 = .{ .reg = .{ .format = .{ .general = .word } } },
            .Wt2 = .{ .reg = .{ .format = .{ .general = .word } } },
            .Xn = .{ .reg = .{ .format = .{ .general = .doubleword }, .allow_sp = true } },
        },
        .encode = .{ .stp, .Wt1, .Wt2, .{ .base = .Xn } },
    },
    .{
        .pattern = "STP <Wt1>, <Wt2>, [<Xn|SP>, #<imm>]",
        .symbols = .{
            .Wt1 = .{ .reg = .{ .format = .{ .general = .word } } },
            .Wt2 = .{ .reg = .{ .format = .{ .general = .word } } },
            .Xn = .{ .reg = .{ .format = .{ .general = .doubleword }, .allow_sp = true } },
            .imm = .{ .imm = .{ .type = .{ .signedness = .signed, .bits = 9 }, .multiple_of = 4 } },
        },
        .encode = .{ .stp, .Wt1, .Wt2, .{ .signed_offset = .{ .base = .Xn, .offset = .imm } } },
    },
    .{
        .pattern = "STP <Xt1>, <Xt2>, [<Xn|SP>]",
        .symbols = .{
            .Xt1 = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Xt2 = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Xn = .{ .reg = .{ .format = .{ .general = .doubleword }, .allow_sp = true } },
        },
        .encode = .{ .stp, .Xt1, .Xt2, .{ .base = .Xn } },
    },
    .{
        .pattern = "STP <Xt1>, <Xt2>, [<Xn|SP>, #<imm>]",
        .symbols = .{
            .Xt1 = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Xt2 = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Xn = .{ .reg = .{ .format = .{ .general = .doubleword }, .allow_sp = true } },
            .imm = .{ .imm = .{ .type = .{ .signedness = .signed, .bits = 10 }, .multiple_of = 8 } },
        },
        .encode = .{ .stp, .Xt1, .Xt2, .{ .signed_offset = .{ .base = .Xn, .offset = .imm } } },
    },
    // C6.2.322 STR (immediate)
    .{
        .pattern = "STR <Wt>, [<Xn|SP>], #<simm>",
        .symbols = .{
            .Wt = .{ .reg = .{ .format = .{ .general = .word } } },
            .Xn = .{ .reg = .{ .format = .{ .general = .doubleword }, .allow_sp = true } },
            .simm = .{ .imm = .{ .type = .{ .signedness = .signed, .bits = 9 } } },
        },
        .encode = .{ .str, .Wt, .{ .post_index = .{ .base = .Xn, .index = .simm } } },
    },
    .{
        .pattern = "STR <Xt>, [<Xn|SP>], #<simm>",
        .symbols = .{
            .Xt = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Xn = .{ .reg = .{ .format = .{ .general = .doubleword }, .allow_sp = true } },
            .simm = .{ .imm = .{ .type = .{ .signedness = .signed, .bits = 9 } } },
        },
        .encode = .{ .str, .Xt, .{ .post_index = .{ .base = .Xn, .index = .simm } } },
    },
    .{
        .pattern = "STR <Wt>, [<Xn|SP>, #<simm>]!",
        .symbols = .{
            .Wt = .{ .reg = .{ .format = .{ .general = .word } } },
            .Xn = .{ .reg = .{ .format = .{ .general = .doubleword }, .allow_sp = true } },
            .simm = .{ .imm = .{ .type = .{ .signedness = .signed, .bits = 9 } } },
        },
        .encode = .{ .str, .Wt, .{ .pre_index = .{ .base = .Xn, .index = .simm } } },
    },
    .{
        .pattern = "STR <Xt>, [<Xn|SP>, #<simm>]!",
        .symbols = .{
            .Xt = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Xn = .{ .reg = .{ .format = .{ .general = .doubleword }, .allow_sp = true } },
            .simm = .{ .imm = .{ .type = .{ .signedness = .signed, .bits = 9 } } },
        },
        .encode = .{ .str, .Xt, .{ .pre_index = .{ .base = .Xn, .index = .simm } } },
    },
    .{
        .pattern = "STR <Wt>, [<Xn|SP>]",
        .symbols = .{
            .Wt = .{ .reg = .{ .format = .{ .general = .word } } },
            .Xn = .{ .reg = .{ .format = .{ .general = .doubleword }, .allow_sp = true } },
        },
        .encode = .{ .str, .Wt, .{ .base = .Xn } },
    },
    .{
        .pattern = "STR <Wt>, [<Xn|SP>, #<pimm>]",
        .symbols = .{
            .Wt = .{ .reg = .{ .format = .{ .general = .word } } },
            .Xn = .{ .reg = .{ .format = .{ .general = .doubleword }, .allow_sp = true } },
            .pimm = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 14 }, .multiple_of = 4 } },
        },
        .encode = .{ .str, .Wt, .{ .unsigned_offset = .{ .base = .Xn, .offset = .pimm } } },
    },
    .{
        .pattern = "STR <Xt>, [<Xn|SP>]",
        .symbols = .{
            .Xt = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Xn = .{ .reg = .{ .format = .{ .general = .doubleword }, .allow_sp = true } },
        },
        .encode = .{ .str, .Xt, .{ .base = .Xn } },
    },
    .{
        .pattern = "STR <Xt>, [<Xn|SP>, #<pimm>]",
        .symbols = .{
            .Xt = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Xn = .{ .reg = .{ .format = .{ .general = .doubleword }, .allow_sp = true } },
            .pimm = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 15 }, .multiple_of = 8 } },
        },
        .encode = .{ .str, .Xt, .{ .unsigned_offset = .{ .base = .Xn, .offset = .pimm } } },
    },
    // C6.2.356 SUB (extended register)
    .{
        .pattern = "SUB <Wd|WSP>, <Wn|WSP>, <Wm>",
        .symbols = .{
            .Wd = .{ .reg = .{ .format = .{ .general = .word }, .allow_sp = true } },
            .Wn = .{ .reg = .{ .format = .{ .general = .word }, .allow_sp = true } },
            .Wm = .{ .reg = .{ .format = .{ .general = .word } } },
        },
        .encode = .{ .sub, .Wd, .Wn, .{ .register = .Wm } },
    },
    .{
        .pattern = "SUB <Wd|WSP>, <Wn|WSP>, <Wm>, <extend>",
        .symbols = .{
            .Wd = .{ .reg = .{ .format = .{ .general = .word }, .allow_sp = true } },
            .Wn = .{ .reg = .{ .format = .{ .general = .word }, .allow_sp = true } },
            .Wm = .{ .reg = .{ .format = .{ .general = .word } } },
            .extend = .{ .extend = .{} },
        },
        .encode = .{ .sub, .Wd, .Wn, .{ .extended_register_explicit = .{
            .register = .Wm,
            .option = .extend,
            .amount = 0,
        } } },
    },
    .{
        .pattern = "SUB <Wd|WSP>, <Wn|WSP>, <Wm>, <extend> #<amount>",
        .symbols = .{
            .Wd = .{ .reg = .{ .format = .{ .general = .word }, .allow_sp = true } },
            .Wn = .{ .reg = .{ .format = .{ .general = .word }, .allow_sp = true } },
            .Wm = .{ .reg = .{ .format = .{ .general = .word } } },
            .extend = .{ .extend = .{} },
            .amount = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 3 }, .max_valid = 4 } },
        },
        .encode = .{ .sub, .Wd, .Wn, .{ .extended_register_explicit = .{
            .register = .Wm,
            .option = .extend,
            .amount = .amount,
        } } },
    },
    .{
        .pattern = "SUB <Xd|SP>, <Xn|SP>, <Xm>",
        .symbols = .{
            .Xd = .{ .reg = .{ .format = .{ .general = .doubleword }, .allow_sp = true } },
            .Xn = .{ .reg = .{ .format = .{ .general = .doubleword }, .allow_sp = true } },
            .Xm = .{ .reg = .{ .format = .{ .general = .doubleword } } },
        },
        .encode = .{ .sub, .Xd, .Xn, .{ .register = .Xm } },
    },
    .{
        .pattern = "SUB <Xd|SP>, <Xn|SP>, <Wm>, <extend>",
        .symbols = .{
            .Xd = .{ .reg = .{ .format = .{ .general = .doubleword }, .allow_sp = true } },
            .Xn = .{ .reg = .{ .format = .{ .general = .doubleword }, .allow_sp = true } },
            .Wm = .{ .reg = .{ .format = .{ .general = .word } } },
            .extend = .{ .extend = .{ .size = .word } },
        },
        .encode = .{ .sub, .Xd, .Xn, .{ .extended_register_explicit = .{
            .register = .Wm,
            .option = .extend,
            .amount = 0,
        } } },
    },
    .{
        .pattern = "SUB <Xd|SP>, <Xn|SP>, <Wm>, <extend> #<amount>",
        .symbols = .{
            .Xd = .{ .reg = .{ .format = .{ .general = .doubleword }, .allow_sp = true } },
            .Xn = .{ .reg = .{ .format = .{ .general = .doubleword }, .allow_sp = true } },
            .Wm = .{ .reg = .{ .format = .{ .general = .word } } },
            .extend = .{ .extend = .{ .size = .word } },
            .amount = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 3 }, .max_valid = 4 } },
        },
        .encode = .{ .sub, .Xd, .Xn, .{ .extended_register_explicit = .{
            .register = .Wm,
            .option = .extend,
            .amount = .amount,
        } } },
    },
    .{
        .pattern = "SUB <Xd|SP>, <Xn|SP>, <Xm>, <extend>",
        .symbols = .{
            .Xd = .{ .reg = .{ .format = .{ .general = .doubleword }, .allow_sp = true } },
            .Xn = .{ .reg = .{ .format = .{ .general = .doubleword }, .allow_sp = true } },
            .Xm = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .extend = .{ .extend = .{ .size = .doubleword } },
        },
        .encode = .{ .sub, .Xd, .Xn, .{ .extended_register_explicit = .{
            .register = .Xm,
            .option = .extend,
            .amount = 0,
        } } },
    },
    .{
        .pattern = "SUB <Xd|SP>, <Xn|SP>, <Xm>, <extend> #<amount>",
        .symbols = .{
            .Xd = .{ .reg = .{ .format = .{ .general = .doubleword }, .allow_sp = true } },
            .Xn = .{ .reg = .{ .format = .{ .general = .doubleword }, .allow_sp = true } },
            .Xm = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .extend = .{ .extend = .{ .size = .doubleword } },
            .amount = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 3 }, .max_valid = 4 } },
        },
        .encode = .{ .sub, .Xd, .Xn, .{ .extended_register_explicit = .{
            .register = .Xm,
            .option = .extend,
            .amount = .amount,
        } } },
    },
    // C6.2.357 SUB (immediate)
    .{
        .pattern = "SUB <Wd|WSP>, <Wn|WSP>, #<imm>",
        .symbols = .{
            .Wd = .{ .reg = .{ .format = .{ .general = .word }, .allow_sp = true } },
            .Wn = .{ .reg = .{ .format = .{ .general = .word }, .allow_sp = true } },
            .imm = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 12 } } },
        },
        .encode = .{ .sub, .Wd, .Wn, .{ .immediate = .imm } },
    },
    .{
        .pattern = "SUB <Wd|WSP>, <Wn|WSP>, #<imm>, LSL #<shift>",
        .symbols = .{
            .Wd = .{ .reg = .{ .format = .{ .general = .word }, .allow_sp = true } },
            .Wn = .{ .reg = .{ .format = .{ .general = .word }, .allow_sp = true } },
            .imm = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 12 } } },
            .shift = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 4 }, .multiple_of = 12 } },
        },
        .encode = .{ .sub, .Wd, .Wn, .{ .shifted_immediate = .{ .immediate = .imm, .lsl = .shift } } },
    },
    .{
        .pattern = "SUB <Xd|SP>, <Xn|SP>, #<imm>",
        .symbols = .{
            .Xd = .{ .reg = .{ .format = .{ .general = .doubleword }, .allow_sp = true } },
            .Xn = .{ .reg = .{ .format = .{ .general = .doubleword }, .allow_sp = true } },
            .imm = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 12 } } },
        },
        .encode = .{ .sub, .Xd, .Xn, .{ .immediate = .imm } },
    },
    .{
        .pattern = "SUB <Xd|SP>, <Xn|SP>, #<imm>, LSL #<shift>",
        .symbols = .{
            .Xd = .{ .reg = .{ .format = .{ .general = .doubleword }, .allow_sp = true } },
            .Xn = .{ .reg = .{ .format = .{ .general = .doubleword }, .allow_sp = true } },
            .imm = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 12 } } },
            .shift = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 4 }, .multiple_of = 12 } },
        },
        .encode = .{ .sub, .Xd, .Xn, .{ .shifted_immediate = .{ .immediate = .imm, .lsl = .shift } } },
    },
    // C6.2.358 SUB (shifted register)
    .{
        .pattern = "SUB <Wd>, <Wn>, <Wm>",
        .symbols = .{
            .Wd = .{ .reg = .{ .format = .{ .general = .word } } },
            .Wn = .{ .reg = .{ .format = .{ .general = .word } } },
            .Wm = .{ .reg = .{ .format = .{ .general = .word } } },
        },
        .encode = .{ .sub, .Wd, .Wn, .{ .register = .Wm } },
    },
    .{
        .pattern = "SUB <Wd>, <Wn>, <Wm>, <shift> #<amount>",
        .symbols = .{
            .Wd = .{ .reg = .{ .format = .{ .general = .word } } },
            .Wn = .{ .reg = .{ .format = .{ .general = .word } } },
            .Wm = .{ .reg = .{ .format = .{ .general = .word } } },
            .shift = .{ .shift = .{ .allow_ror = false } },
            .amount = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 5 } } },
        },
        .encode = .{ .sub, .Wd, .Wn, .{ .shifted_register_explicit = .{
            .register = .Wm,
            .shift = .shift,
            .amount = .amount,
        } } },
    },
    .{
        .pattern = "SUB <Xd>, <Xn>, <Xm>",
        .symbols = .{
            .Xd = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Xn = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Xm = .{ .reg = .{ .format = .{ .general = .doubleword } } },
        },
        .encode = .{ .sub, .Xd, .Xn, .{ .register = .Xm } },
    },
    .{
        .pattern = "SUB <Xd>, <Xn>, <Xm>, <shift> #<amount>",
        .symbols = .{
            .Xd = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Xn = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Xm = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .shift = .{ .shift = .{ .allow_ror = false } },
            .amount = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 6 } } },
        },
        .encode = .{ .sub, .Xd, .Xn, .{ .shifted_register_explicit = .{
            .register = .Xm,
            .shift = .shift,
            .amount = .amount,
        } } },
    },
    // C6.2.359 SUBG
    .{
        .requires = .{.mte},
        .pattern = "SUBG <Xd|SP>, <Xn|SP>, #<uimm6>,  #<uimm4>",
        .symbols = .{
            .Xd = .{ .reg = .{ .format = .{ .general = .doubleword }, .allow_sp = true } },
            .Xn = .{ .reg = .{ .format = .{ .general = .doubleword }, .allow_sp = true } },
            .uimm6 = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 10 }, .multiple_of = 16 } },
            .uimm4 = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 4 } } },
        },
        .encode = .{ .subg, .Xd, .Xn, .uimm6, .uimm4 },
    },
    // C6.2.362 SUBS (extended register)
    .{
        .pattern = "SUBS <Wd>, <Wn|WSP>, <Wm>",
        .symbols = .{
            .Wd = .{ .reg = .{ .format = .{ .general = .word } } },
            .Wn = .{ .reg = .{ .format = .{ .general = .word }, .allow_sp = true } },
            .Wm = .{ .reg = .{ .format = .{ .general = .word } } },
        },
        .encode = .{ .subs, .Wd, .Wn, .{ .register = .Wm } },
    },
    .{
        .pattern = "SUBS <Wd>, <Wn|WSP>, <Wm>, <extend>",
        .symbols = .{
            .Wd = .{ .reg = .{ .format = .{ .general = .word } } },
            .Wn = .{ .reg = .{ .format = .{ .general = .word }, .allow_sp = true } },
            .Wm = .{ .reg = .{ .format = .{ .general = .word } } },
            .extend = .{ .extend = .{} },
        },
        .encode = .{ .subs, .Wd, .Wn, .{ .extended_register_explicit = .{
            .register = .Wm,
            .option = .extend,
            .amount = 0,
        } } },
    },
    .{
        .pattern = "SUBS <Wd>, <Wn|WSP>, <Wm>, <extend> #<amount>",
        .symbols = .{
            .Wd = .{ .reg = .{ .format = .{ .general = .word } } },
            .Wn = .{ .reg = .{ .format = .{ .general = .word }, .allow_sp = true } },
            .Wm = .{ .reg = .{ .format = .{ .general = .word } } },
            .extend = .{ .extend = .{} },
            .amount = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 3 }, .max_valid = 4 } },
        },
        .encode = .{ .subs, .Wd, .Wn, .{ .extended_register_explicit = .{
            .register = .Wm,
            .option = .extend,
            .amount = .amount,
        } } },
    },
    .{
        .pattern = "SUBS <Xd>, <Xn|SP>, <Xm>",
        .symbols = .{
            .Xd = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Xn = .{ .reg = .{ .format = .{ .general = .doubleword }, .allow_sp = true } },
            .Xm = .{ .reg = .{ .format = .{ .general = .doubleword } } },
        },
        .encode = .{ .subs, .Xd, .Xn, .{ .register = .Xm } },
    },
    .{
        .pattern = "SUBS <Xd>, <Xn|SP>, <Wm>, <extend>",
        .symbols = .{
            .Xd = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Xn = .{ .reg = .{ .format = .{ .general = .doubleword }, .allow_sp = true } },
            .Wm = .{ .reg = .{ .format = .{ .general = .word } } },
            .extend = .{ .extend = .{ .size = .word } },
        },
        .encode = .{ .subs, .Xd, .Xn, .{ .extended_register_explicit = .{
            .register = .Wm,
            .option = .extend,
            .amount = 0,
        } } },
    },
    .{
        .pattern = "SUBS <Xd>, <Xn|SP>, <Wm>, <extend> #<amount>",
        .symbols = .{
            .Xd = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Xn = .{ .reg = .{ .format = .{ .general = .doubleword }, .allow_sp = true } },
            .Wm = .{ .reg = .{ .format = .{ .general = .word } } },
            .extend = .{ .extend = .{ .size = .word } },
            .amount = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 3 }, .max_valid = 4 } },
        },
        .encode = .{ .subs, .Xd, .Xn, .{ .extended_register_explicit = .{
            .register = .Wm,
            .option = .extend,
            .amount = .amount,
        } } },
    },
    .{
        .pattern = "SUBS <Xd>, <Xn|SP>, <Xm>, <extend>",
        .symbols = .{
            .Xd = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Xn = .{ .reg = .{ .format = .{ .general = .doubleword }, .allow_sp = true } },
            .Xm = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .extend = .{ .extend = .{ .size = .doubleword } },
        },
        .encode = .{ .subs, .Xd, .Xn, .{ .extended_register_explicit = .{
            .register = .Xm,
            .option = .extend,
            .amount = 0,
        } } },
    },
    .{
        .pattern = "SUBS <Xd>, <Xn|SP>, <Xm>, <extend> #<amount>",
        .symbols = .{
            .Xd = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Xn = .{ .reg = .{ .format = .{ .general = .doubleword }, .allow_sp = true } },
            .Xm = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .extend = .{ .extend = .{ .size = .doubleword } },
            .amount = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 3 }, .max_valid = 4 } },
        },
        .encode = .{ .subs, .Xd, .Xn, .{ .extended_register_explicit = .{
            .register = .Xm,
            .option = .extend,
            .amount = .amount,
        } } },
    },
    // C6.2.363 SUBS (immediate)
    .{
        .pattern = "SUBS <Wd>, <Wn|WSP>, #<imm>",
        .symbols = .{
            .Wd = .{ .reg = .{ .format = .{ .general = .word } } },
            .Wn = .{ .reg = .{ .format = .{ .general = .word }, .allow_sp = true } },
            .imm = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 12 } } },
        },
        .encode = .{ .subs, .Wd, .Wn, .{ .immediate = .imm } },
    },
    .{
        .pattern = "SUBS <Wd>, <Wn|WSP>, #<imm>, LSL #<shift>",
        .symbols = .{
            .Wd = .{ .reg = .{ .format = .{ .general = .word } } },
            .Wn = .{ .reg = .{ .format = .{ .general = .word }, .allow_sp = true } },
            .imm = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 12 } } },
            .shift = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 4 }, .multiple_of = 12 } },
        },
        .encode = .{ .subs, .Wd, .Wn, .{ .shifted_immediate = .{ .immediate = .imm, .lsl = .shift } } },
    },
    .{
        .pattern = "SUBS <Xd>, <Xn|SP>, #<imm>",
        .symbols = .{
            .Xd = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Xn = .{ .reg = .{ .format = .{ .general = .doubleword }, .allow_sp = true } },
            .imm = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 12 } } },
        },
        .encode = .{ .subs, .Xd, .Xn, .{ .immediate = .imm } },
    },
    .{
        .pattern = "SUBS <Xd>, <Xn|SP>, #<imm>, LSL #<shift>",
        .symbols = .{
            .Xd = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Xn = .{ .reg = .{ .format = .{ .general = .doubleword }, .allow_sp = true } },
            .imm = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 12 } } },
            .shift = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 4 }, .multiple_of = 12 } },
        },
        .encode = .{ .subs, .Xd, .Xn, .{ .shifted_immediate = .{ .immediate = .imm, .lsl = .shift } } },
    },
    // C6.2.364 SUBS (shifted register)
    .{
        .pattern = "SUBS <Wd>, <Wn>, <Wm>",
        .symbols = .{
            .Wd = .{ .reg = .{ .format = .{ .general = .word } } },
            .Wn = .{ .reg = .{ .format = .{ .general = .word } } },
            .Wm = .{ .reg = .{ .format = .{ .general = .word } } },
        },
        .encode = .{ .subs, .Wd, .Wn, .{ .register = .Wm } },
    },
    .{
        .pattern = "SUBS <Wd>, <Wn>, <Wm>, <shift> #<amount>",
        .symbols = .{
            .Wd = .{ .reg = .{ .format = .{ .general = .word } } },
            .Wn = .{ .reg = .{ .format = .{ .general = .word } } },
            .Wm = .{ .reg = .{ .format = .{ .general = .word } } },
            .shift = .{ .shift = .{ .allow_ror = false } },
            .amount = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 5 } } },
        },
        .encode = .{ .subs, .Wd, .Wn, .{ .shifted_register_explicit = .{
            .register = .Wm,
            .shift = .shift,
            .amount = .amount,
        } } },
    },
    .{
        .pattern = "SUBS <Xd>, <Xn>, <Xm>",
        .symbols = .{
            .Xd = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Xn = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Xm = .{ .reg = .{ .format = .{ .general = .doubleword } } },
        },
        .encode = .{ .subs, .Xd, .Xn, .{ .register = .Xm } },
    },
    .{
        .pattern = "SUBS <Xd>, <Xn>, <Xm>, <shift> #<amount>",
        .symbols = .{
            .Xd = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Xn = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Xm = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .shift = .{ .shift = .{ .allow_ror = false } },
            .amount = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 6 } } },
        },
        .encode = .{ .subs, .Xd, .Xn, .{ .shifted_register_explicit = .{
            .register = .Xm,
            .shift = .shift,
            .amount = .amount,
        } } },
    },
    // C6.2.365 SVC
    .{
        .pattern = "SVC #<imm>",
        .symbols = .{
            .imm = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 16 } } },
        },
        .encode = .{ .svc, .imm },
    },
    // C6.2.376 TCANCEL
    .{
        .pattern = "TCANCEL #<imm>",
        .symbols = .{
            .imm = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 16 } } },
        },
        .encode = .{ .tcancel, .imm },
    },
    // C6.2.385 UBFM
    .{
        .pattern = "UBFM <Wd>, <Wn>, #<immr>, #<imms>",
        .symbols = .{
            .Wd = .{ .reg = .{ .format = .{ .general = .word } } },
            .Wn = .{ .reg = .{ .format = .{ .general = .word } } },
            .immr = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 5 } } },
            .imms = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 5 } } },
        },
        .encode = .{ .ubfm, .Wd, .Wn, .{ .N = .word, .immr = .immr, .imms = .imms } },
    },
    .{
        .pattern = "UBFM <Xd>, <Xn>, #<immr>, #<imms>",
        .symbols = .{
            .Xd = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Xn = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .immr = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 6 } } },
            .imms = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 6 } } },
        },
        .encode = .{ .ubfm, .Xd, .Xn, .{ .N = .doubleword, .immr = .immr, .imms = .imms } },
    },
    // C6.2.388 UDIV
    .{
        .pattern = "UDIV <Wd>, <Wn>, <Wm>",
        .symbols = .{
            .Wd = .{ .reg = .{ .format = .{ .general = .word } } },
            .Wn = .{ .reg = .{ .format = .{ .general = .word } } },
            .Wm = .{ .reg = .{ .format = .{ .general = .word } } },
        },
        .encode = .{ .udiv, .Wd, .Wn, .Wm },
    },
    .{
        .pattern = "UDIV <Xd>, <Xn>, <Xm>",
        .symbols = .{
            .Xd = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Xn = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Xm = .{ .reg = .{ .format = .{ .general = .doubleword } } },
        },
        .encode = .{ .udiv, .Xd, .Xn, .Xm },
    },
    // C6.2.387 UDF
    .{
        .pattern = "UDF #<imm>",
        .symbols = .{
            .imm = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 16 } } },
        },
        .encode = .{ .udf, .imm },
    },
    // C6.2.389 UMADDL
    .{
        .pattern = "UMADDL <Xd>, <Wn>, <Wm>, <Xa>",
        .symbols = .{
            .Xd = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Wn = .{ .reg = .{ .format = .{ .general = .word } } },
            .Wm = .{ .reg = .{ .format = .{ .general = .word } } },
            .Xa = .{ .reg = .{ .format = .{ .general = .doubleword } } },
        },
        .encode = .{ .umaddl, .Xd, .Wn, .Wm, .Xa },
    },
    // C6.2.390 UMNEGL
    .{
        .pattern = "UMNEGL <Xd>, <Wn>, <Wm>",
        .symbols = .{
            .Xd = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Wn = .{ .reg = .{ .format = .{ .general = .word } } },
            .Wm = .{ .reg = .{ .format = .{ .general = .word } } },
        },
        .encode = .{ .umsubl, .Xd, .Wn, .Wm, .xzr },
    },
    // C6.2.391 UMSUBL
    .{
        .pattern = "UMSUBL <Xd>, <Wn>, <Wm>, <Xa>",
        .symbols = .{
            .Xd = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Wn = .{ .reg = .{ .format = .{ .general = .word } } },
            .Wm = .{ .reg = .{ .format = .{ .general = .word } } },
            .Xa = .{ .reg = .{ .format = .{ .general = .doubleword } } },
        },
        .encode = .{ .umsubl, .Xd, .Wn, .Wm, .Xa },
    },
    // C6.2.292 UMULH
    .{
        .pattern = "UMULH <Xd>, <Xn>, <Xm>",
        .symbols = .{
            .Xd = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Xn = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Xm = .{ .reg = .{ .format = .{ .general = .doubleword } } },
        },
        .encode = .{ .umulh, .Xd, .Xn, .Xm },
    },
    // C6.2.393 UMULL
    .{
        .pattern = "UMULL <Xd>, <Wn>, <Wm>",
        .symbols = .{
            .Xd = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Wn = .{ .reg = .{ .format = .{ .general = .word } } },
            .Wm = .{ .reg = .{ .format = .{ .general = .word } } },
        },
        .encode = .{ .umaddl, .Xd, .Wn, .Wm, .xzr },
    },
    // C6.2.396 WFE
    .{
        .pattern = "WFE",
        .symbols = .{},
        .encode = .{.wfe},
    },
    // C6.2.398 WFI
    .{
        .pattern = "WFI",
        .symbols = .{},
        .encode = .{.wfi},
    },
    // C6.2.400 XAFLAG
    .{
        .requires = .{.altnzcv},
        .pattern = "XAFLAG",
        .symbols = .{},
        .encode = .{.xaflag},
    },
    // C6.2.402 YIELD
    .{
        .pattern = "YIELD",
        .symbols = .{},
        .encode = .{.yield},
    },

    // C7.2.1 ABS
    .{
        .pattern = "ABS <Vd>, <Vn>",
        .symbols = .{
            .Vd = .{ .reg = .{ .format = .{ .scalar = .double } } },
            .Vn = .{ .reg = .{ .format = .{ .scalar = .double } } },
        },
        .encode = .{ .abs, .Vd, .Vn },
    },
    .{
        .pattern = "ABS <Vd>.<T>, <Vn>.<T>",
        .symbols = .{
            .Vd = .{ .reg_alias = .vector },
            .T = .{ .arrangement = .{ .min_valid_len = 2 } },
            .Vn = .{ .reg_alias = .vector },
        },
        .encode = .{
            .abs,
            .{ .alias = .Vd, .format = .{ .vector = .T } },
            .{ .alias = .Vn, .format = .{ .vector = .T } },
        },
    },
    // C7.2.28 CMEQ (zero)
    .{
        .pattern = "CMEQ <Vd>, <Vn>, #<0>",
        .symbols = .{
            .Vd = .{ .reg = .{ .format = .{ .scalar = .double } } },
            .Vn = .{ .reg = .{ .format = .{ .scalar = .double } } },
            .@"0" = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 0 } } },
        },
        .encode = .{ .cmeq, .Vd, .Vn, .zero },
    },
    .{
        .pattern = "CMEQ <Vd>.<T>, <Vn>.<T>, #<0>",
        .symbols = .{
            .Vd = .{ .reg_alias = .vector },
            .T = .{ .arrangement = .{ .min_valid_len = 2 } },
            .Vn = .{ .reg_alias = .vector },
            .@"0" = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 0 } } },
        },
        .encode = .{
            .cmeq,
            .{ .alias = .Vd, .format = .{ .vector = .T } },
            .{ .alias = .Vn, .format = .{ .vector = .T } },
            .zero,
        },
    },
    // C7.2.30 CMGE (zero)
    .{
        .pattern = "CMGE <Vd>, <Vn>, #<0>",
        .symbols = .{
            .Vd = .{ .reg = .{ .format = .{ .scalar = .double } } },
            .Vn = .{ .reg = .{ .format = .{ .scalar = .double } } },
            .@"0" = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 0 } } },
        },
        .encode = .{ .cmge, .Vd, .Vn, .zero },
    },
    .{
        .pattern = "CMGE <Vd>.<T>, <Vn>.<T>, #<0>",
        .symbols = .{
            .Vd = .{ .reg_alias = .vector },
            .T = .{ .arrangement = .{ .min_valid_len = 2 } },
            .Vn = .{ .reg_alias = .vector },
            .@"0" = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 0 } } },
        },
        .encode = .{
            .cmge,
            .{ .alias = .Vd, .format = .{ .vector = .T } },
            .{ .alias = .Vn, .format = .{ .vector = .T } },
            .zero,
        },
    },
    // C7.2.32 CMGT (zero)
    .{
        .pattern = "CMGT <Vd>, <Vn>, #<0>",
        .symbols = .{
            .Vd = .{ .reg = .{ .format = .{ .scalar = .double } } },
            .Vn = .{ .reg = .{ .format = .{ .scalar = .double } } },
            .@"0" = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 0 } } },
        },
        .encode = .{ .cmgt, .Vd, .Vn, .zero },
    },
    .{
        .pattern = "CMGT <Vd>.<T>, <Vn>.<T>, #<0>",
        .symbols = .{
            .Vd = .{ .reg_alias = .vector },
            .T = .{ .arrangement = .{ .min_valid_len = 2 } },
            .Vn = .{ .reg_alias = .vector },
            .@"0" = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 0 } } },
        },
        .encode = .{
            .cmgt,
            .{ .alias = .Vd, .format = .{ .vector = .T } },
            .{ .alias = .Vn, .format = .{ .vector = .T } },
            .zero,
        },
    },
    // C7.2.35 CMLE (zero)
    .{
        .pattern = "CMLE <Vd>, <Vn>, #<0>",
        .symbols = .{
            .Vd = .{ .reg = .{ .format = .{ .scalar = .double } } },
            .Vn = .{ .reg = .{ .format = .{ .scalar = .double } } },
            .@"0" = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 0 } } },
        },
        .encode = .{ .cmle, .Vd, .Vn, .zero },
    },
    .{
        .pattern = "CMLE <Vd>.<T>, <Vn>.<T>, #<0>",
        .symbols = .{
            .Vd = .{ .reg_alias = .vector },
            .T = .{ .arrangement = .{ .min_valid_len = 2 } },
            .Vn = .{ .reg_alias = .vector },
            .@"0" = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 0 } } },
        },
        .encode = .{
            .cmle,
            .{ .alias = .Vd, .format = .{ .vector = .T } },
            .{ .alias = .Vn, .format = .{ .vector = .T } },
            .zero,
        },
    },
    // C7.2.36 CMLT (zero)
    .{
        .pattern = "CMLT <Vd>, <Vn>, #<0>",
        .symbols = .{
            .Vd = .{ .reg = .{ .format = .{ .scalar = .double } } },
            .Vn = .{ .reg = .{ .format = .{ .scalar = .double } } },
            .@"0" = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 0 } } },
        },
        .encode = .{ .cmlt, .Vd, .Vn, .zero },
    },
    .{
        .pattern = "CMLT <Vd>.<T>, <Vn>.<T>, #<0>",
        .symbols = .{
            .Vd = .{ .reg_alias = .vector },
            .T = .{ .arrangement = .{ .min_valid_len = 2 } },
            .Vn = .{ .reg_alias = .vector },
            .@"0" = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 0 } } },
        },
        .encode = .{
            .cmlt,
            .{ .alias = .Vd, .format = .{ .vector = .T } },
            .{ .alias = .Vn, .format = .{ .vector = .T } },
            .zero,
        },
    },
    // C7.2.38 CNT
    .{
        .pattern = "CNT <Vd>.<T>, <Vn>.<T>",
        .symbols = .{
            .Vd = .{ .reg_alias = .vector },
            .T = .{ .arrangement = .{ .elem_size = .byte } },
            .Vn = .{ .reg_alias = .vector },
        },
        .encode = .{
            .cnt,
            .{ .alias = .Vd, .format = .{ .vector = .T } },
            .{ .alias = .Vn, .format = .{ .vector = .T } },
        },
    },
    // C7.2.39 DUP (element)
    .{
        .pattern = "DUP <Vd>, <Vn>.B[<index>]",
        .symbols = .{
            .Vd = .{ .reg = .{ .format = .{ .scalar = .byte } } },
            .Vn = .{ .reg_alias = .vector },
            .index = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 4 } } },
        },
        .encode = .{
            .dup,
            .Vd,
            .{ .alias = .Vn, .format = .{ .element = .{ .size = .byte, .index = .index } } },
        },
    },
    .{
        .pattern = "DUP <Vd>, <Vn>.H[<index>]",
        .symbols = .{
            .Vd = .{ .reg = .{ .format = .{ .scalar = .half } } },
            .Vn = .{ .reg_alias = .vector },
            .index = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 3 } } },
        },
        .encode = .{
            .dup,
            .Vd,
            .{ .alias = .Vn, .format = .{ .element = .{ .size = .half, .index = .index } } },
        },
    },
    .{
        .pattern = "DUP <Vd>, <Vn>.S[<index>]",
        .symbols = .{
            .Vd = .{ .reg = .{ .format = .{ .scalar = .single } } },
            .Vn = .{ .reg_alias = .vector },
            .index = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 2 } } },
        },
        .encode = .{
            .dup,
            .Vd,
            .{ .alias = .Vn, .format = .{ .element = .{ .size = .single, .index = .index } } },
        },
    },
    .{
        .pattern = "DUP <Vd>, <Vn>.D[<index>]",
        .symbols = .{
            .Vd = .{ .reg = .{ .format = .{ .scalar = .double } } },
            .Vn = .{ .reg_alias = .vector },
            .index = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 1 } } },
        },
        .encode = .{
            .dup,
            .Vd,
            .{ .alias = .Vn, .format = .{ .element = .{ .size = .double, .index = .index } } },
        },
    },
    .{
        .pattern = "DUP <Vd>.<T>, <Vn>.B[<index>]",
        .symbols = .{
            .Vd = .{ .reg_alias = .vector },
            .T = .{ .arrangement = .{ .elem_size = .byte } },
            .Vn = .{ .reg_alias = .vector },
            .index = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 4 } } },
        },
        .encode = .{
            .dup,
            .{ .alias = .Vd, .format = .{ .vector = .T } },
            .{ .alias = .Vn, .format = .{ .element = .{ .size = .byte, .index = .index } } },
        },
    },
    .{
        .pattern = "DUP <Vd>.<T>, <Vn>.H[<index>]",
        .symbols = .{
            .Vd = .{ .reg_alias = .vector },
            .T = .{ .arrangement = .{ .elem_size = .half } },
            .Vn = .{ .reg_alias = .vector },
            .index = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 3 } } },
        },
        .encode = .{
            .dup,
            .{ .alias = .Vd, .format = .{ .vector = .T } },
            .{ .alias = .Vn, .format = .{ .element = .{ .size = .half, .index = .index } } },
        },
    },
    .{
        .pattern = "DUP <Vd>.<T>, <Vn>.S[<index>]",
        .symbols = .{
            .Vd = .{ .reg_alias = .vector },
            .T = .{ .arrangement = .{ .elem_size = .single } },
            .Vn = .{ .reg_alias = .vector },
            .index = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 2 } } },
        },
        .encode = .{
            .dup,
            .{ .alias = .Vd, .format = .{ .vector = .T } },
            .{ .alias = .Vn, .format = .{ .element = .{ .size = .single, .index = .index } } },
        },
    },
    .{
        .pattern = "DUP <Vd>.2D, <Vn>.D[<index>]",
        .symbols = .{
            .Vd = .{ .reg_alias = .vector },
            .Vn = .{ .reg_alias = .vector },
            .index = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 1 } } },
        },
        .encode = .{
            .dup,
            .{ .alias = .Vd, .format = .{ .vector = .@"2d" } },
            .{ .alias = .Vn, .format = .{ .element = .{ .size = .double, .index = .index } } },
        },
    },
    // C7.2.40 DUP (general)
    .{
        .pattern = "DUP <Vd>.<T>, <Wn>",
        .symbols = .{
            .Vd = .{ .reg_alias = .vector },
            .T = .{ .arrangement = .{ .allow_double = false } },
            .Wn = .{ .reg = .{ .format = .{ .general = .word } } },
        },
        .encode = .{ .dup, .{ .alias = .Vd, .format = .{ .vector = .T } }, .Wn },
    },
    .{
        .pattern = "DUP <Vd>.2D, <Xn>",
        .symbols = .{
            .Vd = .{ .reg_alias = .vector },
            .Xn = .{ .reg = .{ .format = .{ .general = .doubleword } } },
        },
        .encode = .{ .dup, .{ .alias = .Vd, .format = .{ .vector = .@"2d" } }, .Xn },
    },
    // C7.2.57 FCMEQ (zero)
    .{
        .requires = .{.fullfp16},
        .pattern = "FCMEQ <Hd>, <Hn>, #<0.0>",
        .symbols = .{
            .Hd = .{ .reg = .{ .format = .{ .scalar = .half } } },
            .Hn = .{ .reg = .{ .format = .{ .scalar = .half } } },
            .@"0.0" = .{ .fimm = .{ .only_valid = 0.0 } },
        },
        .encode = .{ .fcmeq, .Hd, .Hn, .zero },
    },
    .{
        .pattern = "FCMEQ <Sd>, <Sn>, #<0.0>",
        .symbols = .{
            .Sd = .{ .reg = .{ .format = .{ .scalar = .single } } },
            .Sn = .{ .reg = .{ .format = .{ .scalar = .single } } },
            .@"0.0" = .{ .fimm = .{ .only_valid = 0.0 } },
        },
        .encode = .{ .fcmeq, .Sd, .Sn, .zero },
    },
    .{
        .pattern = "FCMEQ <Dd>, <Dn>, #<0.0>",
        .symbols = .{
            .Dd = .{ .reg = .{ .format = .{ .scalar = .double } } },
            .Dn = .{ .reg = .{ .format = .{ .scalar = .double } } },
            .@"0.0" = .{ .fimm = .{ .only_valid = 0.0 } },
        },
        .encode = .{ .fcmeq, .Dd, .Dn, .zero },
    },
    .{
        .requires = .{.fullfp16},
        .pattern = "FCMEQ <Vd>.<T>, <Vn>.<T>, #<0.0>",
        .symbols = .{
            .Vd = .{ .reg_alias = .vector },
            .T = .{ .arrangement = .{ .elem_size = .half } },
            .Vn = .{ .reg_alias = .vector },
            .@"0.0" = .{ .fimm = .{ .only_valid = 0.0 } },
        },
        .encode = .{
            .fcmeq,
            .{ .alias = .Vd, .format = .{ .vector = .T } },
            .{ .alias = .Vn, .format = .{ .vector = .T } },
            .zero,
        },
    },
    .{
        .pattern = "FCMEQ <Vd>.<T>, <Vn>.<T>, #<0.0>",
        .symbols = .{
            .Vd = .{ .reg_alias = .vector },
            .T = .{ .arrangement = .{ .elem_size = .single } },
            .Vn = .{ .reg_alias = .vector },
            .@"0.0" = .{ .fimm = .{ .only_valid = 0.0 } },
        },
        .encode = .{
            .fcmeq,
            .{ .alias = .Vd, .format = .{ .vector = .T } },
            .{ .alias = .Vn, .format = .{ .vector = .T } },
            .zero,
        },
    },
    .{
        .pattern = "FCMEQ <Vd>.2D, <Vn>.2D, #<0.0>",
        .symbols = .{
            .Vd = .{ .reg_alias = .vector },
            .Vn = .{ .reg_alias = .vector },
            .@"0.0" = .{ .fimm = .{ .only_valid = 0.0 } },
        },
        .encode = .{
            .fcmeq,
            .{ .alias = .Vd, .format = .{ .vector = .@"2d" } },
            .{ .alias = .Vn, .format = .{ .vector = .@"2d" } },
            .zero,
        },
    },
    // C7.2.59 FCMGE (zero)
    .{
        .requires = .{.fullfp16},
        .pattern = "FCMGE <Hd>, <Hn>, #<0.0>",
        .symbols = .{
            .Hd = .{ .reg = .{ .format = .{ .scalar = .half } } },
            .Hn = .{ .reg = .{ .format = .{ .scalar = .half } } },
            .@"0.0" = .{ .fimm = .{ .only_valid = 0.0 } },
        },
        .encode = .{ .fcmge, .Hd, .Hn, .zero },
    },
    .{
        .pattern = "FCMGE <Sd>, <Sn>, #<0.0>",
        .symbols = .{
            .Sd = .{ .reg = .{ .format = .{ .scalar = .single } } },
            .Sn = .{ .reg = .{ .format = .{ .scalar = .single } } },
            .@"0.0" = .{ .fimm = .{ .only_valid = 0.0 } },
        },
        .encode = .{ .fcmge, .Sd, .Sn, .zero },
    },
    .{
        .pattern = "FCMGE <Dd>, <Dn>, #<0.0>",
        .symbols = .{
            .Dd = .{ .reg = .{ .format = .{ .scalar = .double } } },
            .Dn = .{ .reg = .{ .format = .{ .scalar = .double } } },
            .@"0.0" = .{ .fimm = .{ .only_valid = 0.0 } },
        },
        .encode = .{ .fcmge, .Dd, .Dn, .zero },
    },
    .{
        .requires = .{.fullfp16},
        .pattern = "FCMGE <Vd>.<T>, <Vn>.<T>, #<0.0>",
        .symbols = .{
            .Vd = .{ .reg_alias = .vector },
            .T = .{ .arrangement = .{ .elem_size = .half } },
            .Vn = .{ .reg_alias = .vector },
            .@"0.0" = .{ .fimm = .{ .only_valid = 0.0 } },
        },
        .encode = .{
            .fcmge,
            .{ .alias = .Vd, .format = .{ .vector = .T } },
            .{ .alias = .Vn, .format = .{ .vector = .T } },
            .zero,
        },
    },
    .{
        .pattern = "FCMGE <Vd>.<T>, <Vn>.<T>, #<0.0>",
        .symbols = .{
            .Vd = .{ .reg_alias = .vector },
            .T = .{ .arrangement = .{ .elem_size = .single } },
            .Vn = .{ .reg_alias = .vector },
            .@"0.0" = .{ .fimm = .{ .only_valid = 0.0 } },
        },
        .encode = .{
            .fcmge,
            .{ .alias = .Vd, .format = .{ .vector = .T } },
            .{ .alias = .Vn, .format = .{ .vector = .T } },
            .zero,
        },
    },
    .{
        .pattern = "FCMGE <Vd>.2D, <Vn>.2D, #<0.0>",
        .symbols = .{
            .Vd = .{ .reg_alias = .vector },
            .Vn = .{ .reg_alias = .vector },
            .@"0.0" = .{ .fimm = .{ .only_valid = 0.0 } },
        },
        .encode = .{
            .fcmge,
            .{ .alias = .Vd, .format = .{ .vector = .@"2d" } },
            .{ .alias = .Vn, .format = .{ .vector = .@"2d" } },
            .zero,
        },
    },
    // C7.2.61 FCMGT (zero)
    .{
        .requires = .{.fullfp16},
        .pattern = "FCMGT <Hd>, <Hn>, #<0.0>",
        .symbols = .{
            .Hd = .{ .reg = .{ .format = .{ .scalar = .half } } },
            .Hn = .{ .reg = .{ .format = .{ .scalar = .half } } },
            .@"0.0" = .{ .fimm = .{ .only_valid = 0.0 } },
        },
        .encode = .{ .fcmgt, .Hd, .Hn, .zero },
    },
    .{
        .pattern = "FCMGT <Sd>, <Sn>, #<0.0>",
        .symbols = .{
            .Sd = .{ .reg = .{ .format = .{ .scalar = .single } } },
            .Sn = .{ .reg = .{ .format = .{ .scalar = .single } } },
            .@"0.0" = .{ .fimm = .{ .only_valid = 0.0 } },
        },
        .encode = .{ .fcmgt, .Sd, .Sn, .zero },
    },
    .{
        .pattern = "FCMGT <Dd>, <Dn>, #<0.0>",
        .symbols = .{
            .Dd = .{ .reg = .{ .format = .{ .scalar = .double } } },
            .Dn = .{ .reg = .{ .format = .{ .scalar = .double } } },
            .@"0.0" = .{ .fimm = .{ .only_valid = 0.0 } },
        },
        .encode = .{ .fcmgt, .Dd, .Dn, .zero },
    },
    .{
        .requires = .{.fullfp16},
        .pattern = "FCMGT <Vd>.<T>, <Vn>.<T>, #<0.0>",
        .symbols = .{
            .Vd = .{ .reg_alias = .vector },
            .T = .{ .arrangement = .{ .elem_size = .half } },
            .Vn = .{ .reg_alias = .vector },
            .@"0.0" = .{ .fimm = .{ .only_valid = 0.0 } },
        },
        .encode = .{
            .fcmgt,
            .{ .alias = .Vd, .format = .{ .vector = .T } },
            .{ .alias = .Vn, .format = .{ .vector = .T } },
            .zero,
        },
    },
    .{
        .pattern = "FCMGT <Vd>.<T>, <Vn>.<T>, #<0.0>",
        .symbols = .{
            .Vd = .{ .reg_alias = .vector },
            .T = .{ .arrangement = .{ .elem_size = .single } },
            .Vn = .{ .reg_alias = .vector },
            .@"0.0" = .{ .fimm = .{ .only_valid = 0.0 } },
        },
        .encode = .{
            .fcmgt,
            .{ .alias = .Vd, .format = .{ .vector = .T } },
            .{ .alias = .Vn, .format = .{ .vector = .T } },
            .zero,
        },
    },
    .{
        .pattern = "FCMGT <Vd>.2D, <Vn>.2D, #<0.0>",
        .symbols = .{
            .Vd = .{ .reg_alias = .vector },
            .Vn = .{ .reg_alias = .vector },
            .@"0.0" = .{ .fimm = .{ .only_valid = 0.0 } },
        },
        .encode = .{
            .fcmgt,
            .{ .alias = .Vd, .format = .{ .vector = .@"2d" } },
            .{ .alias = .Vn, .format = .{ .vector = .@"2d" } },
            .zero,
        },
    },
    // C7.2.64 FCMLE (zero)
    .{
        .requires = .{.fullfp16},
        .pattern = "FCMLE <Hd>, <Hn>, #<0.0>",
        .symbols = .{
            .Hd = .{ .reg = .{ .format = .{ .scalar = .half } } },
            .Hn = .{ .reg = .{ .format = .{ .scalar = .half } } },
            .@"0.0" = .{ .fimm = .{ .only_valid = 0.0 } },
        },
        .encode = .{ .fcmle, .Hd, .Hn, .zero },
    },
    .{
        .pattern = "FCMLE <Sd>, <Sn>, #<0.0>",
        .symbols = .{
            .Sd = .{ .reg = .{ .format = .{ .scalar = .single } } },
            .Sn = .{ .reg = .{ .format = .{ .scalar = .single } } },
            .@"0.0" = .{ .fimm = .{ .only_valid = 0.0 } },
        },
        .encode = .{ .fcmle, .Sd, .Sn, .zero },
    },
    .{
        .pattern = "FCMLE <Dd>, <Dn>, #<0.0>",
        .symbols = .{
            .Dd = .{ .reg = .{ .format = .{ .scalar = .double } } },
            .Dn = .{ .reg = .{ .format = .{ .scalar = .double } } },
            .@"0.0" = .{ .fimm = .{ .only_valid = 0.0 } },
        },
        .encode = .{ .fcmle, .Dd, .Dn, .zero },
    },
    .{
        .requires = .{.fullfp16},
        .pattern = "FCMLE <Vd>.<T>, <Vn>.<T>, #<0.0>",
        .symbols = .{
            .Vd = .{ .reg_alias = .vector },
            .T = .{ .arrangement = .{ .elem_size = .half } },
            .Vn = .{ .reg_alias = .vector },
            .@"0.0" = .{ .fimm = .{ .only_valid = 0.0 } },
        },
        .encode = .{
            .fcmle,
            .{ .alias = .Vd, .format = .{ .vector = .T } },
            .{ .alias = .Vn, .format = .{ .vector = .T } },
            .zero,
        },
    },
    .{
        .pattern = "FCMLE <Vd>.<T>, <Vn>.<T>, #<0.0>",
        .symbols = .{
            .Vd = .{ .reg_alias = .vector },
            .T = .{ .arrangement = .{ .elem_size = .single } },
            .Vn = .{ .reg_alias = .vector },
            .@"0.0" = .{ .fimm = .{ .only_valid = 0.0 } },
        },
        .encode = .{
            .fcmle,
            .{ .alias = .Vd, .format = .{ .vector = .T } },
            .{ .alias = .Vn, .format = .{ .vector = .T } },
            .zero,
        },
    },
    .{
        .pattern = "FCMLE <Vd>.2D, <Vn>.2D, #<0.0>",
        .symbols = .{
            .Vd = .{ .reg_alias = .vector },
            .Vn = .{ .reg_alias = .vector },
            .@"0.0" = .{ .fimm = .{ .only_valid = 0.0 } },
        },
        .encode = .{
            .fcmle,
            .{ .alias = .Vd, .format = .{ .vector = .@"2d" } },
            .{ .alias = .Vn, .format = .{ .vector = .@"2d" } },
            .zero,
        },
    },
    // C7.2.65 FCMLT (zero)
    .{
        .requires = .{.fullfp16},
        .pattern = "FCMLT <Hd>, <Hn>, #<0.0>",
        .symbols = .{
            .Hd = .{ .reg = .{ .format = .{ .scalar = .half } } },
            .Hn = .{ .reg = .{ .format = .{ .scalar = .half } } },
            .@"0.0" = .{ .fimm = .{ .only_valid = 0.0 } },
        },
        .encode = .{ .fcmlt, .Hd, .Hn, .zero },
    },
    .{
        .pattern = "FCMLT <Sd>, <Sn>, #<0.0>",
        .symbols = .{
            .Sd = .{ .reg = .{ .format = .{ .scalar = .single } } },
            .Sn = .{ .reg = .{ .format = .{ .scalar = .single } } },
            .@"0.0" = .{ .fimm = .{ .only_valid = 0.0 } },
        },
        .encode = .{ .fcmlt, .Sd, .Sn, .zero },
    },
    .{
        .pattern = "FCMLT <Dd>, <Dn>, #<0.0>",
        .symbols = .{
            .Dd = .{ .reg = .{ .format = .{ .scalar = .double } } },
            .Dn = .{ .reg = .{ .format = .{ .scalar = .double } } },
            .@"0.0" = .{ .fimm = .{ .only_valid = 0.0 } },
        },
        .encode = .{ .fcmlt, .Dd, .Dn, .zero },
    },
    .{
        .requires = .{.fullfp16},
        .pattern = "FCMLT <Vd>.<T>, <Vn>.<T>, #<0.0>",
        .symbols = .{
            .Vd = .{ .reg_alias = .vector },
            .T = .{ .arrangement = .{ .elem_size = .half } },
            .Vn = .{ .reg_alias = .vector },
            .@"0.0" = .{ .fimm = .{ .only_valid = 0.0 } },
        },
        .encode = .{
            .fcmlt,
            .{ .alias = .Vd, .format = .{ .vector = .T } },
            .{ .alias = .Vn, .format = .{ .vector = .T } },
            .zero,
        },
    },
    .{
        .pattern = "FCMLT <Vd>.<T>, <Vn>.<T>, #<0.0>",
        .symbols = .{
            .Vd = .{ .reg_alias = .vector },
            .T = .{ .arrangement = .{ .elem_size = .single } },
            .Vn = .{ .reg_alias = .vector },
            .@"0.0" = .{ .fimm = .{ .only_valid = 0.0 } },
        },
        .encode = .{
            .fcmlt,
            .{ .alias = .Vd, .format = .{ .vector = .T } },
            .{ .alias = .Vn, .format = .{ .vector = .T } },
            .zero,
        },
    },
    .{
        .pattern = "FCMLT <Vd>.2D, <Vn>.2D, #<0.0>",
        .symbols = .{
            .Vd = .{ .reg_alias = .vector },
            .Vn = .{ .reg_alias = .vector },
            .@"0.0" = .{ .fimm = .{ .only_valid = 0.0 } },
        },
        .encode = .{
            .fcmlt,
            .{ .alias = .Vd, .format = .{ .vector = .@"2d" } },
            .{ .alias = .Vn, .format = .{ .vector = .@"2d" } },
            .zero,
        },
    },
    // C7.2.70 FCVTAS (vector)
    .{
        .requires = .{.fullfp16},
        .pattern = "FCVTAS <Hd>, <Hn>",
        .symbols = .{
            .Hd = .{ .reg = .{ .format = .{ .scalar = .half } } },
            .Hn = .{ .reg = .{ .format = .{ .scalar = .half } } },
        },
        .encode = .{ .fcvtas, .Hd, .Hn },
    },
    .{
        .pattern = "FCVTAS <Sd>, <Sn>",
        .symbols = .{
            .Sd = .{ .reg = .{ .format = .{ .scalar = .single } } },
            .Sn = .{ .reg = .{ .format = .{ .scalar = .single } } },
        },
        .encode = .{ .fcvtas, .Sd, .Sn },
    },
    .{
        .pattern = "FCVTAS <Dd>, <Dn>",
        .symbols = .{
            .Dd = .{ .reg = .{ .format = .{ .scalar = .double } } },
            .Dn = .{ .reg = .{ .format = .{ .scalar = .double } } },
        },
        .encode = .{ .fcvtas, .Dd, .Dn },
    },
    .{
        .requires = .{.fullfp16},
        .pattern = "FCVTAS <Vd>.<T>, <Vn>.<T>",
        .symbols = .{
            .Vd = .{ .reg_alias = .vector },
            .T = .{ .arrangement = .{ .elem_size = .half } },
            .Vn = .{ .reg_alias = .vector },
        },
        .encode = .{
            .fcvtas,
            .{ .alias = .Vd, .format = .{ .vector = .T } },
            .{ .alias = .Vn, .format = .{ .vector = .T } },
        },
    },
    .{
        .pattern = "FCVTAS <Vd>.<T>, <Vn>.<T>",
        .symbols = .{
            .Vd = .{ .reg_alias = .vector },
            .T = .{ .arrangement = .{ .elem_size = .single } },
            .Vn = .{ .reg_alias = .vector },
        },
        .encode = .{
            .fcvtas,
            .{ .alias = .Vd, .format = .{ .vector = .T } },
            .{ .alias = .Vn, .format = .{ .vector = .T } },
        },
    },
    .{
        .pattern = "FCVTAS <Vd>.2D, <Vn>.2D",
        .symbols = .{
            .Vd = .{ .reg_alias = .vector },
            .Vn = .{ .reg_alias = .vector },
        },
        .encode = .{
            .fcvtas,
            .{ .alias = .Vd, .format = .{ .vector = .@"2d" } },
            .{ .alias = .Vn, .format = .{ .vector = .@"2d" } },
        },
    },
    // C7.2.71 FCVTAS (scalar)
    .{
        .requires = .{.fullfp16},
        .pattern = "FCVTAS <Wd>, <Hn>",
        .symbols = .{
            .Wd = .{ .reg = .{ .format = .{ .general = .word } } },
            .Hn = .{ .reg = .{ .format = .{ .scalar = .half } } },
        },
        .encode = .{ .fcvtas, .Wd, .Hn },
    },
    .{
        .requires = .{.fullfp16},
        .pattern = "FCVTAS <Xd>, <Hn>",
        .symbols = .{
            .Xd = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Hn = .{ .reg = .{ .format = .{ .scalar = .half } } },
        },
        .encode = .{ .fcvtas, .Xd, .Hn },
    },
    .{
        .pattern = "FCVTAS <Wd>, <Sn>",
        .symbols = .{
            .Wd = .{ .reg = .{ .format = .{ .general = .word } } },
            .Sn = .{ .reg = .{ .format = .{ .scalar = .single } } },
        },
        .encode = .{ .fcvtas, .Wd, .Sn },
    },
    .{
        .pattern = "FCVTAS <Xd>, <Sn>",
        .symbols = .{
            .Xd = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Sn = .{ .reg = .{ .format = .{ .scalar = .single } } },
        },
        .encode = .{ .fcvtas, .Xd, .Sn },
    },
    .{
        .pattern = "FCVTAS <Wd>, <Dn>",
        .symbols = .{
            .Wd = .{ .reg = .{ .format = .{ .general = .word } } },
            .Dn = .{ .reg = .{ .format = .{ .scalar = .double } } },
        },
        .encode = .{ .fcvtas, .Wd, .Dn },
    },
    .{
        .pattern = "FCVTAS <Xd>, <Dn>",
        .symbols = .{
            .Xd = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Dn = .{ .reg = .{ .format = .{ .scalar = .double } } },
        },
        .encode = .{ .fcvtas, .Xd, .Dn },
    },
    // C7.2.72 FCVTAU (vector)
    .{
        .requires = .{.fullfp16},
        .pattern = "FCVTAU <Hd>, <Hn>",
        .symbols = .{
            .Hd = .{ .reg = .{ .format = .{ .scalar = .half } } },
            .Hn = .{ .reg = .{ .format = .{ .scalar = .half } } },
        },
        .encode = .{ .fcvtau, .Hd, .Hn },
    },
    .{
        .pattern = "FCVTAU <Sd>, <Sn>",
        .symbols = .{
            .Sd = .{ .reg = .{ .format = .{ .scalar = .single } } },
            .Sn = .{ .reg = .{ .format = .{ .scalar = .single } } },
        },
        .encode = .{ .fcvtau, .Sd, .Sn },
    },
    .{
        .pattern = "FCVTAU <Dd>, <Dn>",
        .symbols = .{
            .Dd = .{ .reg = .{ .format = .{ .scalar = .double } } },
            .Dn = .{ .reg = .{ .format = .{ .scalar = .double } } },
        },
        .encode = .{ .fcvtau, .Dd, .Dn },
    },
    .{
        .requires = .{.fullfp16},
        .pattern = "FCVTAU <Vd>.<T>, <Vn>.<T>",
        .symbols = .{
            .Vd = .{ .reg_alias = .vector },
            .T = .{ .arrangement = .{ .elem_size = .half } },
            .Vn = .{ .reg_alias = .vector },
        },
        .encode = .{
            .fcvtau,
            .{ .alias = .Vd, .format = .{ .vector = .T } },
            .{ .alias = .Vn, .format = .{ .vector = .T } },
        },
    },
    .{
        .pattern = "FCVTAU <Vd>.<T>, <Vn>.<T>",
        .symbols = .{
            .Vd = .{ .reg_alias = .vector },
            .T = .{ .arrangement = .{ .elem_size = .single } },
            .Vn = .{ .reg_alias = .vector },
        },
        .encode = .{
            .fcvtau,
            .{ .alias = .Vd, .format = .{ .vector = .T } },
            .{ .alias = .Vn, .format = .{ .vector = .T } },
        },
    },
    .{
        .pattern = "FCVTAU <Vd>.2D, <Vn>.2D",
        .symbols = .{
            .Vd = .{ .reg_alias = .vector },
            .Vn = .{ .reg_alias = .vector },
        },
        .encode = .{
            .fcvtau,
            .{ .alias = .Vd, .format = .{ .vector = .@"2d" } },
            .{ .alias = .Vn, .format = .{ .vector = .@"2d" } },
        },
    },
    // C7.2.73 FCVTAU (scalar)
    .{
        .requires = .{.fullfp16},
        .pattern = "FCVTAU <Wd>, <Hn>",
        .symbols = .{
            .Wd = .{ .reg = .{ .format = .{ .general = .word } } },
            .Hn = .{ .reg = .{ .format = .{ .scalar = .half } } },
        },
        .encode = .{ .fcvtau, .Wd, .Hn },
    },
    .{
        .requires = .{.fullfp16},
        .pattern = "FCVTAU <Xd>, <Hn>",
        .symbols = .{
            .Xd = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Hn = .{ .reg = .{ .format = .{ .scalar = .half } } },
        },
        .encode = .{ .fcvtau, .Xd, .Hn },
    },
    .{
        .pattern = "FCVTAU <Wd>, <Sn>",
        .symbols = .{
            .Wd = .{ .reg = .{ .format = .{ .general = .word } } },
            .Sn = .{ .reg = .{ .format = .{ .scalar = .single } } },
        },
        .encode = .{ .fcvtau, .Wd, .Sn },
    },
    .{
        .pattern = "FCVTAU <Xd>, <Sn>",
        .symbols = .{
            .Xd = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Sn = .{ .reg = .{ .format = .{ .scalar = .single } } },
        },
        .encode = .{ .fcvtau, .Xd, .Sn },
    },
    .{
        .pattern = "FCVTAU <Wd>, <Dn>",
        .symbols = .{
            .Wd = .{ .reg = .{ .format = .{ .general = .word } } },
            .Dn = .{ .reg = .{ .format = .{ .scalar = .double } } },
        },
        .encode = .{ .fcvtau, .Wd, .Dn },
    },
    .{
        .pattern = "FCVTAU <Xd>, <Dn>",
        .symbols = .{
            .Xd = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Dn = .{ .reg = .{ .format = .{ .scalar = .double } } },
        },
        .encode = .{ .fcvtau, .Xd, .Dn },
    },
    // C7.2.75 FCVTMS (vector)
    .{
        .requires = .{.fullfp16},
        .pattern = "FCVTMS <Hd>, <Hn>",
        .symbols = .{
            .Hd = .{ .reg = .{ .format = .{ .scalar = .half } } },
            .Hn = .{ .reg = .{ .format = .{ .scalar = .half } } },
        },
        .encode = .{ .fcvtms, .Hd, .Hn },
    },
    .{
        .pattern = "FCVTMS <Sd>, <Sn>",
        .symbols = .{
            .Sd = .{ .reg = .{ .format = .{ .scalar = .single } } },
            .Sn = .{ .reg = .{ .format = .{ .scalar = .single } } },
        },
        .encode = .{ .fcvtms, .Sd, .Sn },
    },
    .{
        .pattern = "FCVTMS <Dd>, <Dn>",
        .symbols = .{
            .Dd = .{ .reg = .{ .format = .{ .scalar = .double } } },
            .Dn = .{ .reg = .{ .format = .{ .scalar = .double } } },
        },
        .encode = .{ .fcvtms, .Dd, .Dn },
    },
    .{
        .requires = .{.fullfp16},
        .pattern = "FCVTMS <Vd>.<T>, <Vn>.<T>",
        .symbols = .{
            .Vd = .{ .reg_alias = .vector },
            .T = .{ .arrangement = .{ .elem_size = .half } },
            .Vn = .{ .reg_alias = .vector },
        },
        .encode = .{
            .fcvtms,
            .{ .alias = .Vd, .format = .{ .vector = .T } },
            .{ .alias = .Vn, .format = .{ .vector = .T } },
        },
    },
    .{
        .pattern = "FCVTMS <Vd>.<T>, <Vn>.<T>",
        .symbols = .{
            .Vd = .{ .reg_alias = .vector },
            .T = .{ .arrangement = .{ .elem_size = .single } },
            .Vn = .{ .reg_alias = .vector },
        },
        .encode = .{
            .fcvtms,
            .{ .alias = .Vd, .format = .{ .vector = .T } },
            .{ .alias = .Vn, .format = .{ .vector = .T } },
        },
    },
    .{
        .pattern = "FCVTMS <Vd>.2D, <Vn>.2D",
        .symbols = .{
            .Vd = .{ .reg_alias = .vector },
            .Vn = .{ .reg_alias = .vector },
        },
        .encode = .{
            .fcvtms,
            .{ .alias = .Vd, .format = .{ .vector = .@"2d" } },
            .{ .alias = .Vn, .format = .{ .vector = .@"2d" } },
        },
    },
    // C7.2.76 FCVTMS (scalar)
    .{
        .requires = .{.fullfp16},
        .pattern = "FCVTMS <Wd>, <Hn>",
        .symbols = .{
            .Wd = .{ .reg = .{ .format = .{ .general = .word } } },
            .Hn = .{ .reg = .{ .format = .{ .scalar = .half } } },
        },
        .encode = .{ .fcvtms, .Wd, .Hn },
    },
    .{
        .requires = .{.fullfp16},
        .pattern = "FCVTMS <Xd>, <Hn>",
        .symbols = .{
            .Xd = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Hn = .{ .reg = .{ .format = .{ .scalar = .half } } },
        },
        .encode = .{ .fcvtms, .Xd, .Hn },
    },
    .{
        .pattern = "FCVTMS <Wd>, <Sn>",
        .symbols = .{
            .Wd = .{ .reg = .{ .format = .{ .general = .word } } },
            .Sn = .{ .reg = .{ .format = .{ .scalar = .single } } },
        },
        .encode = .{ .fcvtms, .Wd, .Sn },
    },
    .{
        .pattern = "FCVTMS <Xd>, <Sn>",
        .symbols = .{
            .Xd = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Sn = .{ .reg = .{ .format = .{ .scalar = .single } } },
        },
        .encode = .{ .fcvtms, .Xd, .Sn },
    },
    .{
        .pattern = "FCVTMS <Wd>, <Dn>",
        .symbols = .{
            .Wd = .{ .reg = .{ .format = .{ .general = .word } } },
            .Dn = .{ .reg = .{ .format = .{ .scalar = .double } } },
        },
        .encode = .{ .fcvtms, .Wd, .Dn },
    },
    .{
        .pattern = "FCVTMS <Xd>, <Dn>",
        .symbols = .{
            .Xd = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Dn = .{ .reg = .{ .format = .{ .scalar = .double } } },
        },
        .encode = .{ .fcvtms, .Xd, .Dn },
    },
    // C7.2.77 FCVTMU (vector)
    .{
        .requires = .{.fullfp16},
        .pattern = "FCVTMU <Hd>, <Hn>",
        .symbols = .{
            .Hd = .{ .reg = .{ .format = .{ .scalar = .half } } },
            .Hn = .{ .reg = .{ .format = .{ .scalar = .half } } },
        },
        .encode = .{ .fcvtmu, .Hd, .Hn },
    },
    .{
        .pattern = "FCVTMU <Sd>, <Sn>",
        .symbols = .{
            .Sd = .{ .reg = .{ .format = .{ .scalar = .single } } },
            .Sn = .{ .reg = .{ .format = .{ .scalar = .single } } },
        },
        .encode = .{ .fcvtmu, .Sd, .Sn },
    },
    .{
        .pattern = "FCVTMU <Dd>, <Dn>",
        .symbols = .{
            .Dd = .{ .reg = .{ .format = .{ .scalar = .double } } },
            .Dn = .{ .reg = .{ .format = .{ .scalar = .double } } },
        },
        .encode = .{ .fcvtmu, .Dd, .Dn },
    },
    .{
        .requires = .{.fullfp16},
        .pattern = "FCVTMU <Vd>.<T>, <Vn>.<T>",
        .symbols = .{
            .Vd = .{ .reg_alias = .vector },
            .T = .{ .arrangement = .{ .elem_size = .half } },
            .Vn = .{ .reg_alias = .vector },
        },
        .encode = .{
            .fcvtmu,
            .{ .alias = .Vd, .format = .{ .vector = .T } },
            .{ .alias = .Vn, .format = .{ .vector = .T } },
        },
    },
    .{
        .pattern = "FCVTMU <Vd>.<T>, <Vn>.<T>",
        .symbols = .{
            .Vd = .{ .reg_alias = .vector },
            .T = .{ .arrangement = .{ .elem_size = .single } },
            .Vn = .{ .reg_alias = .vector },
        },
        .encode = .{
            .fcvtmu,
            .{ .alias = .Vd, .format = .{ .vector = .T } },
            .{ .alias = .Vn, .format = .{ .vector = .T } },
        },
    },
    .{
        .pattern = "FCVTMU <Vd>.2D, <Vn>.2D",
        .symbols = .{
            .Vd = .{ .reg_alias = .vector },
            .Vn = .{ .reg_alias = .vector },
        },
        .encode = .{
            .fcvtmu,
            .{ .alias = .Vd, .format = .{ .vector = .@"2d" } },
            .{ .alias = .Vn, .format = .{ .vector = .@"2d" } },
        },
    },
    // C7.2.78 FCVTMU (scalar)
    .{
        .requires = .{.fullfp16},
        .pattern = "FCVTMU <Wd>, <Hn>",
        .symbols = .{
            .Wd = .{ .reg = .{ .format = .{ .general = .word } } },
            .Hn = .{ .reg = .{ .format = .{ .scalar = .half } } },
        },
        .encode = .{ .fcvtmu, .Wd, .Hn },
    },
    .{
        .requires = .{.fullfp16},
        .pattern = "FCVTMU <Xd>, <Hn>",
        .symbols = .{
            .Xd = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Hn = .{ .reg = .{ .format = .{ .scalar = .half } } },
        },
        .encode = .{ .fcvtmu, .Xd, .Hn },
    },
    .{
        .pattern = "FCVTMU <Wd>, <Sn>",
        .symbols = .{
            .Wd = .{ .reg = .{ .format = .{ .general = .word } } },
            .Sn = .{ .reg = .{ .format = .{ .scalar = .single } } },
        },
        .encode = .{ .fcvtmu, .Wd, .Sn },
    },
    .{
        .pattern = "FCVTMU <Xd>, <Sn>",
        .symbols = .{
            .Xd = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Sn = .{ .reg = .{ .format = .{ .scalar = .single } } },
        },
        .encode = .{ .fcvtmu, .Xd, .Sn },
    },
    .{
        .pattern = "FCVTMU <Wd>, <Dn>",
        .symbols = .{
            .Wd = .{ .reg = .{ .format = .{ .general = .word } } },
            .Dn = .{ .reg = .{ .format = .{ .scalar = .double } } },
        },
        .encode = .{ .fcvtmu, .Wd, .Dn },
    },
    .{
        .pattern = "FCVTMU <Xd>, <Dn>",
        .symbols = .{
            .Xd = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Dn = .{ .reg = .{ .format = .{ .scalar = .double } } },
        },
        .encode = .{ .fcvtmu, .Xd, .Dn },
    },
    // C7.2.80 FCVTNS (vector)
    .{
        .requires = .{.fullfp16},
        .pattern = "FCVTNS <Hd>, <Hn>",
        .symbols = .{
            .Hd = .{ .reg = .{ .format = .{ .scalar = .half } } },
            .Hn = .{ .reg = .{ .format = .{ .scalar = .half } } },
        },
        .encode = .{ .fcvtns, .Hd, .Hn },
    },
    .{
        .pattern = "FCVTNS <Sd>, <Sn>",
        .symbols = .{
            .Sd = .{ .reg = .{ .format = .{ .scalar = .single } } },
            .Sn = .{ .reg = .{ .format = .{ .scalar = .single } } },
        },
        .encode = .{ .fcvtns, .Sd, .Sn },
    },
    .{
        .pattern = "FCVTNS <Dd>, <Dn>",
        .symbols = .{
            .Dd = .{ .reg = .{ .format = .{ .scalar = .double } } },
            .Dn = .{ .reg = .{ .format = .{ .scalar = .double } } },
        },
        .encode = .{ .fcvtns, .Dd, .Dn },
    },
    .{
        .requires = .{.fullfp16},
        .pattern = "FCVTNS <Vd>.<T>, <Vn>.<T>",
        .symbols = .{
            .Vd = .{ .reg_alias = .vector },
            .T = .{ .arrangement = .{ .elem_size = .half } },
            .Vn = .{ .reg_alias = .vector },
        },
        .encode = .{
            .fcvtns,
            .{ .alias = .Vd, .format = .{ .vector = .T } },
            .{ .alias = .Vn, .format = .{ .vector = .T } },
        },
    },
    .{
        .pattern = "FCVTNS <Vd>.<T>, <Vn>.<T>",
        .symbols = .{
            .Vd = .{ .reg_alias = .vector },
            .T = .{ .arrangement = .{ .elem_size = .single } },
            .Vn = .{ .reg_alias = .vector },
        },
        .encode = .{
            .fcvtns,
            .{ .alias = .Vd, .format = .{ .vector = .T } },
            .{ .alias = .Vn, .format = .{ .vector = .T } },
        },
    },
    .{
        .pattern = "FCVTNS <Vd>.2D, <Vn>.2D",
        .symbols = .{
            .Vd = .{ .reg_alias = .vector },
            .Vn = .{ .reg_alias = .vector },
        },
        .encode = .{
            .fcvtns,
            .{ .alias = .Vd, .format = .{ .vector = .@"2d" } },
            .{ .alias = .Vn, .format = .{ .vector = .@"2d" } },
        },
    },
    // C7.2.81 FCVTNS (scalar)
    .{
        .requires = .{.fullfp16},
        .pattern = "FCVTNS <Wd>, <Hn>",
        .symbols = .{
            .Wd = .{ .reg = .{ .format = .{ .general = .word } } },
            .Hn = .{ .reg = .{ .format = .{ .scalar = .half } } },
        },
        .encode = .{ .fcvtns, .Wd, .Hn },
    },
    .{
        .requires = .{.fullfp16},
        .pattern = "FCVTNS <Xd>, <Hn>",
        .symbols = .{
            .Xd = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Hn = .{ .reg = .{ .format = .{ .scalar = .half } } },
        },
        .encode = .{ .fcvtns, .Xd, .Hn },
    },
    .{
        .pattern = "FCVTNS <Wd>, <Sn>",
        .symbols = .{
            .Wd = .{ .reg = .{ .format = .{ .general = .word } } },
            .Sn = .{ .reg = .{ .format = .{ .scalar = .single } } },
        },
        .encode = .{ .fcvtns, .Wd, .Sn },
    },
    .{
        .pattern = "FCVTNS <Xd>, <Sn>",
        .symbols = .{
            .Xd = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Sn = .{ .reg = .{ .format = .{ .scalar = .single } } },
        },
        .encode = .{ .fcvtns, .Xd, .Sn },
    },
    .{
        .pattern = "FCVTNS <Wd>, <Dn>",
        .symbols = .{
            .Wd = .{ .reg = .{ .format = .{ .general = .word } } },
            .Dn = .{ .reg = .{ .format = .{ .scalar = .double } } },
        },
        .encode = .{ .fcvtns, .Wd, .Dn },
    },
    .{
        .pattern = "FCVTNS <Xd>, <Dn>",
        .symbols = .{
            .Xd = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Dn = .{ .reg = .{ .format = .{ .scalar = .double } } },
        },
        .encode = .{ .fcvtns, .Xd, .Dn },
    },
    // C7.2.82 FCVTNU (vector)
    .{
        .requires = .{.fullfp16},
        .pattern = "FCVTNU <Hd>, <Hn>",
        .symbols = .{
            .Hd = .{ .reg = .{ .format = .{ .scalar = .half } } },
            .Hn = .{ .reg = .{ .format = .{ .scalar = .half } } },
        },
        .encode = .{ .fcvtnu, .Hd, .Hn },
    },
    .{
        .pattern = "FCVTNU <Sd>, <Sn>",
        .symbols = .{
            .Sd = .{ .reg = .{ .format = .{ .scalar = .single } } },
            .Sn = .{ .reg = .{ .format = .{ .scalar = .single } } },
        },
        .encode = .{ .fcvtnu, .Sd, .Sn },
    },
    .{
        .pattern = "FCVTNU <Dd>, <Dn>",
        .symbols = .{
            .Dd = .{ .reg = .{ .format = .{ .scalar = .double } } },
            .Dn = .{ .reg = .{ .format = .{ .scalar = .double } } },
        },
        .encode = .{ .fcvtnu, .Dd, .Dn },
    },
    .{
        .requires = .{.fullfp16},
        .pattern = "FCVTNU <Vd>.<T>, <Vn>.<T>",
        .symbols = .{
            .Vd = .{ .reg_alias = .vector },
            .T = .{ .arrangement = .{ .elem_size = .half } },
            .Vn = .{ .reg_alias = .vector },
        },
        .encode = .{
            .fcvtnu,
            .{ .alias = .Vd, .format = .{ .vector = .T } },
            .{ .alias = .Vn, .format = .{ .vector = .T } },
        },
    },
    .{
        .pattern = "FCVTNU <Vd>.<T>, <Vn>.<T>",
        .symbols = .{
            .Vd = .{ .reg_alias = .vector },
            .T = .{ .arrangement = .{ .elem_size = .single } },
            .Vn = .{ .reg_alias = .vector },
        },
        .encode = .{
            .fcvtnu,
            .{ .alias = .Vd, .format = .{ .vector = .T } },
            .{ .alias = .Vn, .format = .{ .vector = .T } },
        },
    },
    .{
        .pattern = "FCVTNU <Vd>.2D, <Vn>.2D",
        .symbols = .{
            .Vd = .{ .reg_alias = .vector },
            .Vn = .{ .reg_alias = .vector },
        },
        .encode = .{
            .fcvtnu,
            .{ .alias = .Vd, .format = .{ .vector = .@"2d" } },
            .{ .alias = .Vn, .format = .{ .vector = .@"2d" } },
        },
    },
    // C7.2.83 FCVTNU (scalar)
    .{
        .requires = .{.fullfp16},
        .pattern = "FCVTNU <Wd>, <Hn>",
        .symbols = .{
            .Wd = .{ .reg = .{ .format = .{ .general = .word } } },
            .Hn = .{ .reg = .{ .format = .{ .scalar = .half } } },
        },
        .encode = .{ .fcvtnu, .Wd, .Hn },
    },
    .{
        .requires = .{.fullfp16},
        .pattern = "FCVTNU <Xd>, <Hn>",
        .symbols = .{
            .Xd = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Hn = .{ .reg = .{ .format = .{ .scalar = .half } } },
        },
        .encode = .{ .fcvtnu, .Xd, .Hn },
    },
    .{
        .pattern = "FCVTNU <Wd>, <Sn>",
        .symbols = .{
            .Wd = .{ .reg = .{ .format = .{ .general = .word } } },
            .Sn = .{ .reg = .{ .format = .{ .scalar = .single } } },
        },
        .encode = .{ .fcvtnu, .Wd, .Sn },
    },
    .{
        .pattern = "FCVTNU <Xd>, <Sn>",
        .symbols = .{
            .Xd = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Sn = .{ .reg = .{ .format = .{ .scalar = .single } } },
        },
        .encode = .{ .fcvtnu, .Xd, .Sn },
    },
    .{
        .pattern = "FCVTNU <Wd>, <Dn>",
        .symbols = .{
            .Wd = .{ .reg = .{ .format = .{ .general = .word } } },
            .Dn = .{ .reg = .{ .format = .{ .scalar = .double } } },
        },
        .encode = .{ .fcvtnu, .Wd, .Dn },
    },
    .{
        .pattern = "FCVTNU <Xd>, <Dn>",
        .symbols = .{
            .Xd = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Dn = .{ .reg = .{ .format = .{ .scalar = .double } } },
        },
        .encode = .{ .fcvtnu, .Xd, .Dn },
    },
    // C7.2.84 FCVTPS (vector)
    .{
        .requires = .{.fullfp16},
        .pattern = "FCVTPS <Hd>, <Hn>",
        .symbols = .{
            .Hd = .{ .reg = .{ .format = .{ .scalar = .half } } },
            .Hn = .{ .reg = .{ .format = .{ .scalar = .half } } },
        },
        .encode = .{ .fcvtps, .Hd, .Hn },
    },
    .{
        .pattern = "FCVTPS <Sd>, <Sn>",
        .symbols = .{
            .Sd = .{ .reg = .{ .format = .{ .scalar = .single } } },
            .Sn = .{ .reg = .{ .format = .{ .scalar = .single } } },
        },
        .encode = .{ .fcvtps, .Sd, .Sn },
    },
    .{
        .pattern = "FCVTPS <Dd>, <Dn>",
        .symbols = .{
            .Dd = .{ .reg = .{ .format = .{ .scalar = .double } } },
            .Dn = .{ .reg = .{ .format = .{ .scalar = .double } } },
        },
        .encode = .{ .fcvtps, .Dd, .Dn },
    },
    .{
        .requires = .{.fullfp16},
        .pattern = "FCVTPS <Vd>.<T>, <Vn>.<T>",
        .symbols = .{
            .Vd = .{ .reg_alias = .vector },
            .T = .{ .arrangement = .{ .elem_size = .half } },
            .Vn = .{ .reg_alias = .vector },
        },
        .encode = .{
            .fcvtps,
            .{ .alias = .Vd, .format = .{ .vector = .T } },
            .{ .alias = .Vn, .format = .{ .vector = .T } },
        },
    },
    .{
        .pattern = "FCVTPS <Vd>.<T>, <Vn>.<T>",
        .symbols = .{
            .Vd = .{ .reg_alias = .vector },
            .T = .{ .arrangement = .{ .elem_size = .single } },
            .Vn = .{ .reg_alias = .vector },
        },
        .encode = .{
            .fcvtps,
            .{ .alias = .Vd, .format = .{ .vector = .T } },
            .{ .alias = .Vn, .format = .{ .vector = .T } },
        },
    },
    .{
        .pattern = "FCVTPS <Vd>.2D, <Vn>.2D",
        .symbols = .{
            .Vd = .{ .reg_alias = .vector },
            .Vn = .{ .reg_alias = .vector },
        },
        .encode = .{
            .fcvtps,
            .{ .alias = .Vd, .format = .{ .vector = .@"2d" } },
            .{ .alias = .Vn, .format = .{ .vector = .@"2d" } },
        },
    },
    // C7.2.85 FCVTPS (scalar)
    .{
        .requires = .{.fullfp16},
        .pattern = "FCVTPS <Wd>, <Hn>",
        .symbols = .{
            .Wd = .{ .reg = .{ .format = .{ .general = .word } } },
            .Hn = .{ .reg = .{ .format = .{ .scalar = .half } } },
        },
        .encode = .{ .fcvtps, .Wd, .Hn },
    },
    .{
        .requires = .{.fullfp16},
        .pattern = "FCVTPS <Xd>, <Hn>",
        .symbols = .{
            .Xd = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Hn = .{ .reg = .{ .format = .{ .scalar = .half } } },
        },
        .encode = .{ .fcvtps, .Xd, .Hn },
    },
    .{
        .pattern = "FCVTPS <Wd>, <Sn>",
        .symbols = .{
            .Wd = .{ .reg = .{ .format = .{ .general = .word } } },
            .Sn = .{ .reg = .{ .format = .{ .scalar = .single } } },
        },
        .encode = .{ .fcvtps, .Wd, .Sn },
    },
    .{
        .pattern = "FCVTPS <Xd>, <Sn>",
        .symbols = .{
            .Xd = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Sn = .{ .reg = .{ .format = .{ .scalar = .single } } },
        },
        .encode = .{ .fcvtps, .Xd, .Sn },
    },
    .{
        .pattern = "FCVTPS <Wd>, <Dn>",
        .symbols = .{
            .Wd = .{ .reg = .{ .format = .{ .general = .word } } },
            .Dn = .{ .reg = .{ .format = .{ .scalar = .double } } },
        },
        .encode = .{ .fcvtps, .Wd, .Dn },
    },
    .{
        .pattern = "FCVTPS <Xd>, <Dn>",
        .symbols = .{
            .Xd = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Dn = .{ .reg = .{ .format = .{ .scalar = .double } } },
        },
        .encode = .{ .fcvtps, .Xd, .Dn },
    },
    // C7.2.86 FCVTPU (vector)
    .{
        .requires = .{.fullfp16},
        .pattern = "FCVTPU <Hd>, <Hn>",
        .symbols = .{
            .Hd = .{ .reg = .{ .format = .{ .scalar = .half } } },
            .Hn = .{ .reg = .{ .format = .{ .scalar = .half } } },
        },
        .encode = .{ .fcvtpu, .Hd, .Hn },
    },
    .{
        .pattern = "FCVTPU <Sd>, <Sn>",
        .symbols = .{
            .Sd = .{ .reg = .{ .format = .{ .scalar = .single } } },
            .Sn = .{ .reg = .{ .format = .{ .scalar = .single } } },
        },
        .encode = .{ .fcvtpu, .Sd, .Sn },
    },
    .{
        .pattern = "FCVTPU <Dd>, <Dn>",
        .symbols = .{
            .Dd = .{ .reg = .{ .format = .{ .scalar = .double } } },
            .Dn = .{ .reg = .{ .format = .{ .scalar = .double } } },
        },
        .encode = .{ .fcvtpu, .Dd, .Dn },
    },
    .{
        .requires = .{.fullfp16},
        .pattern = "FCVTPU <Vd>.<T>, <Vn>.<T>",
        .symbols = .{
            .Vd = .{ .reg_alias = .vector },
            .T = .{ .arrangement = .{ .elem_size = .half } },
            .Vn = .{ .reg_alias = .vector },
        },
        .encode = .{
            .fcvtpu,
            .{ .alias = .Vd, .format = .{ .vector = .T } },
            .{ .alias = .Vn, .format = .{ .vector = .T } },
        },
    },
    .{
        .pattern = "FCVTPU <Vd>.<T>, <Vn>.<T>",
        .symbols = .{
            .Vd = .{ .reg_alias = .vector },
            .T = .{ .arrangement = .{ .elem_size = .single } },
            .Vn = .{ .reg_alias = .vector },
        },
        .encode = .{
            .fcvtpu,
            .{ .alias = .Vd, .format = .{ .vector = .T } },
            .{ .alias = .Vn, .format = .{ .vector = .T } },
        },
    },
    .{
        .pattern = "FCVTPU <Vd>.2D, <Vn>.2D",
        .symbols = .{
            .Vd = .{ .reg_alias = .vector },
            .Vn = .{ .reg_alias = .vector },
        },
        .encode = .{
            .fcvtpu,
            .{ .alias = .Vd, .format = .{ .vector = .@"2d" } },
            .{ .alias = .Vn, .format = .{ .vector = .@"2d" } },
        },
    },
    // C7.2.87 FCVTPU (scalar)
    .{
        .requires = .{.fullfp16},
        .pattern = "FCVTPU <Wd>, <Hn>",
        .symbols = .{
            .Wd = .{ .reg = .{ .format = .{ .general = .word } } },
            .Hn = .{ .reg = .{ .format = .{ .scalar = .half } } },
        },
        .encode = .{ .fcvtpu, .Wd, .Hn },
    },
    .{
        .requires = .{.fullfp16},
        .pattern = "FCVTPU <Xd>, <Hn>",
        .symbols = .{
            .Xd = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Hn = .{ .reg = .{ .format = .{ .scalar = .half } } },
        },
        .encode = .{ .fcvtpu, .Xd, .Hn },
    },
    .{
        .pattern = "FCVTPU <Wd>, <Sn>",
        .symbols = .{
            .Wd = .{ .reg = .{ .format = .{ .general = .word } } },
            .Sn = .{ .reg = .{ .format = .{ .scalar = .single } } },
        },
        .encode = .{ .fcvtpu, .Wd, .Sn },
    },
    .{
        .pattern = "FCVTPU <Xd>, <Sn>",
        .symbols = .{
            .Xd = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Sn = .{ .reg = .{ .format = .{ .scalar = .single } } },
        },
        .encode = .{ .fcvtpu, .Xd, .Sn },
    },
    .{
        .pattern = "FCVTPU <Wd>, <Dn>",
        .symbols = .{
            .Wd = .{ .reg = .{ .format = .{ .general = .word } } },
            .Dn = .{ .reg = .{ .format = .{ .scalar = .double } } },
        },
        .encode = .{ .fcvtpu, .Wd, .Dn },
    },
    .{
        .pattern = "FCVTPU <Xd>, <Dn>",
        .symbols = .{
            .Xd = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Dn = .{ .reg = .{ .format = .{ .scalar = .double } } },
        },
        .encode = .{ .fcvtpu, .Xd, .Dn },
    },
    // C7.2.90 FCVTZS (vector, integer)
    .{
        .requires = .{.fullfp16},
        .pattern = "FCVTZS <Hd>, <Hn>",
        .symbols = .{
            .Hd = .{ .reg = .{ .format = .{ .scalar = .half } } },
            .Hn = .{ .reg = .{ .format = .{ .scalar = .half } } },
        },
        .encode = .{ .fcvtzs, .Hd, .Hn },
    },
    .{
        .pattern = "FCVTZS <Sd>, <Sn>",
        .symbols = .{
            .Sd = .{ .reg = .{ .format = .{ .scalar = .single } } },
            .Sn = .{ .reg = .{ .format = .{ .scalar = .single } } },
        },
        .encode = .{ .fcvtzs, .Sd, .Sn },
    },
    .{
        .pattern = "FCVTZS <Dd>, <Dn>",
        .symbols = .{
            .Dd = .{ .reg = .{ .format = .{ .scalar = .double } } },
            .Dn = .{ .reg = .{ .format = .{ .scalar = .double } } },
        },
        .encode = .{ .fcvtzs, .Dd, .Dn },
    },
    .{
        .requires = .{.fullfp16},
        .pattern = "FCVTZS <Vd>.<T>, <Vn>.<T>",
        .symbols = .{
            .Vd = .{ .reg_alias = .vector },
            .T = .{ .arrangement = .{ .elem_size = .half } },
            .Vn = .{ .reg_alias = .vector },
        },
        .encode = .{
            .fcvtzs,
            .{ .alias = .Vd, .format = .{ .vector = .T } },
            .{ .alias = .Vn, .format = .{ .vector = .T } },
        },
    },
    .{
        .pattern = "FCVTZS <Vd>.<T>, <Vn>.<T>",
        .symbols = .{
            .Vd = .{ .reg_alias = .vector },
            .T = .{ .arrangement = .{ .elem_size = .single } },
            .Vn = .{ .reg_alias = .vector },
        },
        .encode = .{
            .fcvtzs,
            .{ .alias = .Vd, .format = .{ .vector = .T } },
            .{ .alias = .Vn, .format = .{ .vector = .T } },
        },
    },
    .{
        .pattern = "FCVTZS <Vd>.2D, <Vn>.2D",
        .symbols = .{
            .Vd = .{ .reg_alias = .vector },
            .Vn = .{ .reg_alias = .vector },
        },
        .encode = .{
            .fcvtzs,
            .{ .alias = .Vd, .format = .{ .vector = .@"2d" } },
            .{ .alias = .Vn, .format = .{ .vector = .@"2d" } },
        },
    },
    // C7.2.92 FCVTZS (scalar, integer)
    .{
        .requires = .{.fullfp16},
        .pattern = "FCVTZS <Wd>, <Hn>",
        .symbols = .{
            .Wd = .{ .reg = .{ .format = .{ .general = .word } } },
            .Hn = .{ .reg = .{ .format = .{ .scalar = .half } } },
        },
        .encode = .{ .fcvtzs, .Wd, .Hn },
    },
    .{
        .requires = .{.fullfp16},
        .pattern = "FCVTZS <Xd>, <Hn>",
        .symbols = .{
            .Xd = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Hn = .{ .reg = .{ .format = .{ .scalar = .half } } },
        },
        .encode = .{ .fcvtzs, .Xd, .Hn },
    },
    .{
        .pattern = "FCVTZS <Wd>, <Sn>",
        .symbols = .{
            .Wd = .{ .reg = .{ .format = .{ .general = .word } } },
            .Sn = .{ .reg = .{ .format = .{ .scalar = .single } } },
        },
        .encode = .{ .fcvtzs, .Wd, .Sn },
    },
    .{
        .pattern = "FCVTZS <Xd>, <Sn>",
        .symbols = .{
            .Xd = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Sn = .{ .reg = .{ .format = .{ .scalar = .single } } },
        },
        .encode = .{ .fcvtzs, .Xd, .Sn },
    },
    .{
        .pattern = "FCVTZS <Wd>, <Dn>",
        .symbols = .{
            .Wd = .{ .reg = .{ .format = .{ .general = .word } } },
            .Dn = .{ .reg = .{ .format = .{ .scalar = .double } } },
        },
        .encode = .{ .fcvtzs, .Wd, .Dn },
    },
    .{
        .pattern = "FCVTZS <Xd>, <Dn>",
        .symbols = .{
            .Xd = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Dn = .{ .reg = .{ .format = .{ .scalar = .double } } },
        },
        .encode = .{ .fcvtzs, .Xd, .Dn },
    },
    // C7.2.94 FCVTZU (vector, integer)
    .{
        .requires = .{.fullfp16},
        .pattern = "FCVTZU <Hd>, <Hn>",
        .symbols = .{
            .Hd = .{ .reg = .{ .format = .{ .scalar = .half } } },
            .Hn = .{ .reg = .{ .format = .{ .scalar = .half } } },
        },
        .encode = .{ .fcvtzu, .Hd, .Hn },
    },
    .{
        .pattern = "FCVTZU <Sd>, <Sn>",
        .symbols = .{
            .Sd = .{ .reg = .{ .format = .{ .scalar = .single } } },
            .Sn = .{ .reg = .{ .format = .{ .scalar = .single } } },
        },
        .encode = .{ .fcvtzu, .Sd, .Sn },
    },
    .{
        .pattern = "FCVTZU <Dd>, <Dn>",
        .symbols = .{
            .Dd = .{ .reg = .{ .format = .{ .scalar = .double } } },
            .Dn = .{ .reg = .{ .format = .{ .scalar = .double } } },
        },
        .encode = .{ .fcvtzu, .Dd, .Dn },
    },
    .{
        .requires = .{.fullfp16},
        .pattern = "FCVTZU <Vd>.<T>, <Vn>.<T>",
        .symbols = .{
            .Vd = .{ .reg_alias = .vector },
            .T = .{ .arrangement = .{ .elem_size = .half } },
            .Vn = .{ .reg_alias = .vector },
        },
        .encode = .{
            .fcvtzu,
            .{ .alias = .Vd, .format = .{ .vector = .T } },
            .{ .alias = .Vn, .format = .{ .vector = .T } },
        },
    },
    .{
        .pattern = "FCVTZU <Vd>.<T>, <Vn>.<T>",
        .symbols = .{
            .Vd = .{ .reg_alias = .vector },
            .T = .{ .arrangement = .{ .elem_size = .single } },
            .Vn = .{ .reg_alias = .vector },
        },
        .encode = .{
            .fcvtzu,
            .{ .alias = .Vd, .format = .{ .vector = .T } },
            .{ .alias = .Vn, .format = .{ .vector = .T } },
        },
    },
    .{
        .pattern = "FCVTZU <Vd>.2D, <Vn>.2D",
        .symbols = .{
            .Vd = .{ .reg_alias = .vector },
            .Vn = .{ .reg_alias = .vector },
        },
        .encode = .{
            .fcvtzu,
            .{ .alias = .Vd, .format = .{ .vector = .@"2d" } },
            .{ .alias = .Vn, .format = .{ .vector = .@"2d" } },
        },
    },
    // C7.2.96 FCVTZU (scalar, integer)
    .{
        .requires = .{.fullfp16},
        .pattern = "FCVTZU <Wd>, <Hn>",
        .symbols = .{
            .Wd = .{ .reg = .{ .format = .{ .general = .word } } },
            .Hn = .{ .reg = .{ .format = .{ .scalar = .half } } },
        },
        .encode = .{ .fcvtzu, .Wd, .Hn },
    },
    .{
        .requires = .{.fullfp16},
        .pattern = "FCVTZU <Xd>, <Hn>",
        .symbols = .{
            .Xd = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Hn = .{ .reg = .{ .format = .{ .scalar = .half } } },
        },
        .encode = .{ .fcvtzu, .Xd, .Hn },
    },
    .{
        .pattern = "FCVTZU <Wd>, <Sn>",
        .symbols = .{
            .Wd = .{ .reg = .{ .format = .{ .general = .word } } },
            .Sn = .{ .reg = .{ .format = .{ .scalar = .single } } },
        },
        .encode = .{ .fcvtzu, .Wd, .Sn },
    },
    .{
        .pattern = "FCVTZU <Xd>, <Sn>",
        .symbols = .{
            .Xd = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Sn = .{ .reg = .{ .format = .{ .scalar = .single } } },
        },
        .encode = .{ .fcvtzu, .Xd, .Sn },
    },
    .{
        .pattern = "FCVTZU <Wd>, <Dn>",
        .symbols = .{
            .Wd = .{ .reg = .{ .format = .{ .general = .word } } },
            .Dn = .{ .reg = .{ .format = .{ .scalar = .double } } },
        },
        .encode = .{ .fcvtzu, .Wd, .Dn },
    },
    .{
        .pattern = "FCVTZU <Xd>, <Dn>",
        .symbols = .{
            .Xd = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Dn = .{ .reg = .{ .format = .{ .scalar = .double } } },
        },
        .encode = .{ .fcvtzu, .Xd, .Dn },
    },
    // C7.2.129 FMOV (vector, immediate)
    .{
        .requires = .{.fullfp16},
        .pattern = "FMOV <Vd>.<T>, #<imm>",
        .symbols = .{
            .Vd = .{ .reg_alias = .vector },
            .T = .{ .arrangement = .{ .elem_size = .half } },
            .imm = .{ .fimm = .{} },
        },
        .encode = .{ .fmov, .{ .alias = .Vd, .format = .{ .vector = .T } }, .{ .immediate = .imm } },
    },
    .{
        .pattern = "FMOV <Vd>.<T>, #<imm>",
        .symbols = .{
            .Vd = .{ .reg_alias = .vector },
            .T = .{ .arrangement = .{ .elem_size = .single } },
            .imm = .{ .fimm = .{} },
        },
        .encode = .{ .fmov, .{ .alias = .Vd, .format = .{ .vector = .T } }, .{ .immediate = .imm } },
    },
    .{
        .pattern = "FMOV <Vd>.2D, #<imm>",
        .symbols = .{
            .Vd = .{ .reg_alias = .vector },
            .imm = .{ .fimm = .{} },
        },
        .encode = .{ .fmov, .{ .alias = .Vd, .format = .{ .vector = .@"2d" } }, .{ .immediate = .imm } },
    },
    // C7.2.130 FMOV (register)
    .{
        .requires = .{.fullfp16},
        .pattern = "FMOV <Hd>, <Hn>",
        .symbols = .{
            .Hd = .{ .reg = .{ .format = .{ .scalar = .half } } },
            .Hn = .{ .reg = .{ .format = .{ .scalar = .half } } },
        },
        .encode = .{ .fmov, .Hd, .{ .register = .Hn } },
    },
    .{
        .pattern = "FMOV <Sd>, <Sn>",
        .symbols = .{
            .Sd = .{ .reg = .{ .format = .{ .scalar = .single } } },
            .Sn = .{ .reg = .{ .format = .{ .scalar = .single } } },
        },
        .encode = .{ .fmov, .Sd, .{ .register = .Sn } },
    },
    .{
        .pattern = "FMOV <Dd>, <Dn>",
        .symbols = .{
            .Dd = .{ .reg = .{ .format = .{ .scalar = .double } } },
            .Dn = .{ .reg = .{ .format = .{ .scalar = .double } } },
        },
        .encode = .{ .fmov, .Dd, .{ .register = .Dn } },
    },
    // C7.2.131 FMOV (general)
    .{
        .requires = .{.fullfp16},
        .pattern = "FMOV <Wd>, <Hn>",
        .symbols = .{
            .Wd = .{ .reg = .{ .format = .{ .general = .word } } },
            .Hn = .{ .reg = .{ .format = .{ .scalar = .half } } },
        },
        .encode = .{ .fmov, .Wd, .{ .register = .Hn } },
    },
    .{
        .requires = .{.fullfp16},
        .pattern = "FMOV <Xd>, <Hn>",
        .symbols = .{
            .Xd = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Hn = .{ .reg = .{ .format = .{ .scalar = .half } } },
        },
        .encode = .{ .fmov, .Xd, .{ .register = .Hn } },
    },
    .{
        .requires = .{.fullfp16},
        .pattern = "FMOV <Hd>, <Wn>",
        .symbols = .{
            .Hd = .{ .reg = .{ .format = .{ .scalar = .half } } },
            .Wn = .{ .reg = .{ .format = .{ .general = .word } } },
        },
        .encode = .{ .fmov, .Hd, .{ .register = .Wn } },
    },
    .{
        .pattern = "FMOV <Sd>, <Wn>",
        .symbols = .{
            .Sd = .{ .reg = .{ .format = .{ .scalar = .single } } },
            .Wn = .{ .reg = .{ .format = .{ .general = .word } } },
        },
        .encode = .{ .fmov, .Sd, .{ .register = .Wn } },
    },
    .{
        .pattern = "FMOV <Wd>, <Sn>",
        .symbols = .{
            .Wd = .{ .reg = .{ .format = .{ .general = .word } } },
            .Sn = .{ .reg = .{ .format = .{ .scalar = .single } } },
        },
        .encode = .{ .fmov, .Wd, .{ .register = .Sn } },
    },
    .{
        .requires = .{.fullfp16},
        .pattern = "FMOV <Hd>, <Xn>",
        .symbols = .{
            .Hd = .{ .reg = .{ .format = .{ .scalar = .half } } },
            .Xn = .{ .reg = .{ .format = .{ .general = .doubleword } } },
        },
        .encode = .{ .fmov, .Hd, .{ .register = .Xn } },
    },
    .{
        .pattern = "FMOV <Dd>, <Xn>",
        .symbols = .{
            .Dd = .{ .reg = .{ .format = .{ .scalar = .double } } },
            .Xn = .{ .reg = .{ .format = .{ .general = .doubleword } } },
        },
        .encode = .{ .fmov, .Dd, .{ .register = .Xn } },
    },
    .{
        .pattern = "FMOV <Vd>.D[<index>], <Xn>",
        .symbols = .{
            .Vd = .{ .reg_alias = .vector },
            .index = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 1 }, .min_valid = 1 } },
            .Xn = .{ .reg = .{ .format = .{ .general = .doubleword } } },
        },
        .encode = .{
            .fmov,
            .{ .alias = .Vd, .format = .{ .element = .{ .size = .double, .index = .index } } },
            .{ .register = .Xn },
        },
    },
    .{
        .pattern = "FMOV <Xd>, <Dn>",
        .symbols = .{
            .Xd = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Dn = .{ .reg = .{ .format = .{ .scalar = .double } } },
        },
        .encode = .{ .fmov, .Xd, .{ .register = .Dn } },
    },
    .{
        .pattern = "FMOV <Xd>, <Vn>.D[<index>]",
        .symbols = .{
            .Xd = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Vn = .{ .reg_alias = .vector },
            .index = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 1 }, .min_valid = 1 } },
        },
        .encode = .{ .fmov, .Xd, .{
            .register = .{ .alias = .Vn, .format = .{ .element = .{ .size = .double, .index = .index } } },
        } },
    },
    // C7.2.132 FMOV (scalar, immediate)
    .{
        .requires = .{.fullfp16},
        .pattern = "FMOV <Hd>, #<imm>",
        .symbols = .{
            .Hd = .{ .reg = .{ .format = .{ .scalar = .half } } },
            .imm = .{ .fimm = .{} },
        },
        .encode = .{ .fmov, .Hd, .{ .immediate = .imm } },
    },
    .{
        .pattern = "FMOV <Sd>, #<imm>",
        .symbols = .{
            .Sd = .{ .reg = .{ .format = .{ .scalar = .single } } },
            .imm = .{ .fimm = .{} },
        },
        .encode = .{ .fmov, .Sd, .{ .immediate = .imm } },
    },
    .{
        .pattern = "FMOV <Dd>, #<imm>",
        .symbols = .{
            .Dd = .{ .reg = .{ .format = .{ .scalar = .double } } },
            .imm = .{ .fimm = .{} },
        },
        .encode = .{ .fmov, .Dd, .{ .immediate = .imm } },
    },
    // C7.2.157 FRINTI (vector)
    .{
        .requires = .{.fullfp16},
        .pattern = "FRINTI <Vd>.<T>, <Vn>.<T>",
        .symbols = .{
            .Vd = .{ .reg_alias = .vector },
            .T = .{ .arrangement = .{ .elem_size = .half } },
            .Vn = .{ .reg_alias = .vector },
        },
        .encode = .{
            .frinti,
            .{ .alias = .Vd, .format = .{ .vector = .T } },
            .{ .alias = .Vn, .format = .{ .vector = .T } },
        },
    },
    .{
        .pattern = "FRINTI <Vd>.<T>, <Vn>.<T>",
        .symbols = .{
            .Vd = .{ .reg_alias = .vector },
            .T = .{ .arrangement = .{ .elem_size = .single } },
            .Vn = .{ .reg_alias = .vector },
        },
        .encode = .{
            .frinti,
            .{ .alias = .Vd, .format = .{ .vector = .T } },
            .{ .alias = .Vn, .format = .{ .vector = .T } },
        },
    },
    .{
        .pattern = "FRINTI <Vd>.2D, <Vn>.2D",
        .symbols = .{
            .Vd = .{ .reg_alias = .vector },
            .Vn = .{ .reg_alias = .vector },
        },
        .encode = .{
            .frinti,
            .{ .alias = .Vd, .format = .{ .vector = .@"2d" } },
            .{ .alias = .Vn, .format = .{ .vector = .@"2d" } },
        },
    },
    // C7.2.168 FRINTI (scalar)
    .{
        .requires = .{.fullfp16},
        .pattern = "FRINTI <Hd>, <Hn>",
        .symbols = .{
            .Hd = .{ .reg = .{ .format = .{ .scalar = .half } } },
            .Hn = .{ .reg = .{ .format = .{ .scalar = .half } } },
        },
        .encode = .{ .frinti, .Hd, .Hn },
    },
    .{
        .pattern = "FRINTI <Sd>, <Sn>",
        .symbols = .{
            .Sd = .{ .reg = .{ .format = .{ .scalar = .single } } },
            .Sn = .{ .reg = .{ .format = .{ .scalar = .single } } },
        },
        .encode = .{ .frinti, .Sd, .Sn },
    },
    .{
        .pattern = "FRINTI <Dd>, <Dn>",
        .symbols = .{
            .Dd = .{ .reg = .{ .format = .{ .scalar = .double } } },
            .Dn = .{ .reg = .{ .format = .{ .scalar = .double } } },
        },
        .encode = .{ .frinti, .Dd, .Dn },
    },
    // C7.2.159 FRINTM (vector)
    .{
        .requires = .{.fullfp16},
        .pattern = "FRINTM <Vd>.<T>, <Vn>.<T>",
        .symbols = .{
            .Vd = .{ .reg_alias = .vector },
            .T = .{ .arrangement = .{ .elem_size = .half } },
            .Vn = .{ .reg_alias = .vector },
        },
        .encode = .{
            .frintm,
            .{ .alias = .Vd, .format = .{ .vector = .T } },
            .{ .alias = .Vn, .format = .{ .vector = .T } },
        },
    },
    .{
        .pattern = "FRINTM <Vd>.<T>, <Vn>.<T>",
        .symbols = .{
            .Vd = .{ .reg_alias = .vector },
            .T = .{ .arrangement = .{ .elem_size = .single } },
            .Vn = .{ .reg_alias = .vector },
        },
        .encode = .{
            .frintm,
            .{ .alias = .Vd, .format = .{ .vector = .T } },
            .{ .alias = .Vn, .format = .{ .vector = .T } },
        },
    },
    .{
        .pattern = "FRINTM <Vd>.2D, <Vn>.2D",
        .symbols = .{
            .Vd = .{ .reg_alias = .vector },
            .Vn = .{ .reg_alias = .vector },
        },
        .encode = .{
            .frintm,
            .{ .alias = .Vd, .format = .{ .vector = .@"2d" } },
            .{ .alias = .Vn, .format = .{ .vector = .@"2d" } },
        },
    },
    // C7.2.160 FRINTM (scalar)
    .{
        .requires = .{.fullfp16},
        .pattern = "FRINTM <Hd>, <Hn>",
        .symbols = .{
            .Hd = .{ .reg = .{ .format = .{ .scalar = .half } } },
            .Hn = .{ .reg = .{ .format = .{ .scalar = .half } } },
        },
        .encode = .{ .frintm, .Hd, .Hn },
    },
    .{
        .pattern = "FRINTM <Sd>, <Sn>",
        .symbols = .{
            .Sd = .{ .reg = .{ .format = .{ .scalar = .single } } },
            .Sn = .{ .reg = .{ .format = .{ .scalar = .single } } },
        },
        .encode = .{ .frintm, .Sd, .Sn },
    },
    .{
        .pattern = "FRINTM <Dd>, <Dn>",
        .symbols = .{
            .Dd = .{ .reg = .{ .format = .{ .scalar = .double } } },
            .Dn = .{ .reg = .{ .format = .{ .scalar = .double } } },
        },
        .encode = .{ .frintm, .Dd, .Dn },
    },
    // C7.2.161 FRINTN (vector)
    .{
        .requires = .{.fullfp16},
        .pattern = "FRINTN <Vd>.<T>, <Vn>.<T>",
        .symbols = .{
            .Vd = .{ .reg_alias = .vector },
            .T = .{ .arrangement = .{ .elem_size = .half } },
            .Vn = .{ .reg_alias = .vector },
        },
        .encode = .{
            .frintn,
            .{ .alias = .Vd, .format = .{ .vector = .T } },
            .{ .alias = .Vn, .format = .{ .vector = .T } },
        },
    },
    .{
        .pattern = "FRINTN <Vd>.<T>, <Vn>.<T>",
        .symbols = .{
            .Vd = .{ .reg_alias = .vector },
            .T = .{ .arrangement = .{ .elem_size = .single } },
            .Vn = .{ .reg_alias = .vector },
        },
        .encode = .{
            .frintn,
            .{ .alias = .Vd, .format = .{ .vector = .T } },
            .{ .alias = .Vn, .format = .{ .vector = .T } },
        },
    },
    .{
        .pattern = "FRINTN <Vd>.2D, <Vn>.2D",
        .symbols = .{
            .Vd = .{ .reg_alias = .vector },
            .Vn = .{ .reg_alias = .vector },
        },
        .encode = .{
            .frintn,
            .{ .alias = .Vd, .format = .{ .vector = .@"2d" } },
            .{ .alias = .Vn, .format = .{ .vector = .@"2d" } },
        },
    },
    // C7.2.162 FRINTN (scalar)
    .{
        .requires = .{.fullfp16},
        .pattern = "FRINTN <Hd>, <Hn>",
        .symbols = .{
            .Hd = .{ .reg = .{ .format = .{ .scalar = .half } } },
            .Hn = .{ .reg = .{ .format = .{ .scalar = .half } } },
        },
        .encode = .{ .frintn, .Hd, .Hn },
    },
    .{
        .pattern = "FRINTN <Sd>, <Sn>",
        .symbols = .{
            .Sd = .{ .reg = .{ .format = .{ .scalar = .single } } },
            .Sn = .{ .reg = .{ .format = .{ .scalar = .single } } },
        },
        .encode = .{ .frintn, .Sd, .Sn },
    },
    .{
        .pattern = "FRINTN <Dd>, <Dn>",
        .symbols = .{
            .Dd = .{ .reg = .{ .format = .{ .scalar = .double } } },
            .Dn = .{ .reg = .{ .format = .{ .scalar = .double } } },
        },
        .encode = .{ .frintn, .Dd, .Dn },
    },
    // C7.2.163 FRINTP (vector)
    .{
        .requires = .{.fullfp16},
        .pattern = "FRINTP <Vd>.<T>, <Vn>.<T>",
        .symbols = .{
            .Vd = .{ .reg_alias = .vector },
            .T = .{ .arrangement = .{ .elem_size = .half } },
            .Vn = .{ .reg_alias = .vector },
        },
        .encode = .{
            .frintp,
            .{ .alias = .Vd, .format = .{ .vector = .T } },
            .{ .alias = .Vn, .format = .{ .vector = .T } },
        },
    },
    .{
        .pattern = "FRINTP <Vd>.<T>, <Vn>.<T>",
        .symbols = .{
            .Vd = .{ .reg_alias = .vector },
            .T = .{ .arrangement = .{ .elem_size = .single } },
            .Vn = .{ .reg_alias = .vector },
        },
        .encode = .{
            .frintp,
            .{ .alias = .Vd, .format = .{ .vector = .T } },
            .{ .alias = .Vn, .format = .{ .vector = .T } },
        },
    },
    .{
        .pattern = "FRINTP <Vd>.2D, <Vn>.2D",
        .symbols = .{
            .Vd = .{ .reg_alias = .vector },
            .Vn = .{ .reg_alias = .vector },
        },
        .encode = .{
            .frintp,
            .{ .alias = .Vd, .format = .{ .vector = .@"2d" } },
            .{ .alias = .Vn, .format = .{ .vector = .@"2d" } },
        },
    },
    // C7.2.164 FRINTP (scalar)
    .{
        .requires = .{.fullfp16},
        .pattern = "FRINTP <Hd>, <Hn>",
        .symbols = .{
            .Hd = .{ .reg = .{ .format = .{ .scalar = .half } } },
            .Hn = .{ .reg = .{ .format = .{ .scalar = .half } } },
        },
        .encode = .{ .frintp, .Hd, .Hn },
    },
    .{
        .pattern = "FRINTP <Sd>, <Sn>",
        .symbols = .{
            .Sd = .{ .reg = .{ .format = .{ .scalar = .single } } },
            .Sn = .{ .reg = .{ .format = .{ .scalar = .single } } },
        },
        .encode = .{ .frintp, .Sd, .Sn },
    },
    .{
        .pattern = "FRINTP <Dd>, <Dn>",
        .symbols = .{
            .Dd = .{ .reg = .{ .format = .{ .scalar = .double } } },
            .Dn = .{ .reg = .{ .format = .{ .scalar = .double } } },
        },
        .encode = .{ .frintp, .Dd, .Dn },
    },
    // C7.2.167 FRINTZ (vector)
    .{
        .requires = .{.fullfp16},
        .pattern = "FRINTZ <Vd>.<T>, <Vn>.<T>",
        .symbols = .{
            .Vd = .{ .reg_alias = .vector },
            .T = .{ .arrangement = .{ .elem_size = .half } },
            .Vn = .{ .reg_alias = .vector },
        },
        .encode = .{
            .frintz,
            .{ .alias = .Vd, .format = .{ .vector = .T } },
            .{ .alias = .Vn, .format = .{ .vector = .T } },
        },
    },
    .{
        .pattern = "FRINTZ <Vd>.<T>, <Vn>.<T>",
        .symbols = .{
            .Vd = .{ .reg_alias = .vector },
            .T = .{ .arrangement = .{ .elem_size = .single } },
            .Vn = .{ .reg_alias = .vector },
        },
        .encode = .{
            .frintz,
            .{ .alias = .Vd, .format = .{ .vector = .T } },
            .{ .alias = .Vn, .format = .{ .vector = .T } },
        },
    },
    .{
        .pattern = "FRINTZ <Vd>.2D, <Vn>.2D",
        .symbols = .{
            .Vd = .{ .reg_alias = .vector },
            .Vn = .{ .reg_alias = .vector },
        },
        .encode = .{
            .frintz,
            .{ .alias = .Vd, .format = .{ .vector = .@"2d" } },
            .{ .alias = .Vn, .format = .{ .vector = .@"2d" } },
        },
    },
    // C7.2.168 FRINTZ (scalar)
    .{
        .requires = .{.fullfp16},
        .pattern = "FRINTZ <Hd>, <Hn>",
        .symbols = .{
            .Hd = .{ .reg = .{ .format = .{ .scalar = .half } } },
            .Hn = .{ .reg = .{ .format = .{ .scalar = .half } } },
        },
        .encode = .{ .frintz, .Hd, .Hn },
    },
    .{
        .pattern = "FRINTZ <Sd>, <Sn>",
        .symbols = .{
            .Sd = .{ .reg = .{ .format = .{ .scalar = .single } } },
            .Sn = .{ .reg = .{ .format = .{ .scalar = .single } } },
        },
        .encode = .{ .frintz, .Sd, .Sn },
    },
    .{
        .pattern = "FRINTZ <Dd>, <Dn>",
        .symbols = .{
            .Dd = .{ .reg = .{ .format = .{ .scalar = .double } } },
            .Dn = .{ .reg = .{ .format = .{ .scalar = .double } } },
        },
        .encode = .{ .frintz, .Dd, .Dn },
    },
    // C7.2.175 INS (element)
    .{
        .pattern = "INS <Vd>.B[<index1>], <Vn>.B[<index2>]",
        .symbols = .{
            .Vd = .{ .reg_alias = .vector },
            .index1 = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 4 } } },
            .Vn = .{ .reg_alias = .vector },
            .index2 = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 4 } } },
        },
        .encode = .{
            .ins,
            .{ .alias = .Vd, .format = .{ .element = .{ .size = .byte, .index = .index1 } } },
            .{ .alias = .Vn, .format = .{ .element = .{ .size = .byte, .index = .index2 } } },
        },
    },
    .{
        .pattern = "INS <Vd>.H[<index1>], <Vn>.H[<index2>]",
        .symbols = .{
            .Vd = .{ .reg_alias = .vector },
            .index1 = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 3 } } },
            .Vn = .{ .reg_alias = .vector },
            .index2 = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 3 } } },
        },
        .encode = .{
            .ins,
            .{ .alias = .Vd, .format = .{ .element = .{ .size = .half, .index = .index1 } } },
            .{ .alias = .Vn, .format = .{ .element = .{ .size = .half, .index = .index2 } } },
        },
    },
    .{
        .pattern = "INS <Vd>.S[<index1>], <Vn>.S[<index2>]",
        .symbols = .{
            .Vd = .{ .reg_alias = .vector },
            .index1 = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 2 } } },
            .Vn = .{ .reg_alias = .vector },
            .index2 = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 2 } } },
        },
        .encode = .{
            .ins,
            .{ .alias = .Vd, .format = .{ .element = .{ .size = .single, .index = .index1 } } },
            .{ .alias = .Vn, .format = .{ .element = .{ .size = .single, .index = .index2 } } },
        },
    },
    .{
        .pattern = "INS <Vd>.D[<index1>], <Vn>.D[<index2>]",
        .symbols = .{
            .Vd = .{ .reg_alias = .vector },
            .index1 = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 1 } } },
            .Vn = .{ .reg_alias = .vector },
            .index2 = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 1 } } },
        },
        .encode = .{
            .ins,
            .{ .alias = .Vd, .format = .{ .element = .{ .size = .double, .index = .index1 } } },
            .{ .alias = .Vn, .format = .{ .element = .{ .size = .double, .index = .index2 } } },
        },
    },
    // C7.2.176 INS (general)
    .{
        .pattern = "INS <Vd>.B[<index>], <Wn>",
        .symbols = .{
            .Vd = .{ .reg_alias = .vector },
            .index = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 4 } } },
            .Wn = .{ .reg = .{ .format = .{ .general = .word } } },
        },
        .encode = .{
            .ins,
            .{ .alias = .Vd, .format = .{ .element = .{ .size = .byte, .index = .index } } },
            .Wn,
        },
    },
    .{
        .pattern = "INS <Vd>.H[<index>], <Wn>",
        .symbols = .{
            .Vd = .{ .reg_alias = .vector },
            .index = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 3 } } },
            .Wn = .{ .reg = .{ .format = .{ .general = .word } } },
        },
        .encode = .{
            .ins,
            .{ .alias = .Vd, .format = .{ .element = .{ .size = .half, .index = .index } } },
            .Wn,
        },
    },
    .{
        .pattern = "INS <Vd>.S[<index>], <Wn>",
        .symbols = .{
            .Vd = .{ .reg_alias = .vector },
            .index = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 2 } } },
            .Wn = .{ .reg = .{ .format = .{ .general = .word } } },
        },
        .encode = .{
            .ins,
            .{ .alias = .Vd, .format = .{ .element = .{ .size = .single, .index = .index } } },
            .Wn,
        },
    },
    .{
        .pattern = "INS <Vd>.D[<index>], <Xn>",
        .symbols = .{
            .Vd = .{ .reg_alias = .vector },
            .index = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 1 } } },
            .Xn = .{ .reg = .{ .format = .{ .general = .doubleword } } },
        },
        .encode = .{
            .ins,
            .{ .alias = .Vd, .format = .{ .element = .{ .size = .double, .index = .index } } },
            .Xn,
        },
    },
    // C7.2.199 MOV (scalar)
    .{
        .pattern = "MOV <Vd>, <Vn>.B[<index>]",
        .symbols = .{
            .Vd = .{ .reg = .{ .format = .{ .scalar = .byte } } },
            .Vn = .{ .reg_alias = .vector },
            .index = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 4 } } },
        },
        .encode = .{
            .dup,
            .Vd,
            .{ .alias = .Vn, .format = .{ .element = .{ .size = .byte, .index = .index } } },
        },
    },
    .{
        .pattern = "MOV <Vd>, <Vn>.H[<index>]",
        .symbols = .{
            .Vd = .{ .reg = .{ .format = .{ .scalar = .half } } },
            .Vn = .{ .reg_alias = .vector },
            .index = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 3 } } },
        },
        .encode = .{
            .dup,
            .Vd,
            .{ .alias = .Vn, .format = .{ .element = .{ .size = .half, .index = .index } } },
        },
    },
    .{
        .pattern = "MOV <Vd>, <Vn>.S[<index>]",
        .symbols = .{
            .Vd = .{ .reg = .{ .format = .{ .scalar = .single } } },
            .Vn = .{ .reg_alias = .vector },
            .index = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 2 } } },
        },
        .encode = .{
            .dup,
            .Vd,
            .{ .alias = .Vn, .format = .{ .element = .{ .size = .single, .index = .index } } },
        },
    },
    .{
        .pattern = "MOV <Vd>, <Vn>.D[<index>]",
        .symbols = .{
            .Vd = .{ .reg = .{ .format = .{ .scalar = .double } } },
            .Vn = .{ .reg_alias = .vector },
            .index = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 1 } } },
        },
        .encode = .{
            .dup,
            .Vd,
            .{ .alias = .Vn, .format = .{ .element = .{ .size = .double, .index = .index } } },
        },
    },
    // C7.2.200 MOV (element)
    .{
        .pattern = "MOV <Vd>.B[<index1>], <Vn>.B[<index2>]",
        .symbols = .{
            .Vd = .{ .reg_alias = .vector },
            .index1 = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 4 } } },
            .Vn = .{ .reg_alias = .vector },
            .index2 = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 4 } } },
        },
        .encode = .{
            .ins,
            .{ .alias = .Vd, .format = .{ .element = .{ .size = .byte, .index = .index1 } } },
            .{ .alias = .Vn, .format = .{ .element = .{ .size = .byte, .index = .index2 } } },
        },
    },
    .{
        .pattern = "MOV <Vd>.H[<index1>], <Vn>.H[<index2>]",
        .symbols = .{
            .Vd = .{ .reg_alias = .vector },
            .index1 = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 3 } } },
            .Vn = .{ .reg_alias = .vector },
            .index2 = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 3 } } },
        },
        .encode = .{
            .ins,
            .{ .alias = .Vd, .format = .{ .element = .{ .size = .half, .index = .index1 } } },
            .{ .alias = .Vn, .format = .{ .element = .{ .size = .half, .index = .index2 } } },
        },
    },
    .{
        .pattern = "MOV <Vd>.S[<index1>], <Vn>.S[<index2>]",
        .symbols = .{
            .Vd = .{ .reg_alias = .vector },
            .index1 = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 2 } } },
            .Vn = .{ .reg_alias = .vector },
            .index2 = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 2 } } },
        },
        .encode = .{
            .ins,
            .{ .alias = .Vd, .format = .{ .element = .{ .size = .single, .index = .index1 } } },
            .{ .alias = .Vn, .format = .{ .element = .{ .size = .single, .index = .index2 } } },
        },
    },
    .{
        .pattern = "MOV <Vd>.D[<index1>], <Vn>.D[<index2>]",
        .symbols = .{
            .Vd = .{ .reg_alias = .vector },
            .index1 = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 1 } } },
            .Vn = .{ .reg_alias = .vector },
            .index2 = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 1 } } },
        },
        .encode = .{
            .ins,
            .{ .alias = .Vd, .format = .{ .element = .{ .size = .double, .index = .index1 } } },
            .{ .alias = .Vn, .format = .{ .element = .{ .size = .double, .index = .index2 } } },
        },
    },
    // C7.2.201 MOV (from general)
    .{
        .pattern = "MOV <Vd>.B[<index>], <Wn>",
        .symbols = .{
            .Vd = .{ .reg_alias = .vector },
            .index = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 4 } } },
            .Wn = .{ .reg = .{ .format = .{ .general = .word } } },
        },
        .encode = .{
            .ins,
            .{ .alias = .Vd, .format = .{ .element = .{ .size = .byte, .index = .index } } },
            .Wn,
        },
    },
    .{
        .pattern = "MOV <Vd>.H[<index>], <Wn>",
        .symbols = .{
            .Vd = .{ .reg_alias = .vector },
            .index = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 3 } } },
            .Wn = .{ .reg = .{ .format = .{ .general = .word } } },
        },
        .encode = .{
            .ins,
            .{ .alias = .Vd, .format = .{ .element = .{ .size = .half, .index = .index } } },
            .Wn,
        },
    },
    .{
        .pattern = "MOV <Vd>.S[<index>], <Wn>",
        .symbols = .{
            .Vd = .{ .reg_alias = .vector },
            .index = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 2 } } },
            .Wn = .{ .reg = .{ .format = .{ .general = .word } } },
        },
        .encode = .{
            .ins,
            .{ .alias = .Vd, .format = .{ .element = .{ .size = .single, .index = .index } } },
            .Wn,
        },
    },
    .{
        .pattern = "MOV <Vd>.D[<index>], <Xn>",
        .symbols = .{
            .Vd = .{ .reg_alias = .vector },
            .index = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 1 } } },
            .Xn = .{ .reg = .{ .format = .{ .general = .doubleword } } },
        },
        .encode = .{
            .ins,
            .{ .alias = .Vd, .format = .{ .element = .{ .size = .double, .index = .index } } },
            .Xn,
        },
    },
    // C7.2.202 MOV (vector)
    .{
        .pattern = "MOV <Vd>.<T>, <Vn>.<T>",
        .symbols = .{
            .Vd = .{ .reg_alias = .vector },
            .T = .{ .arrangement = .{ .elem_size = .byte } },
            .Vn = .{ .reg_alias = .vector },
        },
        .encode = .{
            .orr,
            .{ .alias = .Vd, .format = .{ .vector = .T } },
            .{ .alias = .Vn, .format = .{ .vector = .T } },
            .{ .register = .{ .alias = .Vn, .format = .{ .vector = .T } } },
        },
    },
    // C7.2.203 MOV (to general)
    .{
        .pattern = "MOV <Wd>, <Vn>.S[<index>]",
        .symbols = .{
            .Wd = .{ .reg = .{ .format = .{ .general = .word } } },
            .Vn = .{ .reg_alias = .vector },
            .index = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 2 } } },
        },
        .encode = .{
            .umov,
            .Wd,
            .{ .alias = .Vn, .format = .{ .element = .{ .size = .single, .index = .index } } },
        },
    },
    .{
        .pattern = "MOV <Xd>, <Vn>.D[<index>]",
        .symbols = .{
            .Xd = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Vn = .{ .reg_alias = .vector },
            .index = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 1 } } },
        },
        .encode = .{
            .umov,
            .Xd,
            .{ .alias = .Vn, .format = .{ .element = .{ .size = .double, .index = .index } } },
        },
    },
    // C7.2.209 NEG (vector)
    .{
        .pattern = "NEG <Vd>, <Vn>",
        .symbols = .{
            .Vd = .{ .reg = .{ .format = .{ .scalar = .double } } },
            .Vn = .{ .reg = .{ .format = .{ .scalar = .double } } },
        },
        .encode = .{ .neg, .Vd, .Vn },
    },
    .{
        .pattern = "NEG <Vd>.<T>, <Vn>.<T>",
        .symbols = .{
            .Vd = .{ .reg_alias = .vector },
            .T = .{ .arrangement = .{ .min_valid_len = 2 } },
            .Vn = .{ .reg_alias = .vector },
        },
        .encode = .{
            .neg,
            .{ .alias = .Vd, .format = .{ .vector = .T } },
            .{ .alias = .Vn, .format = .{ .vector = .T } },
        },
    },
    // C7.2.210 NOT
    .{
        .pattern = "NOT <Vd>.<T>, <Vn>.<T>",
        .symbols = .{
            .Vd = .{ .reg_alias = .vector },
            .T = .{ .arrangement = .{ .elem_size = .byte } },
            .Vn = .{ .reg_alias = .vector },
        },
        .encode = .{
            .not,
            .{ .alias = .Vd, .format = .{ .vector = .T } },
            .{ .alias = .Vn, .format = .{ .vector = .T } },
        },
    },
    // C7.2.234 SCVTF (vector, integer)
    .{
        .requires = .{.fullfp16},
        .pattern = "SCVTF <Hd>, <Hn>",
        .symbols = .{
            .Hd = .{ .reg = .{ .format = .{ .scalar = .half } } },
            .Hn = .{ .reg = .{ .format = .{ .scalar = .half } } },
        },
        .encode = .{ .scvtf, .Hd, .Hn },
    },
    .{
        .pattern = "SCVTF <Sd>, <Sn>",
        .symbols = .{
            .Sd = .{ .reg = .{ .format = .{ .scalar = .single } } },
            .Sn = .{ .reg = .{ .format = .{ .scalar = .single } } },
        },
        .encode = .{ .scvtf, .Sd, .Sn },
    },
    .{
        .pattern = "SCVTF <Dd>, <Dn>",
        .symbols = .{
            .Dd = .{ .reg = .{ .format = .{ .scalar = .double } } },
            .Dn = .{ .reg = .{ .format = .{ .scalar = .double } } },
        },
        .encode = .{ .scvtf, .Dd, .Dn },
    },
    .{
        .requires = .{.fullfp16},
        .pattern = "SCVTF <Vd>.<T>, <Vn>.<T>",
        .symbols = .{
            .Vd = .{ .reg_alias = .vector },
            .T = .{ .arrangement = .{ .elem_size = .half } },
            .Vn = .{ .reg_alias = .vector },
        },
        .encode = .{
            .scvtf,
            .{ .alias = .Vd, .format = .{ .vector = .T } },
            .{ .alias = .Vn, .format = .{ .vector = .T } },
        },
    },
    .{
        .pattern = "SCVTF <Vd>.<T>, <Vn>.<T>",
        .symbols = .{
            .Vd = .{ .reg_alias = .vector },
            .T = .{ .arrangement = .{ .elem_size = .single } },
            .Vn = .{ .reg_alias = .vector },
        },
        .encode = .{
            .scvtf,
            .{ .alias = .Vd, .format = .{ .vector = .T } },
            .{ .alias = .Vn, .format = .{ .vector = .T } },
        },
    },
    .{
        .pattern = "SCVTF <Vd>.2D, <Vn>.2D",
        .symbols = .{
            .Vd = .{ .reg_alias = .vector },
            .Vn = .{ .reg_alias = .vector },
        },
        .encode = .{
            .scvtf,
            .{ .alias = .Vd, .format = .{ .vector = .@"2d" } },
            .{ .alias = .Vn, .format = .{ .vector = .@"2d" } },
        },
    },
    // C7.2.236 SCVTF (scalar, integer)
    .{
        .requires = .{.fullfp16},
        .pattern = "SCVTF <Hd>, <Wn>",
        .symbols = .{
            .Hd = .{ .reg = .{ .format = .{ .scalar = .half } } },
            .Wn = .{ .reg = .{ .format = .{ .general = .word } } },
        },
        .encode = .{ .scvtf, .Hd, .Wn },
    },
    .{
        .pattern = "SCVTF <Sd>, <Wn>",
        .symbols = .{
            .Sd = .{ .reg = .{ .format = .{ .scalar = .single } } },
            .Wn = .{ .reg = .{ .format = .{ .general = .word } } },
        },
        .encode = .{ .scvtf, .Sd, .Wn },
    },
    .{
        .pattern = "SCVTF <Dd>, <Wn>",
        .symbols = .{
            .Dd = .{ .reg = .{ .format = .{ .scalar = .double } } },
            .Wn = .{ .reg = .{ .format = .{ .general = .word } } },
        },
        .encode = .{ .scvtf, .Dd, .Wn },
    },
    .{
        .requires = .{.fullfp16},
        .pattern = "SCVTF <Hd>, <Xn>",
        .symbols = .{
            .Hd = .{ .reg = .{ .format = .{ .scalar = .half } } },
            .Xn = .{ .reg = .{ .format = .{ .general = .doubleword } } },
        },
        .encode = .{ .scvtf, .Hd, .Xn },
    },
    .{
        .pattern = "SCVTF <Sd>, <Xn>",
        .symbols = .{
            .Sd = .{ .reg = .{ .format = .{ .scalar = .single } } },
            .Xn = .{ .reg = .{ .format = .{ .general = .doubleword } } },
        },
        .encode = .{ .scvtf, .Sd, .Xn },
    },
    .{
        .pattern = "SCVTF <Dd>, <Xn>",
        .symbols = .{
            .Dd = .{ .reg = .{ .format = .{ .scalar = .double } } },
            .Xn = .{ .reg = .{ .format = .{ .general = .doubleword } } },
        },
        .encode = .{ .scvtf, .Dd, .Xn },
    },
    // C7.2.279 SMOV
    .{
        .pattern = "SMOV <Wd>, <Vn>.B[<index>]",
        .symbols = .{
            .Wd = .{ .reg = .{ .format = .{ .general = .word } } },
            .Vn = .{ .reg_alias = .vector },
            .index = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 4 } } },
        },
        .encode = .{
            .smov,
            .Wd,
            .{ .alias = .Vn, .format = .{ .element = .{ .size = .byte, .index = .index } } },
        },
    },
    .{
        .pattern = "SMOV <Xd>, <Vn>.B[<index>]",
        .symbols = .{
            .Xd = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Vn = .{ .reg_alias = .vector },
            .index = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 4 } } },
        },
        .encode = .{
            .smov,
            .Xd,
            .{ .alias = .Vn, .format = .{ .element = .{ .size = .byte, .index = .index } } },
        },
    },
    .{
        .pattern = "SMOV <Wd>, <Vn>.H[<index>]",
        .symbols = .{
            .Wd = .{ .reg = .{ .format = .{ .general = .word } } },
            .Vn = .{ .reg_alias = .vector },
            .index = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 3 } } },
        },
        .encode = .{
            .smov,
            .Wd,
            .{ .alias = .Vn, .format = .{ .element = .{ .size = .half, .index = .index } } },
        },
    },
    .{
        .pattern = "SMOV <Xd>, <Vn>.H[<index>]",
        .symbols = .{
            .Xd = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Vn = .{ .reg_alias = .vector },
            .index = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 3 } } },
        },
        .encode = .{
            .smov,
            .Xd,
            .{ .alias = .Vn, .format = .{ .element = .{ .size = .half, .index = .index } } },
        },
    },
    .{
        .pattern = "SMOV <Xd>, <Vn>.S[<index>]",
        .symbols = .{
            .Xd = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Vn = .{ .reg_alias = .vector },
            .index = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 2 } } },
        },
        .encode = .{
            .smov,
            .Xd,
            .{ .alias = .Vn, .format = .{ .element = .{ .size = .single, .index = .index } } },
        },
    },
    // C7.2.282 SQABS
    .{
        .pattern = "SQABS <Vd>, <Vn>",
        .symbols = .{
            .Vd = .{ .reg = .{ .format = .{ .scalar = .byte } } },
            .Vn = .{ .reg = .{ .format = .{ .scalar = .byte } } },
        },
        .encode = .{ .sqabs, .Vd, .Vn },
    },
    .{
        .pattern = "SQABS <Vd>, <Vn>",
        .symbols = .{
            .Vd = .{ .reg = .{ .format = .{ .scalar = .half } } },
            .Vn = .{ .reg = .{ .format = .{ .scalar = .half } } },
        },
        .encode = .{ .sqabs, .Vd, .Vn },
    },
    .{
        .pattern = "SQABS <Vd>, <Vn>",
        .symbols = .{
            .Vd = .{ .reg = .{ .format = .{ .scalar = .single } } },
            .Vn = .{ .reg = .{ .format = .{ .scalar = .single } } },
        },
        .encode = .{ .sqabs, .Vd, .Vn },
    },
    .{
        .pattern = "SQABS <Vd>, <Vn>",
        .symbols = .{
            .Vd = .{ .reg = .{ .format = .{ .scalar = .double } } },
            .Vn = .{ .reg = .{ .format = .{ .scalar = .double } } },
        },
        .encode = .{ .sqabs, .Vd, .Vn },
    },
    .{
        .pattern = "SQABS <Vd>.<T>, <Vn>.<T>",
        .symbols = .{
            .Vd = .{ .reg_alias = .vector },
            .T = .{ .arrangement = .{ .min_valid_len = 2 } },
            .Vn = .{ .reg_alias = .vector },
        },
        .encode = .{
            .sqabs,
            .{ .alias = .Vd, .format = .{ .vector = .T } },
            .{ .alias = .Vn, .format = .{ .vector = .T } },
        },
    },
    // C7.2.308 SQXTN, SQXTN2
    .{
        .pattern = "SQXTN <Vd>, <Vn>",
        .symbols = .{
            .Vd = .{ .reg = .{ .format = .{ .scalar = .byte } } },
            .Vn = .{ .reg = .{ .format = .{ .scalar = .half } } },
        },
        .encode = .{ .sqxtn, .Vd, .Vn },
    },
    .{
        .pattern = "SQXTN <Vd>, <Vn>",
        .symbols = .{
            .Vd = .{ .reg = .{ .format = .{ .scalar = .half } } },
            .Vn = .{ .reg = .{ .format = .{ .scalar = .single } } },
        },
        .encode = .{ .sqxtn, .Vd, .Vn },
    },
    .{
        .pattern = "SQXTN <Vd>, <Vn>",
        .symbols = .{
            .Vd = .{ .reg = .{ .format = .{ .scalar = .single } } },
            .Vn = .{ .reg = .{ .format = .{ .scalar = .double } } },
        },
        .encode = .{ .sqxtn, .Vd, .Vn },
    },
    .{
        .pattern = "SQXTN <Vd>.8B, <Vn>.8H",
        .symbols = .{
            .Vd = .{ .reg_alias = .vector },
            .Vn = .{ .reg_alias = .vector },
        },
        .encode = .{
            .sqxtn,
            .{ .alias = .Vd, .format = .{ .vector = .@"8b" } },
            .{ .alias = .Vn, .format = .{ .vector = .@"8h" } },
        },
    },
    .{
        .pattern = "SQXTN2 <Vd>.16B, <Vn>.8H",
        .symbols = .{
            .Vd = .{ .reg_alias = .vector },
            .Vn = .{ .reg_alias = .vector },
        },
        .encode = .{
            .sqxtn2,
            .{ .alias = .Vd, .format = .{ .vector = .@"16b" } },
            .{ .alias = .Vn, .format = .{ .vector = .@"8h" } },
        },
    },
    .{
        .pattern = "SQXTN <Vd>.4H, <Vn>.4S",
        .symbols = .{
            .Vd = .{ .reg_alias = .vector },
            .Vn = .{ .reg_alias = .vector },
        },
        .encode = .{
            .sqxtn,
            .{ .alias = .Vd, .format = .{ .vector = .@"4h" } },
            .{ .alias = .Vn, .format = .{ .vector = .@"4s" } },
        },
    },
    .{
        .pattern = "SQXTN2 <Vd>.8H, <Vn>.4S",
        .symbols = .{
            .Vd = .{ .reg_alias = .vector },
            .Vn = .{ .reg_alias = .vector },
        },
        .encode = .{
            .sqxtn2,
            .{ .alias = .Vd, .format = .{ .vector = .@"8h" } },
            .{ .alias = .Vn, .format = .{ .vector = .@"4s" } },
        },
    },
    .{
        .pattern = "SQXTN <Vd>.2S, <Vn>.2D",
        .symbols = .{
            .Vd = .{ .reg_alias = .vector },
            .Vn = .{ .reg_alias = .vector },
        },
        .encode = .{
            .sqxtn,
            .{ .alias = .Vd, .format = .{ .vector = .@"2s" } },
            .{ .alias = .Vn, .format = .{ .vector = .@"2d" } },
        },
    },
    .{
        .pattern = "SQXTN2 <Vd>.4S, <Vn>.2D",
        .symbols = .{
            .Vd = .{ .reg_alias = .vector },
            .Vn = .{ .reg_alias = .vector },
        },
        .encode = .{
            .sqxtn2,
            .{ .alias = .Vd, .format = .{ .vector = .@"4s" } },
            .{ .alias = .Vn, .format = .{ .vector = .@"2d" } },
        },
    },
    // C7.2.337 SUQADD
    .{
        .pattern = "SUQADD <Vd>, <Vn>",
        .symbols = .{
            .Vd = .{ .reg = .{ .format = .{ .scalar = .byte } } },
            .Vn = .{ .reg = .{ .format = .{ .scalar = .byte } } },
        },
        .encode = .{ .suqadd, .Vd, .Vn },
    },
    .{
        .pattern = "SUQADD <Vd>, <Vn>",
        .symbols = .{
            .Vd = .{ .reg = .{ .format = .{ .scalar = .half } } },
            .Vn = .{ .reg = .{ .format = .{ .scalar = .half } } },
        },
        .encode = .{ .suqadd, .Vd, .Vn },
    },
    .{
        .pattern = "SUQADD <Vd>, <Vn>",
        .symbols = .{
            .Vd = .{ .reg = .{ .format = .{ .scalar = .single } } },
            .Vn = .{ .reg = .{ .format = .{ .scalar = .single } } },
        },
        .encode = .{ .suqadd, .Vd, .Vn },
    },
    .{
        .pattern = "SUQADD <Vd>, <Vn>",
        .symbols = .{
            .Vd = .{ .reg = .{ .format = .{ .scalar = .double } } },
            .Vn = .{ .reg = .{ .format = .{ .scalar = .double } } },
        },
        .encode = .{ .suqadd, .Vd, .Vn },
    },
    .{
        .pattern = "SUQADD <Vd>.<T>, <Vn>.<T>",
        .symbols = .{
            .Vd = .{ .reg_alias = .vector },
            .T = .{ .arrangement = .{ .min_valid_len = 2 } },
            .Vn = .{ .reg_alias = .vector },
        },
        .encode = .{
            .suqadd,
            .{ .alias = .Vd, .format = .{ .vector = .T } },
            .{ .alias = .Vn, .format = .{ .vector = .T } },
        },
    },
    // C7.2.353 UCVTF (vector, integer)
    .{
        .requires = .{.fullfp16},
        .pattern = "UCVTF <Hd>, <Hn>",
        .symbols = .{
            .Hd = .{ .reg = .{ .format = .{ .scalar = .half } } },
            .Hn = .{ .reg = .{ .format = .{ .scalar = .half } } },
        },
        .encode = .{ .ucvtf, .Hd, .Hn },
    },
    .{
        .pattern = "UCVTF <Sd>, <Sn>",
        .symbols = .{
            .Sd = .{ .reg = .{ .format = .{ .scalar = .single } } },
            .Sn = .{ .reg = .{ .format = .{ .scalar = .single } } },
        },
        .encode = .{ .ucvtf, .Sd, .Sn },
    },
    .{
        .pattern = "UCVTF <Dd>, <Dn>",
        .symbols = .{
            .Dd = .{ .reg = .{ .format = .{ .scalar = .double } } },
            .Dn = .{ .reg = .{ .format = .{ .scalar = .double } } },
        },
        .encode = .{ .ucvtf, .Dd, .Dn },
    },
    .{
        .requires = .{.fullfp16},
        .pattern = "UCVTF <Vd>.<T>, <Vn>.<T>",
        .symbols = .{
            .Vd = .{ .reg_alias = .vector },
            .T = .{ .arrangement = .{ .elem_size = .half } },
            .Vn = .{ .reg_alias = .vector },
        },
        .encode = .{
            .ucvtf,
            .{ .alias = .Vd, .format = .{ .vector = .T } },
            .{ .alias = .Vn, .format = .{ .vector = .T } },
        },
    },
    .{
        .pattern = "UCVTF <Vd>.<T>, <Vn>.<T>",
        .symbols = .{
            .Vd = .{ .reg_alias = .vector },
            .T = .{ .arrangement = .{ .elem_size = .single } },
            .Vn = .{ .reg_alias = .vector },
        },
        .encode = .{
            .ucvtf,
            .{ .alias = .Vd, .format = .{ .vector = .T } },
            .{ .alias = .Vn, .format = .{ .vector = .T } },
        },
    },
    .{
        .pattern = "UCVTF <Vd>.2D, <Vn>.2D",
        .symbols = .{
            .Vd = .{ .reg_alias = .vector },
            .Vn = .{ .reg_alias = .vector },
        },
        .encode = .{
            .ucvtf,
            .{ .alias = .Vd, .format = .{ .vector = .@"2d" } },
            .{ .alias = .Vn, .format = .{ .vector = .@"2d" } },
        },
    },
    // C7.2.355 UCVTF (scalar, integer)
    .{
        .requires = .{.fullfp16},
        .pattern = "UCVTF <Hd>, <Wn>",
        .symbols = .{
            .Hd = .{ .reg = .{ .format = .{ .scalar = .half } } },
            .Wn = .{ .reg = .{ .format = .{ .general = .word } } },
        },
        .encode = .{ .ucvtf, .Hd, .Wn },
    },
    .{
        .pattern = "UCVTF <Sd>, <Wn>",
        .symbols = .{
            .Sd = .{ .reg = .{ .format = .{ .scalar = .single } } },
            .Wn = .{ .reg = .{ .format = .{ .general = .word } } },
        },
        .encode = .{ .ucvtf, .Sd, .Wn },
    },
    .{
        .pattern = "UCVTF <Dd>, <Wn>",
        .symbols = .{
            .Dd = .{ .reg = .{ .format = .{ .scalar = .double } } },
            .Wn = .{ .reg = .{ .format = .{ .general = .word } } },
        },
        .encode = .{ .ucvtf, .Dd, .Wn },
    },
    .{
        .requires = .{.fullfp16},
        .pattern = "UCVTF <Hd>, <Xn>",
        .symbols = .{
            .Hd = .{ .reg = .{ .format = .{ .scalar = .half } } },
            .Xn = .{ .reg = .{ .format = .{ .general = .doubleword } } },
        },
        .encode = .{ .ucvtf, .Hd, .Xn },
    },
    .{
        .pattern = "UCVTF <Sd>, <Xn>",
        .symbols = .{
            .Sd = .{ .reg = .{ .format = .{ .scalar = .single } } },
            .Xn = .{ .reg = .{ .format = .{ .general = .doubleword } } },
        },
        .encode = .{ .ucvtf, .Sd, .Xn },
    },
    .{
        .pattern = "UCVTF <Dd>, <Xn>",
        .symbols = .{
            .Dd = .{ .reg = .{ .format = .{ .scalar = .double } } },
            .Xn = .{ .reg = .{ .format = .{ .general = .doubleword } } },
        },
        .encode = .{ .ucvtf, .Dd, .Xn },
    },
    // C7.2.371 UMOV
    .{
        .pattern = "UMOV <Wd>, <Vn>.B[<index>]",
        .symbols = .{
            .Wd = .{ .reg = .{ .format = .{ .general = .word } } },
            .Vn = .{ .reg_alias = .vector },
            .index = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 4 } } },
        },
        .encode = .{
            .umov,
            .Wd,
            .{ .alias = .Vn, .format = .{ .element = .{ .size = .byte, .index = .index } } },
        },
    },
    .{
        .pattern = "UMOV <Wd>, <Vn>.H[<index>]",
        .symbols = .{
            .Wd = .{ .reg = .{ .format = .{ .general = .word } } },
            .Vn = .{ .reg_alias = .vector },
            .index = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 3 } } },
        },
        .encode = .{
            .umov,
            .Wd,
            .{ .alias = .Vn, .format = .{ .element = .{ .size = .half, .index = .index } } },
        },
    },
    .{
        .pattern = "UMOV <Wd>, <Vn>.S[<index>]",
        .symbols = .{
            .Wd = .{ .reg = .{ .format = .{ .general = .word } } },
            .Vn = .{ .reg_alias = .vector },
            .index = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 2 } } },
        },
        .encode = .{
            .umov,
            .Wd,
            .{ .alias = .Vn, .format = .{ .element = .{ .size = .single, .index = .index } } },
        },
    },
    .{
        .pattern = "UMOV <Xd>, <Vn>.D[<index>]",
        .symbols = .{
            .Xd = .{ .reg = .{ .format = .{ .general = .doubleword } } },
            .Vn = .{ .reg_alias = .vector },
            .index = .{ .imm = .{ .type = .{ .signedness = .unsigned, .bits = 1 } } },
        },
        .encode = .{
            .umov,
            .Xd,
            .{ .alias = .Vn, .format = .{ .element = .{ .size = .double, .index = .index } } },
        },
    },
}

// This file is auto-generated by tools/gen_loongarch_encoding.zig

const Register = @import("bits.zig").Register;

pub const OpCode = enum {
    add_d,
    add_w,
    addi_d,
    addi_w,
    addu16i_d,
    amadd_b,
    amadd_d,
    amadd_h,
    amadd_w,
    amadd_db_b,
    amadd_db_d,
    amadd_db_h,
    amadd_db_w,
    amand_d,
    amand_w,
    amand_db_d,
    amand_db_w,
    amcas_b,
    amcas_d,
    amcas_h,
    amcas_w,
    amcas_db_b,
    amcas_db_d,
    amcas_db_h,
    amcas_db_w,
    ammax_d,
    ammax_du,
    ammax_w,
    ammax_wu,
    ammax_db_d,
    ammax_db_du,
    ammax_db_w,
    ammax_db_wu,
    ammin_d,
    ammin_du,
    ammin_w,
    ammin_wu,
    ammin_db_d,
    ammin_db_du,
    ammin_db_w,
    ammin_db_wu,
    amor_d,
    amor_w,
    amor_db_d,
    amor_db_w,
    amswap_b,
    amswap_d,
    amswap_h,
    amswap_w,
    amswap_db_b,
    amswap_db_d,
    amswap_db_h,
    amswap_db_w,
    amxor_d,
    amxor_w,
    amxor_db_d,
    amxor_db_w,
    @"and",
    andi,
    andn,
    asrtgt,
    asrtle,
    b,
    bceqz,
    bcnez,
    beq,
    beqz,
    bgt,
    bgtu,
    bl,
    ble,
    bleu,
    bne,
    bnez,
    @"break",
    bstrins_d,
    bstrins_w,
    bstrpick_d,
    bstrpick_w,
    cacop,
    catpick_d,
    catpick_w,
    clo_d,
    clo_w,
    clz_d,
    clz_w,
    cpucfg,
    crc_w_b_w,
    crc_w_d_w,
    crc_w_h_w,
    crc_w_w_w,
    crcc_w_b_w,
    crcc_w_d_w,
    crcc_w_h_w,
    crcc_w_w_w,
    csrxchg,
    cto_d,
    cto_w,
    ctz_d,
    ctz_w,
    cu32i_d,
    cu52i_d,
    dbar,
    dbgcall,
    div_d,
    div_du,
    div_w,
    div_wu,
    eret,
    fabs_d,
    fabs_s,
    fadd_d,
    fadd_s,
    fclass_d,
    fclass_s,
    fcmp_caf_d,
    fcmp_caf_s,
    fcmp_ceq_d,
    fcmp_ceq_s,
    fcmp_cle_d,
    fcmp_cle_s,
    fcmp_clt_d,
    fcmp_clt_s,
    fcmp_cne_d,
    fcmp_cne_s,
    fcmp_cor_d,
    fcmp_cor_s,
    fcmp_cueq_d,
    fcmp_cueq_s,
    fcmp_cule_d,
    fcmp_cule_s,
    fcmp_cult_d,
    fcmp_cult_s,
    fcmp_cun_d,
    fcmp_cun_s,
    fcmp_cune_d,
    fcmp_cune_s,
    fcmp_saf_d,
    fcmp_saf_s,
    fcmp_seq_d,
    fcmp_seq_s,
    fcmp_sle_d,
    fcmp_sle_s,
    fcmp_slt_d,
    fcmp_slt_s,
    fcmp_sne_d,
    fcmp_sne_s,
    fcmp_sor_d,
    fcmp_sor_s,
    fcmp_sueq_d,
    fcmp_sueq_s,
    fcmp_sule_d,
    fcmp_sule_s,
    fcmp_sult_d,
    fcmp_sult_s,
    fcmp_sun_d,
    fcmp_sun_s,
    fcmp_sune_d,
    fcmp_sune_s,
    fcopysign_d,
    fcopysign_s,
    fcsrrd,
    fcsrwr,
    fcvt_d_s,
    fcvt_s_d,
    fdiv_d,
    fdiv_s,
    ffint_d_l,
    ffint_d_w,
    ffint_s_l,
    ffint_s_w,
    fld_d,
    fld_s,
    fldgt_d,
    fldgt_s,
    fldle_d,
    fldle_s,
    fldx_d,
    fldx_s,
    flogb_d,
    flogb_s,
    fmadd_d,
    fmadd_s,
    fmax_d,
    fmax_s,
    fmaxa_d,
    fmaxa_s,
    fmin_d,
    fmin_s,
    fmina_d,
    fmina_s,
    fmov_d,
    fmov_s,
    fmsub_d,
    fmsub_s,
    fmul_d,
    fmul_s,
    fneg_d,
    fneg_s,
    fnmadd_d,
    fnmadd_s,
    fnmsub_d,
    fnmsub_s,
    frecip_d,
    frecip_s,
    frecipe_d,
    frecipe_s,
    frint_d,
    frint_s,
    frsqrt_d,
    frsqrt_s,
    frsqrte_d,
    frsqrte_s,
    fscaleb_d,
    fscaleb_s,
    fsel,
    fsqrt_d,
    fsqrt_s,
    fst_d,
    fst_s,
    fstgt_d,
    fstgt_s,
    fstle_d,
    fstle_s,
    fstx_d,
    fstx_s,
    fsub_d,
    fsub_s,
    ftint_l_d,
    ftint_l_s,
    ftint_w_d,
    ftint_w_s,
    ftintrm_l_d,
    ftintrm_l_s,
    ftintrm_w_d,
    ftintrm_w_s,
    ftintrne_l_d,
    ftintrne_l_s,
    ftintrne_w_d,
    ftintrne_w_s,
    ftintrp_l_d,
    ftintrp_l_s,
    ftintrp_w_d,
    ftintrp_w_s,
    ftintrz_l_d,
    ftintrz_l_s,
    ftintrz_w_d,
    ftintrz_w_s,
    ibar,
    idle,
    iocsrrd_b,
    iocsrrd_d,
    iocsrrd_h,
    iocsrrd_w,
    iocsrwr_b,
    iocsrwr_d,
    iocsrwr_h,
    iocsrwr_w,
    jirl,
    ld_b,
    ld_bu,
    ld_d,
    ld_h,
    ld_hu,
    ld_w,
    ld_wu,
    lddir,
    ldgt_b,
    ldgt_d,
    ldgt_h,
    ldgt_w,
    ldle_b,
    ldle_d,
    ldle_h,
    ldle_w,
    ldox4_d,
    ldox4_w,
    ldpte,
    ldx_b,
    ldx_bu,
    ldx_d,
    ldx_h,
    ldx_hu,
    ldx_w,
    ldx_wu,
    ll_d,
    ll_w,
    llacq_d,
    llacq_w,
    lu12i_w,
    maskeqz,
    masknez,
    mod_d,
    mod_du,
    mod_w,
    mod_wu,
    movfcc2fr,
    movfcc2gr,
    movfr2fcc,
    movfr2gr_d,
    movfr2gr_s,
    movfrh2gr_s,
    movgr2fcc,
    movgr2fr_d,
    movgr2fr_w,
    movgr2frh_w,
    mul_d,
    mul_w,
    mulh_d,
    mulh_du,
    mulh_w,
    mulh_wu,
    mulw_d_w,
    mulw_d_wu,
    nor,
    @"or",
    ori,
    orn,
    pcaddu12i,
    pcaddu18i,
    pcaddu2i,
    pcalau12i,
    preld,
    preldx,
    rdtime_d,
    rdtimeh_w,
    rdtimel_w,
    revb_2h,
    revb_2w,
    revb_4h,
    revb_d,
    revbit_4b,
    revbit_8b,
    revbit_d,
    revbit_w,
    revh_2w,
    revh_d,
    rotr_d,
    rotr_w,
    rotri_d,
    rotri_w,
    sc_d,
    sc_q,
    sc_w,
    screl_d,
    screl_w,
    sext_b,
    sext_h,
    sladd_d,
    sladd_w,
    sladd_wu,
    sll_d,
    sll_w,
    slli_d,
    slli_w,
    slt,
    slti,
    sltu,
    sltui,
    sra_d,
    sra_w,
    srai_d,
    srai_w,
    srl_d,
    srl_w,
    srli_d,
    srli_w,
    st_b,
    st_d,
    st_h,
    st_w,
    stgt_b,
    stgt_d,
    stgt_h,
    stgt_w,
    stle_b,
    stle_d,
    stle_h,
    stle_w,
    stox4_d,
    stox4_w,
    stx_b,
    stx_d,
    stx_h,
    stx_w,
    sub_d,
    sub_w,
    syscall,
    tlbclr,
    tlbfill,
    tlbflush,
    tlbinv,
    tlbrd,
    tlbsrch,
    tlbwr,
    xor,
    xori,
    xxx_unknown_1,

    pub fn enc(opcode: OpCode) u32 {
        return switch (opcode) {
            .add_d => 0x00108000,
            .add_w => 0x00100000,
            .addi_d => 0x02c00000,
            .addi_w => 0x02800000,
            .addu16i_d => 0x10000000,
            .amadd_b => 0x385d0000,
            .amadd_d => 0x38618000,
            .amadd_h => 0x385d8000,
            .amadd_w => 0x38610000,
            .amadd_db_b => 0x385f0000,
            .amadd_db_d => 0x386a8000,
            .amadd_db_h => 0x385f8000,
            .amadd_db_w => 0x386a0000,
            .amand_d => 0x38628000,
            .amand_w => 0x38620000,
            .amand_db_d => 0x386b8000,
            .amand_db_w => 0x386b0000,
            .amcas_b => 0x38580000,
            .amcas_d => 0x38598000,
            .amcas_h => 0x38588000,
            .amcas_w => 0x38590000,
            .amcas_db_b => 0x385a0000,
            .amcas_db_d => 0x385b8000,
            .amcas_db_h => 0x385a8000,
            .amcas_db_w => 0x385b0000,
            .ammax_d => 0x38658000,
            .ammax_du => 0x38678000,
            .ammax_w => 0x38650000,
            .ammax_wu => 0x38670000,
            .ammax_db_d => 0x386e8000,
            .ammax_db_du => 0x38708000,
            .ammax_db_w => 0x386e0000,
            .ammax_db_wu => 0x38700000,
            .ammin_d => 0x38668000,
            .ammin_du => 0x38688000,
            .ammin_w => 0x38660000,
            .ammin_wu => 0x38680000,
            .ammin_db_d => 0x386f8000,
            .ammin_db_du => 0x38718000,
            .ammin_db_w => 0x386f0000,
            .ammin_db_wu => 0x38710000,
            .amor_d => 0x38638000,
            .amor_w => 0x38630000,
            .amor_db_d => 0x386c8000,
            .amor_db_w => 0x386c0000,
            .amswap_b => 0x385c0000,
            .amswap_d => 0x38608000,
            .amswap_h => 0x385c8000,
            .amswap_w => 0x38600000,
            .amswap_db_b => 0x385e0000,
            .amswap_db_d => 0x38698000,
            .amswap_db_h => 0x385e8000,
            .amswap_db_w => 0x38690000,
            .amxor_d => 0x38648000,
            .amxor_w => 0x38640000,
            .amxor_db_d => 0x386d8000,
            .amxor_db_w => 0x386d0000,
            .@"and" => 0x00148000,
            .andi => 0x03400000,
            .andn => 0x00168000,
            .asrtgt => 0x00018000,
            .asrtle => 0x00010000,
            .b => 0x50000000,
            .bceqz => 0x48000000,
            .bcnez => 0x48000100,
            .beq => 0x58000000,
            .beqz => 0x40000000,
            .bgt => 0x60000000,
            .bgtu => 0x68000000,
            .bl => 0x54000000,
            .ble => 0x64000000,
            .bleu => 0x6c000000,
            .bne => 0x5c000000,
            .bnez => 0x44000000,
            .@"break" => 0x002a0000,
            .bstrins_d => 0x00800000,
            .bstrins_w => 0x00600000,
            .bstrpick_d => 0x00c00000,
            .bstrpick_w => 0x00608000,
            .cacop => 0x06000000,
            .catpick_d => 0x000c0000,
            .catpick_w => 0x00080000,
            .clo_d => 0x00002000,
            .clo_w => 0x00001000,
            .clz_d => 0x00002400,
            .clz_w => 0x00001400,
            .cpucfg => 0x00006c00,
            .crc_w_b_w => 0x00240000,
            .crc_w_d_w => 0x00258000,
            .crc_w_h_w => 0x00248000,
            .crc_w_w_w => 0x00250000,
            .crcc_w_b_w => 0x00260000,
            .crcc_w_d_w => 0x00278000,
            .crcc_w_h_w => 0x00268000,
            .crcc_w_w_w => 0x00270000,
            .csrxchg => 0x04000000,
            .cto_d => 0x00002800,
            .cto_w => 0x00001800,
            .ctz_d => 0x00002c00,
            .ctz_w => 0x00001c00,
            .cu32i_d => 0x16000000,
            .cu52i_d => 0x03000000,
            .dbar => 0x38720000,
            .dbgcall => 0x002a8000,
            .div_d => 0x00220000,
            .div_du => 0x00230000,
            .div_w => 0x00200000,
            .div_wu => 0x00210000,
            .eret => 0x06483800,
            .fabs_d => 0x01140800,
            .fabs_s => 0x01140400,
            .fadd_d => 0x01010000,
            .fadd_s => 0x01008000,
            .fclass_d => 0x01143800,
            .fclass_s => 0x01143400,
            .fcmp_caf_d => 0x0c200000,
            .fcmp_caf_s => 0x0c100000,
            .fcmp_ceq_d => 0x0c220000,
            .fcmp_ceq_s => 0x0c120000,
            .fcmp_cle_d => 0x0c230000,
            .fcmp_cle_s => 0x0c130000,
            .fcmp_clt_d => 0x0c210000,
            .fcmp_clt_s => 0x0c110000,
            .fcmp_cne_d => 0x0c280000,
            .fcmp_cne_s => 0x0c180000,
            .fcmp_cor_d => 0x0c2a0000,
            .fcmp_cor_s => 0x0c1a0000,
            .fcmp_cueq_d => 0x0c260000,
            .fcmp_cueq_s => 0x0c160000,
            .fcmp_cule_d => 0x0c270000,
            .fcmp_cule_s => 0x0c170000,
            .fcmp_cult_d => 0x0c250000,
            .fcmp_cult_s => 0x0c150000,
            .fcmp_cun_d => 0x0c240000,
            .fcmp_cun_s => 0x0c140000,
            .fcmp_cune_d => 0x0c2c0000,
            .fcmp_cune_s => 0x0c1c0000,
            .fcmp_saf_d => 0x0c208000,
            .fcmp_saf_s => 0x0c108000,
            .fcmp_seq_d => 0x0c228000,
            .fcmp_seq_s => 0x0c128000,
            .fcmp_sle_d => 0x0c238000,
            .fcmp_sle_s => 0x0c138000,
            .fcmp_slt_d => 0x0c218000,
            .fcmp_slt_s => 0x0c118000,
            .fcmp_sne_d => 0x0c288000,
            .fcmp_sne_s => 0x0c188000,
            .fcmp_sor_d => 0x0c2a8000,
            .fcmp_sor_s => 0x0c1a8000,
            .fcmp_sueq_d => 0x0c268000,
            .fcmp_sueq_s => 0x0c168000,
            .fcmp_sule_d => 0x0c278000,
            .fcmp_sule_s => 0x0c178000,
            .fcmp_sult_d => 0x0c258000,
            .fcmp_sult_s => 0x0c158000,
            .fcmp_sun_d => 0x0c248000,
            .fcmp_sun_s => 0x0c148000,
            .fcmp_sune_d => 0x0c2c8000,
            .fcmp_sune_s => 0x0c1c8000,
            .fcopysign_d => 0x01130000,
            .fcopysign_s => 0x01128000,
            .fcsrrd => 0x0114c800,
            .fcsrwr => 0x0114c000,
            .fcvt_d_s => 0x01192400,
            .fcvt_s_d => 0x01191800,
            .fdiv_d => 0x01070000,
            .fdiv_s => 0x01068000,
            .ffint_d_l => 0x011d2800,
            .ffint_d_w => 0x011d2000,
            .ffint_s_l => 0x011d1800,
            .ffint_s_w => 0x011d1000,
            .fld_d => 0x2b800000,
            .fld_s => 0x2b000000,
            .fldgt_d => 0x38748000,
            .fldgt_s => 0x38740000,
            .fldle_d => 0x38758000,
            .fldle_s => 0x38750000,
            .fldx_d => 0x38340000,
            .fldx_s => 0x38300000,
            .flogb_d => 0x01142800,
            .flogb_s => 0x01142400,
            .fmadd_d => 0x08200000,
            .fmadd_s => 0x08100000,
            .fmax_d => 0x01090000,
            .fmax_s => 0x01088000,
            .fmaxa_d => 0x010d0000,
            .fmaxa_s => 0x010c8000,
            .fmin_d => 0x010b0000,
            .fmin_s => 0x010a8000,
            .fmina_d => 0x010f0000,
            .fmina_s => 0x010e8000,
            .fmov_d => 0x01149800,
            .fmov_s => 0x01149400,
            .fmsub_d => 0x08600000,
            .fmsub_s => 0x08500000,
            .fmul_d => 0x01050000,
            .fmul_s => 0x01048000,
            .fneg_d => 0x01141800,
            .fneg_s => 0x01141400,
            .fnmadd_d => 0x08a00000,
            .fnmadd_s => 0x08900000,
            .fnmsub_d => 0x08e00000,
            .fnmsub_s => 0x08d00000,
            .frecip_d => 0x01145800,
            .frecip_s => 0x01145400,
            .frecipe_d => 0x01147800,
            .frecipe_s => 0x01147400,
            .frint_d => 0x011e4800,
            .frint_s => 0x011e4400,
            .frsqrt_d => 0x01146800,
            .frsqrt_s => 0x01146400,
            .frsqrte_d => 0x01148800,
            .frsqrte_s => 0x01148400,
            .fscaleb_d => 0x01110000,
            .fscaleb_s => 0x01108000,
            .fsel => 0x0d000000,
            .fsqrt_d => 0x01144800,
            .fsqrt_s => 0x01144400,
            .fst_d => 0x2bc00000,
            .fst_s => 0x2b400000,
            .fstgt_d => 0x38768000,
            .fstgt_s => 0x38760000,
            .fstle_d => 0x38778000,
            .fstle_s => 0x38770000,
            .fstx_d => 0x383c0000,
            .fstx_s => 0x38380000,
            .fsub_d => 0x01030000,
            .fsub_s => 0x01028000,
            .ftint_l_d => 0x011b2800,
            .ftint_l_s => 0x011b2400,
            .ftint_w_d => 0x011b0800,
            .ftint_w_s => 0x011b0400,
            .ftintrm_l_d => 0x011a2800,
            .ftintrm_l_s => 0x011a2400,
            .ftintrm_w_d => 0x011a0800,
            .ftintrm_w_s => 0x011a0400,
            .ftintrne_l_d => 0x011ae800,
            .ftintrne_l_s => 0x011ae400,
            .ftintrne_w_d => 0x011ac800,
            .ftintrne_w_s => 0x011ac400,
            .ftintrp_l_d => 0x011a6800,
            .ftintrp_l_s => 0x011a6400,
            .ftintrp_w_d => 0x011a4800,
            .ftintrp_w_s => 0x011a4400,
            .ftintrz_l_d => 0x011aa800,
            .ftintrz_l_s => 0x011aa400,
            .ftintrz_w_d => 0x011a8800,
            .ftintrz_w_s => 0x011a8400,
            .ibar => 0x38728000,
            .idle => 0x06488000,
            .iocsrrd_b => 0x06480000,
            .iocsrrd_d => 0x06480c00,
            .iocsrrd_h => 0x06480400,
            .iocsrrd_w => 0x06480800,
            .iocsrwr_b => 0x06481000,
            .iocsrwr_d => 0x06481c00,
            .iocsrwr_h => 0x06481400,
            .iocsrwr_w => 0x06481800,
            .jirl => 0x4c000000,
            .ld_b => 0x28000000,
            .ld_bu => 0x2a000000,
            .ld_d => 0x28c00000,
            .ld_h => 0x28400000,
            .ld_hu => 0x2a400000,
            .ld_w => 0x28800000,
            .ld_wu => 0x2a800000,
            .lddir => 0x06400000,
            .ldgt_b => 0x38780000,
            .ldgt_d => 0x38798000,
            .ldgt_h => 0x38788000,
            .ldgt_w => 0x38790000,
            .ldle_b => 0x387a0000,
            .ldle_d => 0x387b8000,
            .ldle_h => 0x387a8000,
            .ldle_w => 0x387b0000,
            .ldox4_d => 0x26000000,
            .ldox4_w => 0x24000000,
            .ldpte => 0x06440000,
            .ldx_b => 0x38000000,
            .ldx_bu => 0x38200000,
            .ldx_d => 0x380c0000,
            .ldx_h => 0x38040000,
            .ldx_hu => 0x38240000,
            .ldx_w => 0x38080000,
            .ldx_wu => 0x38280000,
            .ll_d => 0x22000000,
            .ll_w => 0x20000000,
            .llacq_d => 0x38578800,
            .llacq_w => 0x38578000,
            .lu12i_w => 0x14000000,
            .maskeqz => 0x00130000,
            .masknez => 0x00138000,
            .mod_d => 0x00228000,
            .mod_du => 0x00238000,
            .mod_w => 0x00208000,
            .mod_wu => 0x00218000,
            .movfcc2fr => 0x0114d400,
            .movfcc2gr => 0x0114dc00,
            .movfr2fcc => 0x0114d000,
            .movfr2gr_d => 0x0114b800,
            .movfr2gr_s => 0x0114b400,
            .movfrh2gr_s => 0x0114bc00,
            .movgr2fcc => 0x0114d800,
            .movgr2fr_d => 0x0114a800,
            .movgr2fr_w => 0x0114a400,
            .movgr2frh_w => 0x0114ac00,
            .mul_d => 0x001d8000,
            .mul_w => 0x001c0000,
            .mulh_d => 0x001e0000,
            .mulh_du => 0x001e8000,
            .mulh_w => 0x001c8000,
            .mulh_wu => 0x001d0000,
            .mulw_d_w => 0x001f0000,
            .mulw_d_wu => 0x001f8000,
            .nor => 0x00140000,
            .@"or" => 0x00150000,
            .ori => 0x03800000,
            .orn => 0x00160000,
            .pcaddu12i => 0x1c000000,
            .pcaddu18i => 0x1e000000,
            .pcaddu2i => 0x18000000,
            .pcalau12i => 0x1a000000,
            .preld => 0x2ac00000,
            .preldx => 0x382c0000,
            .rdtime_d => 0x00006800,
            .rdtimeh_w => 0x00006400,
            .rdtimel_w => 0x00006000,
            .revb_2h => 0x00003000,
            .revb_2w => 0x00003800,
            .revb_4h => 0x00003400,
            .revb_d => 0x00003c00,
            .revbit_4b => 0x00004800,
            .revbit_8b => 0x00004c00,
            .revbit_d => 0x00005400,
            .revbit_w => 0x00005000,
            .revh_2w => 0x00004000,
            .revh_d => 0x00004400,
            .rotr_d => 0x001b8000,
            .rotr_w => 0x001b0000,
            .rotri_d => 0x004d0000,
            .rotri_w => 0x004c8000,
            .sc_d => 0x23000000,
            .sc_q => 0x38570000,
            .sc_w => 0x21000000,
            .screl_d => 0x38578c00,
            .screl_w => 0x38578400,
            .sext_b => 0x00005c00,
            .sext_h => 0x00005800,
            .sladd_d => 0x002c0000,
            .sladd_w => 0x00040000,
            .sladd_wu => 0x00060000,
            .sll_d => 0x00188000,
            .sll_w => 0x00170000,
            .slli_d => 0x00410000,
            .slli_w => 0x00408000,
            .slt => 0x00120000,
            .slti => 0x02000000,
            .sltu => 0x00128000,
            .sltui => 0x02400000,
            .sra_d => 0x00198000,
            .sra_w => 0x00180000,
            .srai_d => 0x00490000,
            .srai_w => 0x00488000,
            .srl_d => 0x00190000,
            .srl_w => 0x00178000,
            .srli_d => 0x00450000,
            .srli_w => 0x00448000,
            .st_b => 0x29000000,
            .st_d => 0x29c00000,
            .st_h => 0x29400000,
            .st_w => 0x29800000,
            .stgt_b => 0x387c0000,
            .stgt_d => 0x387d8000,
            .stgt_h => 0x387c8000,
            .stgt_w => 0x387d0000,
            .stle_b => 0x387e0000,
            .stle_d => 0x387f8000,
            .stle_h => 0x387e8000,
            .stle_w => 0x387f0000,
            .stox4_d => 0x27000000,
            .stox4_w => 0x25000000,
            .stx_b => 0x38100000,
            .stx_d => 0x381c0000,
            .stx_h => 0x38140000,
            .stx_w => 0x38180000,
            .sub_d => 0x00118000,
            .sub_w => 0x00110000,
            .syscall => 0x002b0000,
            .tlbclr => 0x06482000,
            .tlbfill => 0x06483400,
            .tlbflush => 0x06482400,
            .tlbinv => 0x06498000,
            .tlbrd => 0x06482c00,
            .tlbsrch => 0x06482800,
            .tlbwr => 0x06483000,
            .xor => 0x00158000,
            .xori => 0x03c00000,
            .xxx_unknown_1 => 0x06493000,
        };
    }
};

pub const Data = union(enum) {
    DJUk8: struct { Register, Register, u8 },
    DJUk6: struct { Register, Register, u6 },
    JK: struct { Register, Register },
    JUd5Sk12: struct { Register, u5, i12 },
    Ud15: struct { u15 },
    DJKUa2: struct { Register, Register, Register, u2 },
    DJK: struct { Register, Register, Register },
    DJ: struct { Register, Register },
    EMPTY,
    DJUk5Um5: struct { Register, Register, u5, u5 },
    JUd5: struct { Register, u5 },
    JSd5Sk16: struct { Register, i5, i16 },
    DSj20: struct { Register, i20 },
    DJUk14: struct { Register, Register, u14 },
    DJSk16: struct { Register, Register, i16 },
    DJKUa3: struct { Register, Register, Register, u3 },
    DJUk5: struct { Register, Register, u5 },
    DJSk14: struct { Register, Register, i14 },
    JKUd5: struct { Register, Register, u5 },
    DJUk12: struct { Register, Register, u12 },
    DUj5: struct { Register, u5 },
    DJUk6Um6: struct { Register, Register, u6, u6 },
    DJSk12: struct { Register, Register, i12 },
    Sd10Sk16: struct { i10, i16 },
    JUk8: struct { Register, u8 },
    DJKA: struct { Register, Register, Register, Register },

    pub fn enc(self: Data) u32 {
        return switch (self) {
            .DJUk8 => |data| data[0].enc() | (@as(u32, data[1].enc()) << 5) | (@as(u32, @as(u8, @bitCast(data[2]))) << 10),
            .DJUk6 => |data| data[0].enc() | (@as(u32, data[1].enc()) << 5) | (@as(u32, @as(u6, @bitCast(data[2]))) << 10),
            .JK => |data| (@as(u32, data[0].enc()) << 5) | (@as(u32, data[1].enc()) << 10),
            .JUd5Sk12 => |data| (@as(u32, data[0].enc()) << 5) | @as(u32, @intCast(@as(u5, @bitCast(data[1])))) | (@as(u32, @as(u12, @bitCast(data[2]))) << 10),
            .Ud15 => |data| @as(u32, @intCast(@as(u15, @bitCast(data[0])))),
            .DJKUa2 => |data| data[0].enc() | (@as(u32, data[1].enc()) << 5) | (@as(u32, data[2].enc()) << 10) | (@as(u32, @as(u2, @bitCast(data[3]))) << 15),
            .DJK => |data| data[0].enc() | (@as(u32, data[1].enc()) << 5) | (@as(u32, data[2].enc()) << 10),
            .DJ => |data| data[0].enc() | (@as(u32, data[1].enc()) << 5),
            .EMPTY => 0,
            .DJUk5Um5 => |data| data[0].enc() | (@as(u32, data[1].enc()) << 5) | (@as(u32, @as(u5, @bitCast(data[2]))) << 10) | (@as(u32, @as(u5, @bitCast(data[3]))) << 16),
            .JUd5 => |data| (@as(u32, data[0].enc()) << 5) | @as(u32, @intCast(@as(u5, @bitCast(data[1])))),
            .JSd5Sk16 => |data| (@as(u32, data[0].enc()) << 5) | @as(u32, @intCast(@as(u5, @bitCast(data[1])))) | (@as(u32, @as(u16, @bitCast(data[2]))) << 10),
            .DSj20 => |data| data[0].enc() | (@as(u32, @as(u20, @bitCast(data[1]))) << 5),
            .DJUk14 => |data| data[0].enc() | (@as(u32, data[1].enc()) << 5) | (@as(u32, @as(u14, @bitCast(data[2]))) << 10),
            .DJSk16 => |data| data[0].enc() | (@as(u32, data[1].enc()) << 5) | (@as(u32, @as(u16, @bitCast(data[2]))) << 10),
            .DJKUa3 => |data| data[0].enc() | (@as(u32, data[1].enc()) << 5) | (@as(u32, data[2].enc()) << 10) | (@as(u32, @as(u3, @bitCast(data[3]))) << 15),
            .DJUk5 => |data| data[0].enc() | (@as(u32, data[1].enc()) << 5) | (@as(u32, @as(u5, @bitCast(data[2]))) << 10),
            .DJSk14 => |data| data[0].enc() | (@as(u32, data[1].enc()) << 5) | (@as(u32, @as(u14, @bitCast(data[2]))) << 10),
            .JKUd5 => |data| (@as(u32, data[0].enc()) << 5) | (@as(u32, data[1].enc()) << 10) | @as(u32, @intCast(@as(u5, @bitCast(data[2])))),
            .DJUk12 => |data| data[0].enc() | (@as(u32, data[1].enc()) << 5) | (@as(u32, @as(u12, @bitCast(data[2]))) << 10),
            .DUj5 => |data| data[0].enc() | (@as(u32, @as(u5, @bitCast(data[1]))) << 5),
            .DJUk6Um6 => |data| data[0].enc() | (@as(u32, data[1].enc()) << 5) | (@as(u32, @as(u6, @bitCast(data[2]))) << 10) | (@as(u32, @as(u6, @bitCast(data[3]))) << 16),
            .DJSk12 => |data| data[0].enc() | (@as(u32, data[1].enc()) << 5) | (@as(u32, @as(u12, @bitCast(data[2]))) << 10),
            .Sd10Sk16 => |data| @as(u32, @intCast(@as(u10, @bitCast(data[0])))) | (@as(u32, @as(u16, @bitCast(data[1]))) << 10),
            .JUk8 => |data| (@as(u32, data[0].enc()) << 5) | (@as(u32, @as(u8, @bitCast(data[1]))) << 10),
            .DJKA => |data| data[0].enc() | (@as(u32, data[1].enc()) << 5) | (@as(u32, data[2].enc()) << 10) | (@as(u32, data[3].enc()) << 15),
        };
    }
};

pub const Format = @import("std").meta.Tag(Data);

pub const Inst = struct {
    opcode: OpCode,
    data: Data,

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn add_d(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .add_d, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn add_w(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .add_w, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn addi_d(f0: Register, f1: Register, f2: i12) Inst {
        return .{ .opcode = .addi_d, .data = .{ .DJSk12 = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn addi_w(f0: Register, f1: Register, f2: i12) Inst {
        return .{ .opcode = .addi_w, .data = .{ .DJSk12 = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn addu16i_d(f0: Register, f1: Register, f2: i16) Inst {
        return .{ .opcode = .addu16i_d, .data = .{ .DJSk16 = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn amadd_b(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .amadd_b, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn amadd_d(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .amadd_d, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn amadd_h(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .amadd_h, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn amadd_w(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .amadd_w, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn amadd_db_b(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .amadd_db_b, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn amadd_db_d(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .amadd_db_d, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn amadd_db_h(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .amadd_db_h, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn amadd_db_w(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .amadd_db_w, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn amand_d(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .amand_d, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn amand_w(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .amand_w, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn amand_db_d(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .amand_db_d, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn amand_db_w(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .amand_db_w, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn amcas_b(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .amcas_b, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn amcas_d(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .amcas_d, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn amcas_h(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .amcas_h, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn amcas_w(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .amcas_w, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn amcas_db_b(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .amcas_db_b, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn amcas_db_d(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .amcas_db_d, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn amcas_db_h(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .amcas_db_h, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn amcas_db_w(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .amcas_db_w, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn ammax_d(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .ammax_d, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn ammax_du(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .ammax_du, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn ammax_w(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .ammax_w, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn ammax_wu(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .ammax_wu, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn ammax_db_d(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .ammax_db_d, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn ammax_db_du(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .ammax_db_du, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn ammax_db_w(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .ammax_db_w, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn ammax_db_wu(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .ammax_db_wu, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn ammin_d(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .ammin_d, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn ammin_du(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .ammin_du, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn ammin_w(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .ammin_w, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn ammin_wu(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .ammin_wu, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn ammin_db_d(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .ammin_db_d, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn ammin_db_du(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .ammin_db_du, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn ammin_db_w(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .ammin_db_w, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn ammin_db_wu(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .ammin_db_wu, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn amor_d(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .amor_d, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn amor_w(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .amor_w, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn amor_db_d(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .amor_db_d, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn amor_db_w(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .amor_db_w, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn amswap_b(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .amswap_b, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn amswap_d(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .amswap_d, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn amswap_h(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .amswap_h, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn amswap_w(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .amswap_w, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn amswap_db_b(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .amswap_db_b, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn amswap_db_d(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .amswap_db_d, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn amswap_db_h(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .amswap_db_h, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn amswap_db_w(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .amswap_db_w, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn amxor_d(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .amxor_d, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn amxor_w(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .amxor_w, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn amxor_db_d(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .amxor_db_d, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn amxor_db_w(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .amxor_db_w, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn @"and"(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .@"and", .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn andi(f0: Register, f1: Register, f2: u12) Inst {
        return .{ .opcode = .andi, .data = .{ .DJUk12 = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn andn(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .andn, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn asrtgt(f0: Register, f1: Register) Inst {
        return .{ .opcode = .asrtgt, .data = .{ .JK = .{ f0, f1 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn asrtle(f0: Register, f1: Register) Inst {
        return .{ .opcode = .asrtle, .data = .{ .JK = .{ f0, f1 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn b(f0: i10, f1: i16) Inst {
        return .{ .opcode = .b, .data = .{ .Sd10Sk16 = .{ f0, f1 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn bceqz(f0: Register, f1: i5, f2: i16) Inst {
        return .{ .opcode = .bceqz, .data = .{ .JSd5Sk16 = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn bcnez(f0: Register, f1: i5, f2: i16) Inst {
        return .{ .opcode = .bcnez, .data = .{ .JSd5Sk16 = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn beq(f0: Register, f1: Register, f2: i16) Inst {
        return .{ .opcode = .beq, .data = .{ .DJSk16 = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn beqz(f0: Register, f1: i5, f2: i16) Inst {
        return .{ .opcode = .beqz, .data = .{ .JSd5Sk16 = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn bgt(f0: Register, f1: Register, f2: i16) Inst {
        return .{ .opcode = .bgt, .data = .{ .DJSk16 = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn bgtu(f0: Register, f1: Register, f2: i16) Inst {
        return .{ .opcode = .bgtu, .data = .{ .DJSk16 = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn bl(f0: i10, f1: i16) Inst {
        return .{ .opcode = .bl, .data = .{ .Sd10Sk16 = .{ f0, f1 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn ble(f0: Register, f1: Register, f2: i16) Inst {
        return .{ .opcode = .ble, .data = .{ .DJSk16 = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn bleu(f0: Register, f1: Register, f2: i16) Inst {
        return .{ .opcode = .bleu, .data = .{ .DJSk16 = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn bne(f0: Register, f1: Register, f2: i16) Inst {
        return .{ .opcode = .bne, .data = .{ .DJSk16 = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn bnez(f0: Register, f1: i5, f2: i16) Inst {
        return .{ .opcode = .bnez, .data = .{ .JSd5Sk16 = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn @"break"(f0: u15) Inst {
        return .{ .opcode = .@"break", .data = .{ .Ud15 = .{f0} } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn bstrins_d(f0: Register, f1: Register, f2: u6, f3: u6) Inst {
        return .{ .opcode = .bstrins_d, .data = .{ .DJUk6Um6 = .{ f0, f1, f2, f3 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn bstrins_w(f0: Register, f1: Register, f2: u5, f3: u5) Inst {
        return .{ .opcode = .bstrins_w, .data = .{ .DJUk5Um5 = .{ f0, f1, f2, f3 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn bstrpick_d(f0: Register, f1: Register, f2: u6, f3: u6) Inst {
        return .{ .opcode = .bstrpick_d, .data = .{ .DJUk6Um6 = .{ f0, f1, f2, f3 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn bstrpick_w(f0: Register, f1: Register, f2: u5, f3: u5) Inst {
        return .{ .opcode = .bstrpick_w, .data = .{ .DJUk5Um5 = .{ f0, f1, f2, f3 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn cacop(f0: Register, f1: u5, f2: i12) Inst {
        return .{ .opcode = .cacop, .data = .{ .JUd5Sk12 = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn catpick_d(f0: Register, f1: Register, f2: Register, f3: u3) Inst {
        return .{ .opcode = .catpick_d, .data = .{ .DJKUa3 = .{ f0, f1, f2, f3 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn catpick_w(f0: Register, f1: Register, f2: Register, f3: u2) Inst {
        return .{ .opcode = .catpick_w, .data = .{ .DJKUa2 = .{ f0, f1, f2, f3 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn clo_d(f0: Register, f1: Register) Inst {
        return .{ .opcode = .clo_d, .data = .{ .DJ = .{ f0, f1 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn clo_w(f0: Register, f1: Register) Inst {
        return .{ .opcode = .clo_w, .data = .{ .DJ = .{ f0, f1 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn clz_d(f0: Register, f1: Register) Inst {
        return .{ .opcode = .clz_d, .data = .{ .DJ = .{ f0, f1 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn clz_w(f0: Register, f1: Register) Inst {
        return .{ .opcode = .clz_w, .data = .{ .DJ = .{ f0, f1 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn cpucfg(f0: Register, f1: Register) Inst {
        return .{ .opcode = .cpucfg, .data = .{ .DJ = .{ f0, f1 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn crc_w_b_w(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .crc_w_b_w, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn crc_w_d_w(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .crc_w_d_w, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn crc_w_h_w(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .crc_w_h_w, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn crc_w_w_w(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .crc_w_w_w, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn crcc_w_b_w(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .crcc_w_b_w, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn crcc_w_d_w(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .crcc_w_d_w, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn crcc_w_h_w(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .crcc_w_h_w, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn crcc_w_w_w(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .crcc_w_w_w, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn csrxchg(f0: Register, f1: Register, f2: u14) Inst {
        return .{ .opcode = .csrxchg, .data = .{ .DJUk14 = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn cto_d(f0: Register, f1: Register) Inst {
        return .{ .opcode = .cto_d, .data = .{ .DJ = .{ f0, f1 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn cto_w(f0: Register, f1: Register) Inst {
        return .{ .opcode = .cto_w, .data = .{ .DJ = .{ f0, f1 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn ctz_d(f0: Register, f1: Register) Inst {
        return .{ .opcode = .ctz_d, .data = .{ .DJ = .{ f0, f1 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn ctz_w(f0: Register, f1: Register) Inst {
        return .{ .opcode = .ctz_w, .data = .{ .DJ = .{ f0, f1 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn cu32i_d(f0: Register, f1: i20) Inst {
        return .{ .opcode = .cu32i_d, .data = .{ .DSj20 = .{ f0, f1 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn cu52i_d(f0: Register, f1: Register, f2: i12) Inst {
        return .{ .opcode = .cu52i_d, .data = .{ .DJSk12 = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn dbar(f0: u15) Inst {
        return .{ .opcode = .dbar, .data = .{ .Ud15 = .{f0} } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn dbgcall(f0: u15) Inst {
        return .{ .opcode = .dbgcall, .data = .{ .Ud15 = .{f0} } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn div_d(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .div_d, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn div_du(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .div_du, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn div_w(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .div_w, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn div_wu(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .div_wu, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn eret() Inst {
        return .{ .opcode = .eret, .data = .EMPTY };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn fabs_d(f0: Register, f1: Register) Inst {
        return .{ .opcode = .fabs_d, .data = .{ .DJ = .{ f0, f1 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn fabs_s(f0: Register, f1: Register) Inst {
        return .{ .opcode = .fabs_s, .data = .{ .DJ = .{ f0, f1 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn fadd_d(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .fadd_d, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn fadd_s(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .fadd_s, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn fclass_d(f0: Register, f1: Register) Inst {
        return .{ .opcode = .fclass_d, .data = .{ .DJ = .{ f0, f1 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn fclass_s(f0: Register, f1: Register) Inst {
        return .{ .opcode = .fclass_s, .data = .{ .DJ = .{ f0, f1 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn fcmp_caf_d(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .fcmp_caf_d, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn fcmp_caf_s(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .fcmp_caf_s, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn fcmp_ceq_d(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .fcmp_ceq_d, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn fcmp_ceq_s(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .fcmp_ceq_s, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn fcmp_cle_d(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .fcmp_cle_d, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn fcmp_cle_s(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .fcmp_cle_s, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn fcmp_clt_d(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .fcmp_clt_d, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn fcmp_clt_s(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .fcmp_clt_s, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn fcmp_cne_d(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .fcmp_cne_d, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn fcmp_cne_s(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .fcmp_cne_s, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn fcmp_cor_d(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .fcmp_cor_d, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn fcmp_cor_s(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .fcmp_cor_s, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn fcmp_cueq_d(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .fcmp_cueq_d, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn fcmp_cueq_s(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .fcmp_cueq_s, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn fcmp_cule_d(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .fcmp_cule_d, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn fcmp_cule_s(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .fcmp_cule_s, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn fcmp_cult_d(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .fcmp_cult_d, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn fcmp_cult_s(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .fcmp_cult_s, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn fcmp_cun_d(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .fcmp_cun_d, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn fcmp_cun_s(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .fcmp_cun_s, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn fcmp_cune_d(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .fcmp_cune_d, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn fcmp_cune_s(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .fcmp_cune_s, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn fcmp_saf_d(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .fcmp_saf_d, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn fcmp_saf_s(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .fcmp_saf_s, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn fcmp_seq_d(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .fcmp_seq_d, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn fcmp_seq_s(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .fcmp_seq_s, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn fcmp_sle_d(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .fcmp_sle_d, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn fcmp_sle_s(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .fcmp_sle_s, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn fcmp_slt_d(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .fcmp_slt_d, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn fcmp_slt_s(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .fcmp_slt_s, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn fcmp_sne_d(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .fcmp_sne_d, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn fcmp_sne_s(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .fcmp_sne_s, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn fcmp_sor_d(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .fcmp_sor_d, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn fcmp_sor_s(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .fcmp_sor_s, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn fcmp_sueq_d(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .fcmp_sueq_d, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn fcmp_sueq_s(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .fcmp_sueq_s, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn fcmp_sule_d(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .fcmp_sule_d, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn fcmp_sule_s(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .fcmp_sule_s, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn fcmp_sult_d(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .fcmp_sult_d, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn fcmp_sult_s(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .fcmp_sult_s, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn fcmp_sun_d(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .fcmp_sun_d, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn fcmp_sun_s(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .fcmp_sun_s, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn fcmp_sune_d(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .fcmp_sune_d, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn fcmp_sune_s(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .fcmp_sune_s, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn fcopysign_d(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .fcopysign_d, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn fcopysign_s(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .fcopysign_s, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn fcsrrd(f0: Register, f1: u5) Inst {
        return .{ .opcode = .fcsrrd, .data = .{ .DUj5 = .{ f0, f1 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn fcsrwr(f0: Register, f1: u5) Inst {
        return .{ .opcode = .fcsrwr, .data = .{ .JUd5 = .{ f0, f1 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn fcvt_d_s(f0: Register, f1: Register) Inst {
        return .{ .opcode = .fcvt_d_s, .data = .{ .DJ = .{ f0, f1 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn fcvt_s_d(f0: Register, f1: Register) Inst {
        return .{ .opcode = .fcvt_s_d, .data = .{ .DJ = .{ f0, f1 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn fdiv_d(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .fdiv_d, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn fdiv_s(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .fdiv_s, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn ffint_d_l(f0: Register, f1: Register) Inst {
        return .{ .opcode = .ffint_d_l, .data = .{ .DJ = .{ f0, f1 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn ffint_d_w(f0: Register, f1: Register) Inst {
        return .{ .opcode = .ffint_d_w, .data = .{ .DJ = .{ f0, f1 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn ffint_s_l(f0: Register, f1: Register) Inst {
        return .{ .opcode = .ffint_s_l, .data = .{ .DJ = .{ f0, f1 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn ffint_s_w(f0: Register, f1: Register) Inst {
        return .{ .opcode = .ffint_s_w, .data = .{ .DJ = .{ f0, f1 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn fld_d(f0: Register, f1: Register, f2: i12) Inst {
        return .{ .opcode = .fld_d, .data = .{ .DJSk12 = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn fld_s(f0: Register, f1: Register, f2: i12) Inst {
        return .{ .opcode = .fld_s, .data = .{ .DJSk12 = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn fldgt_d(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .fldgt_d, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn fldgt_s(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .fldgt_s, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn fldle_d(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .fldle_d, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn fldle_s(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .fldle_s, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn fldx_d(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .fldx_d, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn fldx_s(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .fldx_s, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn flogb_d(f0: Register, f1: Register) Inst {
        return .{ .opcode = .flogb_d, .data = .{ .DJ = .{ f0, f1 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn flogb_s(f0: Register, f1: Register) Inst {
        return .{ .opcode = .flogb_s, .data = .{ .DJ = .{ f0, f1 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn fmadd_d(f0: Register, f1: Register, f2: Register, f3: Register) Inst {
        return .{ .opcode = .fmadd_d, .data = .{ .DJKA = .{ f0, f1, f2, f3 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn fmadd_s(f0: Register, f1: Register, f2: Register, f3: Register) Inst {
        return .{ .opcode = .fmadd_s, .data = .{ .DJKA = .{ f0, f1, f2, f3 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn fmax_d(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .fmax_d, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn fmax_s(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .fmax_s, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn fmaxa_d(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .fmaxa_d, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn fmaxa_s(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .fmaxa_s, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn fmin_d(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .fmin_d, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn fmin_s(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .fmin_s, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn fmina_d(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .fmina_d, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn fmina_s(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .fmina_s, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn fmov_d(f0: Register, f1: Register) Inst {
        return .{ .opcode = .fmov_d, .data = .{ .DJ = .{ f0, f1 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn fmov_s(f0: Register, f1: Register) Inst {
        return .{ .opcode = .fmov_s, .data = .{ .DJ = .{ f0, f1 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn fmsub_d(f0: Register, f1: Register, f2: Register, f3: Register) Inst {
        return .{ .opcode = .fmsub_d, .data = .{ .DJKA = .{ f0, f1, f2, f3 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn fmsub_s(f0: Register, f1: Register, f2: Register, f3: Register) Inst {
        return .{ .opcode = .fmsub_s, .data = .{ .DJKA = .{ f0, f1, f2, f3 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn fmul_d(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .fmul_d, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn fmul_s(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .fmul_s, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn fneg_d(f0: Register, f1: Register) Inst {
        return .{ .opcode = .fneg_d, .data = .{ .DJ = .{ f0, f1 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn fneg_s(f0: Register, f1: Register) Inst {
        return .{ .opcode = .fneg_s, .data = .{ .DJ = .{ f0, f1 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn fnmadd_d(f0: Register, f1: Register, f2: Register, f3: Register) Inst {
        return .{ .opcode = .fnmadd_d, .data = .{ .DJKA = .{ f0, f1, f2, f3 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn fnmadd_s(f0: Register, f1: Register, f2: Register, f3: Register) Inst {
        return .{ .opcode = .fnmadd_s, .data = .{ .DJKA = .{ f0, f1, f2, f3 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn fnmsub_d(f0: Register, f1: Register, f2: Register, f3: Register) Inst {
        return .{ .opcode = .fnmsub_d, .data = .{ .DJKA = .{ f0, f1, f2, f3 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn fnmsub_s(f0: Register, f1: Register, f2: Register, f3: Register) Inst {
        return .{ .opcode = .fnmsub_s, .data = .{ .DJKA = .{ f0, f1, f2, f3 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn frecip_d(f0: Register, f1: Register) Inst {
        return .{ .opcode = .frecip_d, .data = .{ .DJ = .{ f0, f1 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn frecip_s(f0: Register, f1: Register) Inst {
        return .{ .opcode = .frecip_s, .data = .{ .DJ = .{ f0, f1 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn frecipe_d(f0: Register, f1: Register) Inst {
        return .{ .opcode = .frecipe_d, .data = .{ .DJ = .{ f0, f1 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn frecipe_s(f0: Register, f1: Register) Inst {
        return .{ .opcode = .frecipe_s, .data = .{ .DJ = .{ f0, f1 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn frint_d(f0: Register, f1: Register) Inst {
        return .{ .opcode = .frint_d, .data = .{ .DJ = .{ f0, f1 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn frint_s(f0: Register, f1: Register) Inst {
        return .{ .opcode = .frint_s, .data = .{ .DJ = .{ f0, f1 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn frsqrt_d(f0: Register, f1: Register) Inst {
        return .{ .opcode = .frsqrt_d, .data = .{ .DJ = .{ f0, f1 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn frsqrt_s(f0: Register, f1: Register) Inst {
        return .{ .opcode = .frsqrt_s, .data = .{ .DJ = .{ f0, f1 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn frsqrte_d(f0: Register, f1: Register) Inst {
        return .{ .opcode = .frsqrte_d, .data = .{ .DJ = .{ f0, f1 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn frsqrte_s(f0: Register, f1: Register) Inst {
        return .{ .opcode = .frsqrte_s, .data = .{ .DJ = .{ f0, f1 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn fscaleb_d(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .fscaleb_d, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn fscaleb_s(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .fscaleb_s, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn fsel(f0: Register, f1: Register, f2: Register, f3: Register) Inst {
        return .{ .opcode = .fsel, .data = .{ .DJKA = .{ f0, f1, f2, f3 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn fsqrt_d(f0: Register, f1: Register) Inst {
        return .{ .opcode = .fsqrt_d, .data = .{ .DJ = .{ f0, f1 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn fsqrt_s(f0: Register, f1: Register) Inst {
        return .{ .opcode = .fsqrt_s, .data = .{ .DJ = .{ f0, f1 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn fst_d(f0: Register, f1: Register, f2: i12) Inst {
        return .{ .opcode = .fst_d, .data = .{ .DJSk12 = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn fst_s(f0: Register, f1: Register, f2: i12) Inst {
        return .{ .opcode = .fst_s, .data = .{ .DJSk12 = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn fstgt_d(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .fstgt_d, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn fstgt_s(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .fstgt_s, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn fstle_d(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .fstle_d, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn fstle_s(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .fstle_s, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn fstx_d(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .fstx_d, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn fstx_s(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .fstx_s, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn fsub_d(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .fsub_d, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn fsub_s(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .fsub_s, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn ftint_l_d(f0: Register, f1: Register) Inst {
        return .{ .opcode = .ftint_l_d, .data = .{ .DJ = .{ f0, f1 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn ftint_l_s(f0: Register, f1: Register) Inst {
        return .{ .opcode = .ftint_l_s, .data = .{ .DJ = .{ f0, f1 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn ftint_w_d(f0: Register, f1: Register) Inst {
        return .{ .opcode = .ftint_w_d, .data = .{ .DJ = .{ f0, f1 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn ftint_w_s(f0: Register, f1: Register) Inst {
        return .{ .opcode = .ftint_w_s, .data = .{ .DJ = .{ f0, f1 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn ftintrm_l_d(f0: Register, f1: Register) Inst {
        return .{ .opcode = .ftintrm_l_d, .data = .{ .DJ = .{ f0, f1 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn ftintrm_l_s(f0: Register, f1: Register) Inst {
        return .{ .opcode = .ftintrm_l_s, .data = .{ .DJ = .{ f0, f1 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn ftintrm_w_d(f0: Register, f1: Register) Inst {
        return .{ .opcode = .ftintrm_w_d, .data = .{ .DJ = .{ f0, f1 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn ftintrm_w_s(f0: Register, f1: Register) Inst {
        return .{ .opcode = .ftintrm_w_s, .data = .{ .DJ = .{ f0, f1 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn ftintrne_l_d(f0: Register, f1: Register) Inst {
        return .{ .opcode = .ftintrne_l_d, .data = .{ .DJ = .{ f0, f1 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn ftintrne_l_s(f0: Register, f1: Register) Inst {
        return .{ .opcode = .ftintrne_l_s, .data = .{ .DJ = .{ f0, f1 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn ftintrne_w_d(f0: Register, f1: Register) Inst {
        return .{ .opcode = .ftintrne_w_d, .data = .{ .DJ = .{ f0, f1 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn ftintrne_w_s(f0: Register, f1: Register) Inst {
        return .{ .opcode = .ftintrne_w_s, .data = .{ .DJ = .{ f0, f1 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn ftintrp_l_d(f0: Register, f1: Register) Inst {
        return .{ .opcode = .ftintrp_l_d, .data = .{ .DJ = .{ f0, f1 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn ftintrp_l_s(f0: Register, f1: Register) Inst {
        return .{ .opcode = .ftintrp_l_s, .data = .{ .DJ = .{ f0, f1 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn ftintrp_w_d(f0: Register, f1: Register) Inst {
        return .{ .opcode = .ftintrp_w_d, .data = .{ .DJ = .{ f0, f1 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn ftintrp_w_s(f0: Register, f1: Register) Inst {
        return .{ .opcode = .ftintrp_w_s, .data = .{ .DJ = .{ f0, f1 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn ftintrz_l_d(f0: Register, f1: Register) Inst {
        return .{ .opcode = .ftintrz_l_d, .data = .{ .DJ = .{ f0, f1 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn ftintrz_l_s(f0: Register, f1: Register) Inst {
        return .{ .opcode = .ftintrz_l_s, .data = .{ .DJ = .{ f0, f1 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn ftintrz_w_d(f0: Register, f1: Register) Inst {
        return .{ .opcode = .ftintrz_w_d, .data = .{ .DJ = .{ f0, f1 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn ftintrz_w_s(f0: Register, f1: Register) Inst {
        return .{ .opcode = .ftintrz_w_s, .data = .{ .DJ = .{ f0, f1 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn ibar(f0: u15) Inst {
        return .{ .opcode = .ibar, .data = .{ .Ud15 = .{f0} } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn idle(f0: u15) Inst {
        return .{ .opcode = .idle, .data = .{ .Ud15 = .{f0} } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn iocsrrd_b(f0: Register, f1: Register) Inst {
        return .{ .opcode = .iocsrrd_b, .data = .{ .DJ = .{ f0, f1 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn iocsrrd_d(f0: Register, f1: Register) Inst {
        return .{ .opcode = .iocsrrd_d, .data = .{ .DJ = .{ f0, f1 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn iocsrrd_h(f0: Register, f1: Register) Inst {
        return .{ .opcode = .iocsrrd_h, .data = .{ .DJ = .{ f0, f1 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn iocsrrd_w(f0: Register, f1: Register) Inst {
        return .{ .opcode = .iocsrrd_w, .data = .{ .DJ = .{ f0, f1 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn iocsrwr_b(f0: Register, f1: Register) Inst {
        return .{ .opcode = .iocsrwr_b, .data = .{ .DJ = .{ f0, f1 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn iocsrwr_d(f0: Register, f1: Register) Inst {
        return .{ .opcode = .iocsrwr_d, .data = .{ .DJ = .{ f0, f1 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn iocsrwr_h(f0: Register, f1: Register) Inst {
        return .{ .opcode = .iocsrwr_h, .data = .{ .DJ = .{ f0, f1 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn iocsrwr_w(f0: Register, f1: Register) Inst {
        return .{ .opcode = .iocsrwr_w, .data = .{ .DJ = .{ f0, f1 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn jirl(f0: Register, f1: Register, f2: i16) Inst {
        return .{ .opcode = .jirl, .data = .{ .DJSk16 = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn ld_b(f0: Register, f1: Register, f2: i12) Inst {
        return .{ .opcode = .ld_b, .data = .{ .DJSk12 = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn ld_bu(f0: Register, f1: Register, f2: i12) Inst {
        return .{ .opcode = .ld_bu, .data = .{ .DJSk12 = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn ld_d(f0: Register, f1: Register, f2: i12) Inst {
        return .{ .opcode = .ld_d, .data = .{ .DJSk12 = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn ld_h(f0: Register, f1: Register, f2: i12) Inst {
        return .{ .opcode = .ld_h, .data = .{ .DJSk12 = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn ld_hu(f0: Register, f1: Register, f2: i12) Inst {
        return .{ .opcode = .ld_hu, .data = .{ .DJSk12 = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn ld_w(f0: Register, f1: Register, f2: i12) Inst {
        return .{ .opcode = .ld_w, .data = .{ .DJSk12 = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn ld_wu(f0: Register, f1: Register, f2: i12) Inst {
        return .{ .opcode = .ld_wu, .data = .{ .DJSk12 = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn lddir(f0: Register, f1: Register, f2: u8) Inst {
        return .{ .opcode = .lddir, .data = .{ .DJUk8 = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn ldgt_b(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .ldgt_b, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn ldgt_d(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .ldgt_d, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn ldgt_h(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .ldgt_h, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn ldgt_w(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .ldgt_w, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn ldle_b(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .ldle_b, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn ldle_d(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .ldle_d, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn ldle_h(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .ldle_h, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn ldle_w(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .ldle_w, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn ldox4_d(f0: Register, f1: Register, f2: i14) Inst {
        return .{ .opcode = .ldox4_d, .data = .{ .DJSk14 = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn ldox4_w(f0: Register, f1: Register, f2: i14) Inst {
        return .{ .opcode = .ldox4_w, .data = .{ .DJSk14 = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn ldpte(f0: Register, f1: u8) Inst {
        return .{ .opcode = .ldpte, .data = .{ .JUk8 = .{ f0, f1 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn ldx_b(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .ldx_b, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn ldx_bu(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .ldx_bu, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn ldx_d(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .ldx_d, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn ldx_h(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .ldx_h, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn ldx_hu(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .ldx_hu, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn ldx_w(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .ldx_w, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn ldx_wu(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .ldx_wu, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn ll_d(f0: Register, f1: Register, f2: i14) Inst {
        return .{ .opcode = .ll_d, .data = .{ .DJSk14 = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn ll_w(f0: Register, f1: Register, f2: i14) Inst {
        return .{ .opcode = .ll_w, .data = .{ .DJSk14 = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn llacq_d(f0: Register, f1: Register) Inst {
        return .{ .opcode = .llacq_d, .data = .{ .DJ = .{ f0, f1 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn llacq_w(f0: Register, f1: Register) Inst {
        return .{ .opcode = .llacq_w, .data = .{ .DJ = .{ f0, f1 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn lu12i_w(f0: Register, f1: i20) Inst {
        return .{ .opcode = .lu12i_w, .data = .{ .DSj20 = .{ f0, f1 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn maskeqz(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .maskeqz, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn masknez(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .masknez, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn mod_d(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .mod_d, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn mod_du(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .mod_du, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn mod_w(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .mod_w, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn mod_wu(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .mod_wu, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn movfcc2fr(f0: Register, f1: Register) Inst {
        return .{ .opcode = .movfcc2fr, .data = .{ .DJ = .{ f0, f1 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn movfcc2gr(f0: Register, f1: Register) Inst {
        return .{ .opcode = .movfcc2gr, .data = .{ .DJ = .{ f0, f1 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn movfr2fcc(f0: Register, f1: Register) Inst {
        return .{ .opcode = .movfr2fcc, .data = .{ .DJ = .{ f0, f1 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn movfr2gr_d(f0: Register, f1: Register) Inst {
        return .{ .opcode = .movfr2gr_d, .data = .{ .DJ = .{ f0, f1 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn movfr2gr_s(f0: Register, f1: Register) Inst {
        return .{ .opcode = .movfr2gr_s, .data = .{ .DJ = .{ f0, f1 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn movfrh2gr_s(f0: Register, f1: Register) Inst {
        return .{ .opcode = .movfrh2gr_s, .data = .{ .DJ = .{ f0, f1 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn movgr2fcc(f0: Register, f1: Register) Inst {
        return .{ .opcode = .movgr2fcc, .data = .{ .DJ = .{ f0, f1 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn movgr2fr_d(f0: Register, f1: Register) Inst {
        return .{ .opcode = .movgr2fr_d, .data = .{ .DJ = .{ f0, f1 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn movgr2fr_w(f0: Register, f1: Register) Inst {
        return .{ .opcode = .movgr2fr_w, .data = .{ .DJ = .{ f0, f1 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn movgr2frh_w(f0: Register, f1: Register) Inst {
        return .{ .opcode = .movgr2frh_w, .data = .{ .DJ = .{ f0, f1 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn mul_d(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .mul_d, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn mul_w(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .mul_w, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn mulh_d(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .mulh_d, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn mulh_du(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .mulh_du, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn mulh_w(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .mulh_w, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn mulh_wu(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .mulh_wu, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn mulw_d_w(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .mulw_d_w, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn mulw_d_wu(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .mulw_d_wu, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn nor(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .nor, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn @"or"(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .@"or", .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn ori(f0: Register, f1: Register, f2: u12) Inst {
        return .{ .opcode = .ori, .data = .{ .DJUk12 = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn orn(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .orn, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn pcaddu12i(f0: Register, f1: i20) Inst {
        return .{ .opcode = .pcaddu12i, .data = .{ .DSj20 = .{ f0, f1 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn pcaddu18i(f0: Register, f1: i20) Inst {
        return .{ .opcode = .pcaddu18i, .data = .{ .DSj20 = .{ f0, f1 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn pcaddu2i(f0: Register, f1: i20) Inst {
        return .{ .opcode = .pcaddu2i, .data = .{ .DSj20 = .{ f0, f1 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn pcalau12i(f0: Register, f1: i20) Inst {
        return .{ .opcode = .pcalau12i, .data = .{ .DSj20 = .{ f0, f1 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn preld(f0: Register, f1: u5, f2: i12) Inst {
        return .{ .opcode = .preld, .data = .{ .JUd5Sk12 = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn preldx(f0: Register, f1: Register, f2: u5) Inst {
        return .{ .opcode = .preldx, .data = .{ .JKUd5 = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn rdtime_d(f0: Register, f1: Register) Inst {
        return .{ .opcode = .rdtime_d, .data = .{ .DJ = .{ f0, f1 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn rdtimeh_w(f0: Register, f1: Register) Inst {
        return .{ .opcode = .rdtimeh_w, .data = .{ .DJ = .{ f0, f1 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn rdtimel_w(f0: Register, f1: Register) Inst {
        return .{ .opcode = .rdtimel_w, .data = .{ .DJ = .{ f0, f1 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn revb_2h(f0: Register, f1: Register) Inst {
        return .{ .opcode = .revb_2h, .data = .{ .DJ = .{ f0, f1 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn revb_2w(f0: Register, f1: Register) Inst {
        return .{ .opcode = .revb_2w, .data = .{ .DJ = .{ f0, f1 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn revb_4h(f0: Register, f1: Register) Inst {
        return .{ .opcode = .revb_4h, .data = .{ .DJ = .{ f0, f1 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn revb_d(f0: Register, f1: Register) Inst {
        return .{ .opcode = .revb_d, .data = .{ .DJ = .{ f0, f1 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn revbit_4b(f0: Register, f1: Register) Inst {
        return .{ .opcode = .revbit_4b, .data = .{ .DJ = .{ f0, f1 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn revbit_8b(f0: Register, f1: Register) Inst {
        return .{ .opcode = .revbit_8b, .data = .{ .DJ = .{ f0, f1 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn revbit_d(f0: Register, f1: Register) Inst {
        return .{ .opcode = .revbit_d, .data = .{ .DJ = .{ f0, f1 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn revbit_w(f0: Register, f1: Register) Inst {
        return .{ .opcode = .revbit_w, .data = .{ .DJ = .{ f0, f1 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn revh_2w(f0: Register, f1: Register) Inst {
        return .{ .opcode = .revh_2w, .data = .{ .DJ = .{ f0, f1 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn revh_d(f0: Register, f1: Register) Inst {
        return .{ .opcode = .revh_d, .data = .{ .DJ = .{ f0, f1 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn rotr_d(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .rotr_d, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn rotr_w(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .rotr_w, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn rotri_d(f0: Register, f1: Register, f2: u6) Inst {
        return .{ .opcode = .rotri_d, .data = .{ .DJUk6 = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn rotri_w(f0: Register, f1: Register, f2: u5) Inst {
        return .{ .opcode = .rotri_w, .data = .{ .DJUk5 = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn sc_d(f0: Register, f1: Register, f2: i14) Inst {
        return .{ .opcode = .sc_d, .data = .{ .DJSk14 = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn sc_q(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .sc_q, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn sc_w(f0: Register, f1: Register, f2: i14) Inst {
        return .{ .opcode = .sc_w, .data = .{ .DJSk14 = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn screl_d(f0: Register, f1: Register) Inst {
        return .{ .opcode = .screl_d, .data = .{ .DJ = .{ f0, f1 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn screl_w(f0: Register, f1: Register) Inst {
        return .{ .opcode = .screl_w, .data = .{ .DJ = .{ f0, f1 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn sext_b(f0: Register, f1: Register) Inst {
        return .{ .opcode = .sext_b, .data = .{ .DJ = .{ f0, f1 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn sext_h(f0: Register, f1: Register) Inst {
        return .{ .opcode = .sext_h, .data = .{ .DJ = .{ f0, f1 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn sladd_d(f0: Register, f1: Register, f2: Register, f3: u2) Inst {
        return .{ .opcode = .sladd_d, .data = .{ .DJKUa2 = .{ f0, f1, f2, f3 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn sladd_w(f0: Register, f1: Register, f2: Register, f3: u2) Inst {
        return .{ .opcode = .sladd_w, .data = .{ .DJKUa2 = .{ f0, f1, f2, f3 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn sladd_wu(f0: Register, f1: Register, f2: Register, f3: u2) Inst {
        return .{ .opcode = .sladd_wu, .data = .{ .DJKUa2 = .{ f0, f1, f2, f3 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn sll_d(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .sll_d, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn sll_w(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .sll_w, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn slli_d(f0: Register, f1: Register, f2: u6) Inst {
        return .{ .opcode = .slli_d, .data = .{ .DJUk6 = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn slli_w(f0: Register, f1: Register, f2: u5) Inst {
        return .{ .opcode = .slli_w, .data = .{ .DJUk5 = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn slt(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .slt, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn slti(f0: Register, f1: Register, f2: i12) Inst {
        return .{ .opcode = .slti, .data = .{ .DJSk12 = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn sltu(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .sltu, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn sltui(f0: Register, f1: Register, f2: i12) Inst {
        return .{ .opcode = .sltui, .data = .{ .DJSk12 = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn sra_d(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .sra_d, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn sra_w(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .sra_w, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn srai_d(f0: Register, f1: Register, f2: u6) Inst {
        return .{ .opcode = .srai_d, .data = .{ .DJUk6 = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn srai_w(f0: Register, f1: Register, f2: u5) Inst {
        return .{ .opcode = .srai_w, .data = .{ .DJUk5 = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn srl_d(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .srl_d, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn srl_w(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .srl_w, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn srli_d(f0: Register, f1: Register, f2: u6) Inst {
        return .{ .opcode = .srli_d, .data = .{ .DJUk6 = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn srli_w(f0: Register, f1: Register, f2: u5) Inst {
        return .{ .opcode = .srli_w, .data = .{ .DJUk5 = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn st_b(f0: Register, f1: Register, f2: i12) Inst {
        return .{ .opcode = .st_b, .data = .{ .DJSk12 = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn st_d(f0: Register, f1: Register, f2: i12) Inst {
        return .{ .opcode = .st_d, .data = .{ .DJSk12 = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn st_h(f0: Register, f1: Register, f2: i12) Inst {
        return .{ .opcode = .st_h, .data = .{ .DJSk12 = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn st_w(f0: Register, f1: Register, f2: i12) Inst {
        return .{ .opcode = .st_w, .data = .{ .DJSk12 = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn stgt_b(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .stgt_b, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn stgt_d(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .stgt_d, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn stgt_h(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .stgt_h, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn stgt_w(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .stgt_w, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn stle_b(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .stle_b, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn stle_d(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .stle_d, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn stle_h(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .stle_h, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn stle_w(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .stle_w, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn stox4_d(f0: Register, f1: Register, f2: i14) Inst {
        return .{ .opcode = .stox4_d, .data = .{ .DJSk14 = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn stox4_w(f0: Register, f1: Register, f2: i14) Inst {
        return .{ .opcode = .stox4_w, .data = .{ .DJSk14 = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn stx_b(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .stx_b, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn stx_d(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .stx_d, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn stx_h(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .stx_h, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn stx_w(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .stx_w, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn sub_d(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .sub_d, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn sub_w(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .sub_w, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn syscall(f0: u15) Inst {
        return .{ .opcode = .syscall, .data = .{ .Ud15 = .{f0} } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn tlbclr() Inst {
        return .{ .opcode = .tlbclr, .data = .EMPTY };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn tlbfill() Inst {
        return .{ .opcode = .tlbfill, .data = .EMPTY };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn tlbflush() Inst {
        return .{ .opcode = .tlbflush, .data = .EMPTY };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn tlbinv(f0: Register, f1: Register, f2: u5) Inst {
        return .{ .opcode = .tlbinv, .data = .{ .JKUd5 = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn tlbrd() Inst {
        return .{ .opcode = .tlbrd, .data = .EMPTY };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn tlbsrch() Inst {
        return .{ .opcode = .tlbsrch, .data = .EMPTY };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn tlbwr() Inst {
        return .{ .opcode = .tlbwr, .data = .EMPTY };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn xor(f0: Register, f1: Register, f2: Register) Inst {
        return .{ .opcode = .xor, .data = .{ .DJK = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn xori(f0: Register, f1: Register, f2: u12) Inst {
        return .{ .opcode = .xori, .data = .{ .DJUk12 = .{ f0, f1, f2 } } };
    }

    // Workaround https://github.com/ziglang/zig/issues/24127
    pub noinline fn xxx_unknown_1() Inst {
        return .{ .opcode = .xxx_unknown_1, .data = .EMPTY };
    }
};

#ifdef DEF_DEBUG
#define F_DEBUG(x) x
#define F_NON_DEBUG(x)
#else
#define F_DEBUG(x)
#define F_NON_DEBUG(x) x
#endif

; This is list of symbols available in the first public UCRT version (ucrtbase.dll and ucrtbased.dll)
; First public ucrtbase.dll version is 10.0.10137.0 and is part of the Microsoft Visual C++ 2015 Redistributable version 14.0.23026.0
; First public ucrtbased.dll version is 10.0.10150.0 and is part of the Microsoft Visual Studio 2015 (Universal CRT Headers Libraries and Sources)
F_I386(_CIacos)
F_I386(_CIasin)
F_I386(_CIatan)
F_I386(_CIatan2)
F_I386(_CIcos)
F_I386(_CIcosh)
F_I386(_CIexp)
F_I386(_CIfmod)
F_I386(_CIlog)
F_I386(_CIlog10)
F_I386(_CIpow)
F_I386(_CIsin)
F_I386(_CIsinh)
F_I386(_CIsqrt)
F_I386(_CItan)
F_I386(_CItanh)
_Cbuild
_Cmulcc
_Cmulcr
_CreateFrameInfo
F_DEBUG(_CrtCheckMemory)
F_DEBUG(_CrtDbgReport)
F_DEBUG(_CrtDbgReportW)
F_DEBUG(_CrtDoForAllClientObjects)
F_DEBUG(_CrtDumpMemoryLeaks)
F_DEBUG(_CrtGetAllocHook)
F_DEBUG(_CrtGetDebugFillThreshold)
F_DEBUG(_CrtGetDumpClient)
F_DEBUG(_CrtGetReportHook)
F_DEBUG(_CrtIsMemoryBlock)
F_DEBUG(_CrtIsValidHeapPointer)
F_DEBUG(_CrtIsValidPointer)
F_DEBUG(_CrtMemCheckpoint)
F_DEBUG(_CrtMemDifference)
F_DEBUG(_CrtMemDumpAllObjectsSince)
F_DEBUG(_CrtMemDumpStatistics)
F_DEBUG(_CrtReportBlockType)
F_DEBUG(_CrtSetAllocHook)
F_DEBUG(_CrtSetBreakAlloc)
F_DEBUG(_CrtSetDbgBlockType)
F_DEBUG(_CrtSetDbgFlag)
F_DEBUG(_CrtSetDebugFillThreshold)
F_DEBUG(_CrtSetDumpClient)
F_DEBUG(_CrtSetReportFile)
F_DEBUG(_CrtSetReportHook)
F_DEBUG(_CrtSetReportHook2)
F_DEBUG(_CrtSetReportHookW2)
F_DEBUG(_CrtSetReportMode)
F_I386(_CxxThrowException@8)
F_NON_I386(_CxxThrowException)
F_I386(_EH_prolog)
_Exit
_FCbuild
_FCmulcc
_FCmulcr
F_ARM32(_FPE_Raise)
_FindAndUnlinkFrame
F_X64(_GetImageBase)
F_X64(_GetThrowImageBase)
_Getdays
_Getmonths
_Gettnames
_IsExceptionObjectToBeDestroyed
_LCbuild
_LCmulcc
_LCmulcr
F_I386(_NLG_Dispatch2@4)
F_I386(_NLG_Return@12)
F_I386(_NLG_Return2)
F_X64(_SetImageBase)
F_X64(_SetThrowImageBase)
_SetWinRTOutOfMemoryExceptionCallback
_Strftime
F_DEBUG(_VCrtDbgReportA)
F_DEBUG(_VCrtDbgReportW)
_W_Getdays
_W_Getmonths
_W_Gettnames
_Wcsftime
__AdjustPointer
__BuildCatchObject
__BuildCatchObjectHelper
F_NON_I386(__C_specific_handler)
__CxxDetectRethrow
__CxxExceptionFilter
__CxxFrameHandler
__CxxFrameHandler2
__CxxFrameHandler3
F_I386(__CxxLongjmpUnwind@4)
__CxxQueryExceptionSize
__CxxRegisterExceptionObject
__CxxUnregisterExceptionObject
__DestructExceptionObject
__FrameUnwindFilter
__GetPlatformExceptionInfo
F_NON_I386(__NLG_Dispatch2)
F_NON_I386(__NLG_Return2)
__RTCastToVoid
__RTDynamicCast
__RTtypeid
__TypeMatch
___lc_codepage_func
___lc_collate_cp_func
___lc_locale_name_func
___mb_cur_max_func
___mb_cur_max_l_func
__acrt_iob_func
__conio_common_vcprintf
__conio_common_vcprintf_p
__conio_common_vcprintf_s
__conio_common_vcscanf
__conio_common_vcwprintf
__conio_common_vcwprintf_p
__conio_common_vcwprintf_s
__conio_common_vcwscanf
F_I386(__control87_2)
__current_exception
__current_exception_context
__daylight
__dcrt_get_wide_environment_from_os
__dcrt_initial_narrow_environment DATA
__doserrno
__dstbias
__fpe_flt_rounds
__fpecode
__initialize_lconv_for_unsigned_char
F_I386(__intrinsic_abnormal_termination)
F_NON_ARM64(__intrinsic_setjmp)
F64(__intrinsic_setjmpex)
__isascii
__iscsym
__iscsymf
__iswcsym
__iswcsymf
F_ARM32(__jump_unwind)
F_I386(__libm_sse2_acos)
F_I386(__libm_sse2_acosf)
F_I386(__libm_sse2_asin)
F_I386(__libm_sse2_asinf)
F_I386(__libm_sse2_atan)
F_I386(__libm_sse2_atan2)
F_I386(__libm_sse2_atanf)
F_I386(__libm_sse2_cos)
F_I386(__libm_sse2_cosf)
F_I386(__libm_sse2_exp)
F_I386(__libm_sse2_expf)
F_I386(__libm_sse2_log)
F_I386(__libm_sse2_log10)
F_I386(__libm_sse2_log10f)
F_I386(__libm_sse2_logf)
F_I386(__libm_sse2_pow)
F_I386(__libm_sse2_powf)
F_I386(__libm_sse2_sin)
F_I386(__libm_sse2_sinf)
F_I386(__libm_sse2_tan)
F_I386(__libm_sse2_tanf)
__p___argc
__p___argv
__p___wargv
__p__acmdln
__p__commode
F_DEBUG(__p__crtBreakAlloc)
F_DEBUG(__p__crtDbgFlag)
__p__environ
__p__fmode
__p__mbcasemap
__p__mbctype
__p__pgmptr
__p__wcmdln
__p__wenviron
__p__wpgmptr
__pctype_func
__processing_throw
__pwctype_func
__pxcptinfoptrs
__report_gsfailure
__setusermatherr
__std_exception_copy
__std_exception_destroy
__std_type_info_compare
__std_type_info_destroy_list
__std_type_info_hash
__std_type_info_name
__stdio_common_vfprintf
__stdio_common_vfprintf_p
__stdio_common_vfprintf_s
__stdio_common_vfscanf
__stdio_common_vfwprintf
__stdio_common_vfwprintf_p
__stdio_common_vfwprintf_s
__stdio_common_vfwscanf
__stdio_common_vsnprintf_s
__stdio_common_vsnwprintf_s
__stdio_common_vsprintf
__stdio_common_vsprintf_p
__stdio_common_vsprintf_s
__stdio_common_vsscanf
__stdio_common_vswprintf
__stdio_common_vswprintf_p
__stdio_common_vswprintf_s
__stdio_common_vswscanf
__strncnt
__sys_errlist
__sys_nerr
__threadhandle
__threadid
__timezone
__toascii
__tzname
#if !defined(DEF_DEBUG) || !defined(DEF_ARM64)
; symbols __unDName and __unDNameEx are available in all versions except ARM64 ucrtbased.dll
__unDName
__unDNameEx
#endif
__uncaught_exception
__wcserror
__wcserror_s
__wcsncnt
_abs64
_access
_access_s
_aligned_free
F_DEBUG(_aligned_free_dbg)
_aligned_malloc
F_DEBUG(_aligned_malloc_dbg)
_aligned_msize
F_DEBUG(_aligned_msize_dbg)
_aligned_offset_malloc
F_DEBUG(_aligned_offset_malloc_dbg)
_aligned_offset_realloc
F_DEBUG(_aligned_offset_realloc_dbg)
_aligned_offset_recalloc
F_DEBUG(_aligned_offset_recalloc_dbg)
_aligned_realloc
F_DEBUG(_aligned_realloc_dbg)
_aligned_recalloc
F_DEBUG(_aligned_recalloc_dbg)
_assert
_atodbl
_atodbl_l
_atof_l
_atoflt
_atoflt_l
_atoi64
_atoi64_l
_atoi_l
_atol_l
_atoldbl
_atoldbl_l
_atoll_l
_beep
_beginthread
_beginthreadex
_byteswap_uint64
_byteswap_ulong
_byteswap_ushort
_c_exit
_cabs DATA ; DATA set manually
_callnewh
_calloc_base
F_DEBUG(_calloc_dbg)
_cexit
_cgets
_cgets_s
_cgetws
_cgetws_s
_chdir
_chdrive
_chgsign
_chgsignf
F_I386(_chkesp)
_chmod
_chsize
_chsize_s
F_DEBUG(_chvalidator)
F_DEBUG(_chvalidator_l)
_clearfp
_close
_commit
_configthreadlocale
_configure_narrow_argv
_configure_wide_argv
_control87
_controlfp
_controlfp_s
_copysign
_copysignf
_cputs
_cputws
_creat
_create_locale
_crt_at_quick_exit
_crt_atexit
F_I386(_crt_debugger_hook)
_ctime32
_ctime32_s
_ctime64
_ctime64_s
_cwait
_d_int
_dclass
_dexp
_difftime32
_difftime64
_dlog
_dnorm
_dpcomp
_dpoly
_dscale
_dsign
_dsin
_dtest
_dunscale
_dup
_dup2
_dupenv_s
F_DEBUG(_dupenv_s_dbg)
_ecvt
_ecvt_s
_endthread
_endthreadex
_eof
_errno
_except1
F_I386(_except_handler2)
F_I386(_except_handler3)
F_I386(_except_handler4_common)
_execl
_execle
_execlp
_execlpe
_execute_onexit_table
_execv
_execve
_execvp
_execvpe
_exit
_expand
F_DEBUG(_expand_dbg)
_fclose_nolock
_fcloseall
_fcvt
_fcvt_s
_fd_int
_fdclass
_fdexp
_fdlog
_fdnorm
_fdopen
_fdpcomp
_fdpoly
_fdscale
_fdsign
_fdsin
_fdtest
_fdunscale
_fflush_nolock
_fgetc_nolock
_fgetchar
_fgetwc_nolock
_fgetwchar
_filelength
_filelengthi64
_fileno
_findclose
_findfirst32
_findfirst32i64
_findfirst64
_findfirst64i32
_findnext32
_findnext32i64
_findnext64
_findnext64i32
_finite
F_NON_I386(_finitef)
_flushall
_fpclass
F_X64(_fpclassf)
_fpieee_flt
_fpreset DATA ; DATA added manually
_fputc_nolock
_fputchar
_fputwc_nolock
_fputwchar
_fread_nolock
_fread_nolock_s
_free_base
F_DEBUG(_free_dbg)
_free_locale
_fseek_nolock
_fseeki64
_fseeki64_nolock
_fsopen
_fstat32
_fstat32i64
_fstat64
_fstat64i32
_ftell_nolock
_ftelli64
_ftelli64_nolock
_ftime32
_ftime32_s
_ftime64
_ftime64_s
F_I386(_ftol)
_fullpath
F_DEBUG(_fullpath_dbg)
_futime32
_futime64
_fwrite_nolock
_gcvt
_gcvt_s
F_X64(_get_FMA3_enable)
_get_current_locale
_get_daylight
_get_doserrno
_get_dstbias
_get_errno
_get_fmode
_get_heap_handle
_get_initial_narrow_environment
_get_initial_wide_environment
_get_invalid_parameter_handler
_get_narrow_winmain_command_line
_get_osfhandle
_get_pgmptr
_get_printf_count_output
_get_purecall_handler
_get_stream_buffer_pointers
_get_terminate
_get_thread_local_invalid_parameter_handler
_get_timezone
_get_tzname
_get_unexpected
_get_wide_winmain_command_line
_get_wpgmptr
_getc_nolock
_getch
_getch_nolock
_getche
_getche_nolock
_getcwd
F_DEBUG(_getcwd_dbg)
_getdcwd
F_DEBUG(_getdcwd_dbg)
_getdiskfree
_getdllprocaddr
_getdrive
_getdrives
_getmaxstdio
_getmbcp
_getpid
_getsystime
_getw
_getwc_nolock
_getwch
_getwch_nolock
_getwche
_getwche_nolock
_getws
_getws_s
F_I386(_global_unwind2)
_gmtime32
_gmtime32_s
_gmtime64
_gmtime64_s
_heapchk
_heapmin
_heapwalk
_hypot
_hypotf
_i64toa
_i64toa_s
_i64tow
_i64tow_s
_initialize_narrow_environment
_initialize_onexit_table
_initialize_wide_environment
_initterm
_initterm_e
F_DEBUG(_invalid_parameter)
_invalid_parameter_noinfo
_invalid_parameter_noinfo_noreturn
_invoke_watson
#if !defined(DEF_DEBUG) || !defined(DEF_ARM64)
; symbol _is_exception_typeof is available in all versions except ARM64 ucrtbased.dll
_is_exception_typeof
#endif
_isalnum_l
_isalpha_l
_isatty
_isblank_l
_iscntrl_l
_isctype
_isctype_l
_isdigit_l
_isgraph_l
_isleadbyte_l
_islower_l
_ismbbalnum
_ismbbalnum_l
_ismbbalpha
_ismbbalpha_l
_ismbbblank
_ismbbblank_l
_ismbbgraph
_ismbbgraph_l
_ismbbkalnum
_ismbbkalnum_l
_ismbbkana
_ismbbkana_l
_ismbbkprint
_ismbbkprint_l
_ismbbkpunct
_ismbbkpunct_l
_ismbblead
_ismbblead_l
_ismbbprint
_ismbbprint_l
_ismbbpunct
_ismbbpunct_l
_ismbbtrail
_ismbbtrail_l
_ismbcalnum
_ismbcalnum_l
_ismbcalpha
_ismbcalpha_l
_ismbcblank
_ismbcblank_l
_ismbcdigit
_ismbcdigit_l
_ismbcgraph
_ismbcgraph_l
_ismbchira
_ismbchira_l
_ismbckata
_ismbckata_l
_ismbcl0
_ismbcl0_l
_ismbcl1
_ismbcl1_l
_ismbcl2
_ismbcl2_l
_ismbclegal
_ismbclegal_l
_ismbclower
_ismbclower_l
_ismbcprint
_ismbcprint_l
_ismbcpunct
_ismbcpunct_l
_ismbcspace
_ismbcspace_l
_ismbcsymbol
_ismbcsymbol_l
_ismbcupper
_ismbcupper_l
_ismbslead
_ismbslead_l
_ismbstrail
_ismbstrail_l
_isnan
F_X64(_isnanf)
_isprint_l
_ispunct_l
_isspace_l
_isupper_l
_iswalnum_l
_iswalpha_l
_iswblank_l
_iswcntrl_l
_iswcsym_l
_iswcsymf_l
_iswctype_l
_iswdigit_l
_iswgraph_l
_iswlower_l
_iswprint_l
_iswpunct_l
_iswspace_l
_iswupper_l
_iswxdigit_l
_isxdigit_l
_itoa
_itoa_s
_itow
_itow_s
_j0
_j1
_jn
_kbhit
_ld_int
_ldclass
_ldexp
_ldlog
_ldpcomp
_ldpoly
_ldscale
_ldsign
_ldsin
_ldtest
_ldunscale
_lfind
_lfind_s
F_I386(_libm_sse2_acos_precise)
F_I386(_libm_sse2_asin_precise)
F_I386(_libm_sse2_atan_precise)
F_I386(_libm_sse2_cos_precise)
F_I386(_libm_sse2_exp_precise)
F_I386(_libm_sse2_log10_precise)
F_I386(_libm_sse2_log_precise)
F_I386(_libm_sse2_pow_precise)
F_I386(_libm_sse2_sin_precise)
F_I386(_libm_sse2_sqrt_precise)
F_I386(_libm_sse2_tan_precise)
_loaddll
F64(_local_unwind)
F_I386(_local_unwind2)
F_I386(_local_unwind4)
_localtime32
_localtime32_s
_localtime64
_localtime64_s
_lock_file
_lock_locales
_locking
_logb
F_NON_I386(_logbf)
F_I386(_longjmpex)
_lrotl
_lrotr
_lsearch
_lsearch_s
_lseek
_lseeki64
_ltoa
_ltoa_s
_ltow
_ltow_s
_makepath
_makepath_s
_malloc_base
F_DEBUG(_malloc_dbg)
_mbbtombc
_mbbtombc_l
_mbbtype
_mbbtype_l
_mbcasemap DATA
_mbccpy
_mbccpy_l
_mbccpy_s
_mbccpy_s_l
_mbcjistojms
_mbcjistojms_l
_mbcjmstojis
_mbcjmstojis_l
_mbclen
_mbclen_l
_mbctohira
_mbctohira_l
_mbctokata
_mbctokata_l
_mbctolower
_mbctolower_l
_mbctombb
_mbctombb_l
_mbctoupper
_mbctoupper_l
_mblen_l
_mbsbtype
_mbsbtype_l
_mbscat_s
_mbscat_s_l
_mbschr
_mbschr_l
_mbscmp
_mbscmp_l
_mbscoll
_mbscoll_l
_mbscpy_s
_mbscpy_s_l
_mbscspn
_mbscspn_l
_mbsdec
_mbsdec_l
_mbsdup
F_DEBUG(_mbsdup_dbg)
_mbsicmp
_mbsicmp_l
_mbsicoll
_mbsicoll_l
_mbsinc
_mbsinc_l
_mbslen
_mbslen_l
_mbslwr
_mbslwr_l
_mbslwr_s
_mbslwr_s_l
_mbsnbcat
_mbsnbcat_l
_mbsnbcat_s
_mbsnbcat_s_l
_mbsnbcmp
_mbsnbcmp_l
_mbsnbcnt
_mbsnbcnt_l
_mbsnbcoll
_mbsnbcoll_l
_mbsnbcpy
_mbsnbcpy_l
_mbsnbcpy_s
_mbsnbcpy_s_l
_mbsnbicmp
_mbsnbicmp_l
_mbsnbicoll
_mbsnbicoll_l
_mbsnbset
_mbsnbset_l
_mbsnbset_s
_mbsnbset_s_l
_mbsncat
_mbsncat_l
_mbsncat_s
_mbsncat_s_l
_mbsnccnt
_mbsnccnt_l
_mbsncmp
_mbsncmp_l
_mbsncoll
_mbsncoll_l
_mbsncpy
_mbsncpy_l
_mbsncpy_s
_mbsncpy_s_l
_mbsnextc
_mbsnextc_l
_mbsnicmp
_mbsnicmp_l
_mbsnicoll
_mbsnicoll_l
_mbsninc
_mbsninc_l
_mbsnlen
_mbsnlen_l
_mbsnset
_mbsnset_l
_mbsnset_s
_mbsnset_s_l
_mbspbrk
_mbspbrk_l
_mbsrchr
_mbsrchr_l
_mbsrev
_mbsrev_l
_mbsset
_mbsset_l
_mbsset_s
_mbsset_s_l
_mbsspn
_mbsspn_l
_mbsspnp
_mbsspnp_l
_mbsstr
_mbsstr_l
_mbstok
_mbstok_l
_mbstok_s
_mbstok_s_l
_mbstowcs_l
_mbstowcs_s_l
_mbstrlen
_mbstrlen_l
_mbstrnlen
_mbstrnlen_l
_mbsupr
_mbsupr_l
_mbsupr_s
_mbsupr_s_l
_mbtowc_l
_memccpy
_memicmp
_memicmp_l
_mkdir
_mkgmtime32
_mkgmtime64
_mktemp
_mktemp_s
_mktime32
_mktime64
_msize
F_DEBUG(_msize_dbg)
_nextafter
F_X64(_nextafterf)
F_I386(_o__CIacos)
F_I386(_o__CIasin)
F_I386(_o__CIatan)
F_I386(_o__CIatan2)
F_I386(_o__CIcos)
F_I386(_o__CIcosh)
F_I386(_o__CIexp)
F_I386(_o__CIfmod)
F_I386(_o__CIlog)
F_I386(_o__CIlog10)
F_I386(_o__CIpow)
F_I386(_o__CIsin)
F_I386(_o__CIsinh)
F_I386(_o__CIsqrt)
F_I386(_o__CItan)
F_I386(_o__CItanh)
_o__Getdays
_o__Getmonths
_o__Gettnames
_o__Strftime
_o__W_Getdays
_o__W_Getmonths
_o__W_Gettnames
_o__Wcsftime
_o___acrt_iob_func
_o___conio_common_vcprintf
_o___conio_common_vcprintf_p
_o___conio_common_vcprintf_s
_o___conio_common_vcscanf
_o___conio_common_vcwprintf
_o___conio_common_vcwprintf_p
_o___conio_common_vcwprintf_s
_o___conio_common_vcwscanf
_o___daylight
_o___dstbias
_o___fpe_flt_rounds
F_I386(_o___libm_sse2_acos)
F_I386(_o___libm_sse2_acosf)
F_I386(_o___libm_sse2_asin)
F_I386(_o___libm_sse2_asinf)
F_I386(_o___libm_sse2_atan)
F_I386(_o___libm_sse2_atan2)
F_I386(_o___libm_sse2_atanf)
F_I386(_o___libm_sse2_cos)
F_I386(_o___libm_sse2_cosf)
F_I386(_o___libm_sse2_exp)
F_I386(_o___libm_sse2_expf)
F_I386(_o___libm_sse2_log)
F_I386(_o___libm_sse2_log10)
F_I386(_o___libm_sse2_log10f)
F_I386(_o___libm_sse2_logf)
F_I386(_o___libm_sse2_pow)
F_I386(_o___libm_sse2_powf)
F_I386(_o___libm_sse2_sin)
F_I386(_o___libm_sse2_sinf)
F_I386(_o___libm_sse2_tan)
F_I386(_o___libm_sse2_tanf)
_o___p___argc
_o___p___argv
_o___p___wargv
_o___p__acmdln
_o___p__commode
_o___p__environ
_o___p__fmode
_o___p__mbcasemap
_o___p__mbctype
_o___p__pgmptr
_o___p__wcmdln
_o___p__wenviron
_o___p__wpgmptr
_o___pctype_func
_o___pwctype_func
_o___stdio_common_vfprintf
_o___stdio_common_vfprintf_p
_o___stdio_common_vfprintf_s
_o___stdio_common_vfscanf
_o___stdio_common_vfwprintf
_o___stdio_common_vfwprintf_p
_o___stdio_common_vfwprintf_s
_o___stdio_common_vfwscanf
_o___stdio_common_vsnprintf_s
_o___stdio_common_vsnwprintf_s
_o___stdio_common_vsprintf
_o___stdio_common_vsprintf_p
_o___stdio_common_vsprintf_s
_o___stdio_common_vsscanf
_o___stdio_common_vswprintf
_o___stdio_common_vswprintf_p
_o___stdio_common_vswprintf_s
_o___stdio_common_vswscanf
_o___timezone
_o___tzname
_o___wcserror
_o__access
_o__access_s
_o__aligned_free
_o__aligned_malloc
_o__aligned_msize
_o__aligned_offset_malloc
_o__aligned_offset_realloc
_o__aligned_offset_recalloc
_o__aligned_realloc
_o__aligned_recalloc
_o__atodbl
_o__atodbl_l
_o__atof_l
_o__atoflt
_o__atoflt_l
_o__atoi64
_o__atoi64_l
_o__atoi_l
_o__atol_l
_o__atoldbl
_o__atoldbl_l
_o__atoll_l
_o__beep
_o__beginthread
_o__beginthreadex
_o__cabs
_o__callnewh
_o__calloc_base
_o__cgets
_o__cgets_s
_o__cgetws
_o__cgetws_s
_o__chdir
_o__chdrive
_o__chmod
_o__chsize
_o__chsize_s
_o__close
_o__commit
_o__configure_wide_argv
_o__cputs
_o__cputws
_o__creat
_o__create_locale
_o__ctime32_s
_o__ctime64_s
_o__cwait
_o__d_int
_o__dclass
_o__difftime32
_o__difftime64
_o__dlog
_o__dnorm
_o__dpcomp
_o__dpoly
_o__dscale
_o__dsign
_o__dsin
_o__dtest
_o__dunscale
_o__dup
_o__dup2
_o__dupenv_s
_o__ecvt
_o__ecvt_s
_o__endthread
_o__endthreadex
_o__eof
_o__errno
_o__except1
_o__execute_onexit_table
_o__execv
_o__execve
_o__execvp
_o__execvpe
_o__expand
_o__fclose_nolock
_o__fcloseall
_o__fcvt
_o__fcvt_s
_o__fd_int
_o__fdclass
_o__fdexp
_o__fdlog
_o__fdopen
_o__fdpcomp
_o__fdpoly
_o__fdscale
_o__fdsign
_o__fdsin
_o__fflush_nolock
_o__fgetc_nolock
_o__fgetchar
_o__fgetwc_nolock
_o__fgetwchar
_o__filelength
_o__filelengthi64
_o__fileno
_o__findclose
_o__findfirst32
_o__findfirst32i64
_o__findfirst64
_o__findfirst64i32
_o__findnext32
_o__findnext32i64
_o__findnext64
_o__findnext64i32
_o__flushall
_o__fpclass
F_X64(_o__fpclassf)
_o__fputc_nolock
_o__fputchar
_o__fputwc_nolock
_o__fputwchar
_o__fread_nolock
_o__fread_nolock_s
_o__free_base
_o__free_locale
_o__fseek_nolock
_o__fseeki64
_o__fseeki64_nolock
_o__fsopen
_o__fstat32
_o__fstat32i64
_o__fstat64
_o__fstat64i32
_o__ftell_nolock
_o__ftelli64
_o__ftelli64_nolock
_o__ftime32
_o__ftime32_s
_o__ftime64
_o__ftime64_s
_o__fullpath
_o__futime32
_o__futime64
_o__fwrite_nolock
_o__gcvt
_o__gcvt_s
_o__get_daylight
_o__get_doserrno
_o__get_dstbias
_o__get_errno
_o__get_fmode
_o__get_heap_handle
_o__get_invalid_parameter_handler
_o__get_narrow_winmain_command_line
_o__get_osfhandle
_o__get_pgmptr
_o__get_stream_buffer_pointers
_o__get_terminate
_o__get_thread_local_invalid_parameter_handler
_o__get_timezone
_o__get_tzname
_o__get_wide_winmain_command_line
_o__get_wpgmptr
_o__getc_nolock
_o__getch
_o__getch_nolock
_o__getche
_o__getche_nolock
_o__getcwd
_o__getdcwd
_o__getdiskfree
_o__getdllprocaddr
_o__getdrive
_o__getdrives
_o__getmbcp
_o__getsystime
_o__getw
_o__getwc_nolock
_o__getwch
_o__getwch_nolock
_o__getwche
_o__getwche_nolock
_o__getws
_o__getws_s
_o__gmtime32
_o__gmtime32_s
_o__gmtime64
_o__gmtime64_s
_o__heapchk
_o__heapmin
_o__hypot
_o__hypotf
_o__i64toa
_o__i64toa_s
_o__i64tow
_o__i64tow_s
_o__initialize_onexit_table
_o__invalid_parameter_noinfo
_o__invalid_parameter_noinfo_noreturn
_o__isatty
_o__isctype
_o__isctype_l
_o__isleadbyte_l
_o__ismbbalnum
_o__ismbbalnum_l
_o__ismbbalpha
_o__ismbbalpha_l
_o__ismbbblank
_o__ismbbblank_l
_o__ismbbgraph
_o__ismbbgraph_l
_o__ismbbkalnum
_o__ismbbkalnum_l
_o__ismbbkana
_o__ismbbkana_l
_o__ismbbkprint
_o__ismbbkprint_l
_o__ismbbkpunct
_o__ismbbkpunct_l
_o__ismbblead
_o__ismbblead_l
_o__ismbbprint
_o__ismbbprint_l
_o__ismbbpunct
_o__ismbbpunct_l
_o__ismbbtrail
_o__ismbbtrail_l
_o__ismbcalnum
_o__ismbcalnum_l
_o__ismbcalpha
_o__ismbcalpha_l
_o__ismbcblank
_o__ismbcblank_l
_o__ismbcdigit
_o__ismbcdigit_l
_o__ismbcgraph
_o__ismbcgraph_l
_o__ismbchira
_o__ismbchira_l
_o__ismbckata
_o__ismbckata_l
_o__ismbcl0
_o__ismbcl0_l
_o__ismbcl1
_o__ismbcl1_l
_o__ismbcl2
_o__ismbcl2_l
_o__ismbclegal
_o__ismbclegal_l
_o__ismbclower
_o__ismbclower_l
_o__ismbcprint
_o__ismbcprint_l
_o__ismbcpunct
_o__ismbcpunct_l
_o__ismbcspace
_o__ismbcspace_l
_o__ismbcsymbol
_o__ismbcsymbol_l
_o__ismbcupper
_o__ismbcupper_l
_o__ismbslead
_o__ismbslead_l
_o__ismbstrail
_o__ismbstrail_l
_o__iswctype_l
_o__itoa
_o__itoa_s
_o__itow
_o__itow_s
_o__j0
_o__j1
_o__jn
_o__kbhit
_o__ld_int
_o__ldclass
_o__ldexp
_o__ldlog
_o__ldpcomp
_o__ldpoly
_o__ldscale
_o__ldsign
_o__ldsin
_o__ldtest
_o__ldunscale
_o__lfind
_o__lfind_s
F_I386(_o__libm_sse2_acos_precise)
F_I386(_o__libm_sse2_asin_precise)
F_I386(_o__libm_sse2_atan_precise)
F_I386(_o__libm_sse2_cos_precise)
F_I386(_o__libm_sse2_exp_precise)
F_I386(_o__libm_sse2_log10_precise)
F_I386(_o__libm_sse2_log_precise)
F_I386(_o__libm_sse2_pow_precise)
F_I386(_o__libm_sse2_sin_precise)
F_I386(_o__libm_sse2_sqrt_precise)
F_I386(_o__libm_sse2_tan_precise)
_o__loaddll
_o__localtime32
_o__localtime32_s
_o__localtime64
_o__localtime64_s
_o__lock_file
_o__locking
_o__logb
F_NON_I386(_o__logbf)
_o__lsearch
_o__lsearch_s
_o__lseek
_o__lseeki64
_o__ltoa
_o__ltoa_s
_o__ltow
_o__ltow_s
_o__makepath
_o__makepath_s
_o__malloc_base
_o__mbbtombc
_o__mbbtombc_l
_o__mbbtype
_o__mbbtype_l
_o__mbccpy
_o__mbccpy_l
_o__mbccpy_s
_o__mbccpy_s_l
_o__mbcjistojms
_o__mbcjistojms_l
_o__mbcjmstojis
_o__mbcjmstojis_l
_o__mbclen
_o__mbclen_l
_o__mbctohira
_o__mbctohira_l
_o__mbctokata
_o__mbctokata_l
_o__mbctolower
_o__mbctolower_l
_o__mbctombb
_o__mbctombb_l
_o__mbctoupper
_o__mbctoupper_l
_o__mblen_l
_o__mbsbtype
_o__mbsbtype_l
_o__mbscat_s
_o__mbscat_s_l
_o__mbschr
_o__mbschr_l
_o__mbscmp
_o__mbscmp_l
_o__mbscoll
_o__mbscoll_l
_o__mbscpy_s
_o__mbscpy_s_l
_o__mbscspn
_o__mbscspn_l
_o__mbsdec
_o__mbsdec_l
_o__mbsicmp
_o__mbsicmp_l
_o__mbsicoll
_o__mbsicoll_l
_o__mbsinc
_o__mbsinc_l
_o__mbslen
_o__mbslen_l
_o__mbslwr
_o__mbslwr_l
_o__mbslwr_s
_o__mbslwr_s_l
_o__mbsnbcat
_o__mbsnbcat_l
_o__mbsnbcat_s
_o__mbsnbcat_s_l
_o__mbsnbcmp
_o__mbsnbcmp_l
_o__mbsnbcnt
_o__mbsnbcnt_l
_o__mbsnbcoll
_o__mbsnbcoll_l
_o__mbsnbcpy
_o__mbsnbcpy_l
_o__mbsnbcpy_s
_o__mbsnbcpy_s_l
_o__mbsnbicmp
_o__mbsnbicmp_l
_o__mbsnbicoll
_o__mbsnbicoll_l
_o__mbsnbset
_o__mbsnbset_l
_o__mbsnbset_s
_o__mbsnbset_s_l
_o__mbsncat
_o__mbsncat_l
_o__mbsncat_s
_o__mbsncat_s_l
_o__mbsnccnt
_o__mbsnccnt_l
_o__mbsncmp
_o__mbsncmp_l
_o__mbsncoll
_o__mbsncoll_l
_o__mbsncpy
_o__mbsncpy_l
_o__mbsncpy_s
_o__mbsncpy_s_l
_o__mbsnextc
_o__mbsnextc_l
_o__mbsnicmp
_o__mbsnicmp_l
_o__mbsnicoll
_o__mbsnicoll_l
_o__mbsninc
_o__mbsninc_l
_o__mbsnlen
_o__mbsnlen_l
_o__mbsnset
_o__mbsnset_l
_o__mbsnset_s
_o__mbsnset_s_l
_o__mbspbrk
_o__mbspbrk_l
_o__mbsrchr
_o__mbsrchr_l
_o__mbsrev
_o__mbsrev_l
_o__mbsset
_o__mbsset_l
_o__mbsset_s
_o__mbsset_s_l
_o__mbsspn
_o__mbsspn_l
_o__mbsspnp
_o__mbsspnp_l
_o__mbsstr
_o__mbsstr_l
_o__mbstok
_o__mbstok_l
_o__mbstok_s
_o__mbstok_s_l
_o__mbstowcs_l
_o__mbstowcs_s_l
_o__mbstrlen
_o__mbstrlen_l
_o__mbstrnlen
_o__mbstrnlen_l
_o__mbsupr
_o__mbsupr_l
_o__mbsupr_s
_o__mbsupr_s_l
_o__mbtowc_l
_o__memicmp
_o__memicmp_l
_o__mkdir
_o__mkgmtime32
_o__mkgmtime64
_o__mktemp
_o__mktemp_s
_o__mktime32
_o__mktime64
_o__msize
_o__nextafter
F_X64(_o__nextafterf)
_o__open_osfhandle
_o__pclose
_o__pipe
_o__popen
_o__putc_nolock
_o__putch
_o__putch_nolock
_o__putenv
_o__putenv_s
_o__putw
_o__putwc_nolock
_o__putwch
_o__putwch_nolock
_o__putws
_o__read
_o__realloc_base
_o__recalloc
_o__register_onexit_function
_o__resetstkoflw
_o__rmdir
_o__rmtmp
_o__scalb
F_X64(_o__scalbf)
_o__searchenv
_o__searchenv_s
_o__set_abort_behavior
_o__set_doserrno
_o__set_errno
_o__set_invalid_parameter_handler
_o__set_new_handler
_o__set_new_mode
_o__set_thread_local_invalid_parameter_handler
_o__seterrormode
_o__setmbcp
_o__setmode
_o__setsystime
_o__sleep
_o__sopen
_o__sopen_dispatch
_o__sopen_s
_o__spawnv
_o__spawnve
_o__spawnvp
_o__spawnvpe
_o__splitpath
_o__splitpath_s
_o__stat32
_o__stat32i64
_o__stat64
_o__stat64i32
_o__strcoll_l
_o__strdate
_o__strdate_s
_o__strdup
_o__strerror
_o__strerror_s
_o__strftime_l
_o__stricmp
_o__stricmp_l
_o__stricoll
_o__stricoll_l
_o__strlwr
_o__strlwr_l
_o__strlwr_s
_o__strlwr_s_l
_o__strncoll
_o__strncoll_l
_o__strnicmp
_o__strnicmp_l
_o__strnicoll
_o__strnicoll_l
_o__strnset_s
_o__strset_s
_o__strtime
_o__strtime_s
_o__strtod_l
_o__strtof_l
_o__strtoi64
_o__strtoi64_l
_o__strtol_l
F_ARM_ANY(_o__strtold_l) ; Can't use long double functions from the CRT on x86
_o__strtoll_l
_o__strtoui64
_o__strtoui64_l
_o__strtoul_l
_o__strtoull_l
_o__strupr
_o__strupr_l
_o__strupr_s
_o__strupr_s_l
_o__strxfrm_l
_o__swab
_o__tell
_o__telli64
_o__timespec32_get
_o__timespec64_get
_o__tolower
_o__tolower_l
_o__toupper
_o__toupper_l
_o__towlower_l
_o__towupper_l
_o__tzset
_o__ui64toa
_o__ui64toa_s
_o__ui64tow
_o__ui64tow_s
_o__ultoa
_o__ultoa_s
_o__ultow
_o__ultow_s
_o__umask
_o__umask_s
_o__ungetc_nolock
_o__ungetch
_o__ungetch_nolock
_o__ungetwc_nolock
_o__ungetwch
_o__ungetwch_nolock
_o__unlink
_o__unloaddll
_o__unlock_file
_o__utime32
_o__utime64
_o__waccess
_o__waccess_s
_o__wasctime
_o__wasctime_s
_o__wchdir
_o__wchmod
_o__wcreat
_o__wcreate_locale
_o__wcscoll_l
_o__wcsdup
_o__wcserror
_o__wcserror_s
_o__wcsftime_l
_o__wcsicmp
_o__wcsicmp_l
_o__wcsicoll
_o__wcsicoll_l
_o__wcslwr
_o__wcslwr_l
_o__wcslwr_s
_o__wcslwr_s_l
_o__wcsncoll
_o__wcsncoll_l
_o__wcsnicmp
_o__wcsnicmp_l
_o__wcsnicoll
_o__wcsnicoll_l
_o__wcsnset
_o__wcsnset_s
_o__wcsset
_o__wcsset_s
_o__wcstod_l
_o__wcstof_l
_o__wcstoi64
_o__wcstoi64_l
_o__wcstol_l
F_ARM_ANY(_o__wcstold_l) ; Can't use long double functions from the CRT on x86
_o__wcstoll_l
_o__wcstombs_l
_o__wcstombs_s_l
_o__wcstoui64
_o__wcstoui64_l
_o__wcstoul_l
_o__wcstoull_l
_o__wcsupr
_o__wcsupr_l
_o__wcsupr_s
_o__wcsupr_s_l
_o__wcsxfrm_l
_o__wctime32
_o__wctime32_s
_o__wctime64
_o__wctime64_s
_o__wctomb_l
_o__wctomb_s_l
_o__wdupenv_s
_o__wexecv
_o__wexecve
_o__wexecvp
_o__wexecvpe
_o__wfdopen
_o__wfindfirst32
_o__wfindfirst32i64
_o__wfindfirst64
_o__wfindfirst64i32
_o__wfindnext32
_o__wfindnext32i64
_o__wfindnext64
_o__wfindnext64i32
_o__wfopen
_o__wfopen_s
_o__wfreopen
_o__wfreopen_s
_o__wfsopen
_o__wfullpath
_o__wgetcwd
_o__wgetdcwd
_o__wgetenv
_o__wgetenv_s
_o__wmakepath
_o__wmakepath_s
_o__wmkdir
_o__wmktemp
_o__wmktemp_s
_o__wperror
_o__wpopen
_o__wputenv
_o__wputenv_s
_o__wremove
_o__wrename
_o__write
_o__wrmdir
_o__wsearchenv
_o__wsearchenv_s
_o__wsetlocale
_o__wsopen_dispatch
_o__wsopen_s
_o__wspawnv
_o__wspawnve
_o__wspawnvp
_o__wspawnvpe
_o__wsplitpath
_o__wsplitpath_s
_o__wstat32
_o__wstat32i64
_o__wstat64
_o__wstat64i32
_o__wstrdate
_o__wstrdate_s
_o__wstrtime
_o__wstrtime_s
_o__wsystem
_o__wtmpnam_s
_o__wtof
_o__wtof_l
_o__wtoi
_o__wtoi64
_o__wtoi64_l
_o__wtoi_l
_o__wtol
_o__wtol_l
_o__wtoll
_o__wtoll_l
_o__wunlink
_o__wutime32
_o__wutime64
_o__y0
_o__y1
_o__yn
_o_abort
_o_acos
F_NON_I386(_o_acosf)
_o_acosh
_o_acoshf
F_ARM_ANY(_o_acoshl) ; Can't use long double functions from the CRT on x86
_o_asctime
_o_asctime_s
_o_asin
F_NON_I386(_o_asinf)
_o_asinh
_o_asinhf
F_ARM_ANY(_o_asinhl) ; Can't use long double functions from the CRT on x86
_o_atan
_o_atan2
F_NON_I386(_o_atan2f)
F_NON_I386(_o_atanf)
_o_atanh
_o_atanhf
F_ARM_ANY(_o_atanhl) ; Can't use long double functions from the CRT on x86
_o_atof
_o_atoi
_o_atol
_o_atoll
_o_bsearch
_o_bsearch_s
_o_btowc
_o_calloc
_o_cbrt
_o_cbrtf
_o_ceil
F_NON_I386(_o_ceilf)
_o_clearerr
_o_clearerr_s
_o_cos
F_NON_I386(_o_cosf)
_o_cosh
F_NON_I386(_o_coshf)
_o_erf
_o_erfc
_o_erfcf
F_ARM_ANY(_o_erfcl) ; Can't use long double functions from the CRT on x86
_o_erff
F_ARM_ANY(_o_erfl) ; Can't use long double functions from the CRT on x86
_o_exp
_o_exp2
_o_exp2f
F_ARM_ANY(_o_exp2l) ; Can't use long double functions from the CRT on x86
F_NON_I386(_o_expf)
_o_fabs
F_ARM_ANY(_o_fabsf)
_o_fclose
_o_feof
_o_ferror
_o_fflush
_o_fgetc
_o_fgetpos
_o_fgets
_o_fgetwc
_o_fgetws
_o_floor
F_NON_I386(_o_floorf)
_o_fma
_o_fmaf
F_ARM_ANY(_o_fmal) ; Can't use long double functions from the CRT on x86
_o_fmod
F_NON_I386(_o_fmodf)
_o_fopen
_o_fopen_s
_o_fputc
_o_fputs
_o_fputwc
_o_fputws
_o_fread
_o_fread_s
_o_free
_o_freopen
_o_freopen_s
_o_frexp
_o_fseek
_o_fsetpos
_o_ftell
_o_fwrite
_o_getc
_o_getchar
_o_getenv
_o_getenv_s
_o_gets
_o_gets_s
_o_getwc
_o_getwchar
_o_hypot
_o_is_wctype
_o_isalnum
_o_isalpha
_o_isblank
_o_iscntrl
_o_isdigit
_o_isgraph
_o_isleadbyte
_o_islower
_o_isprint
_o_ispunct
_o_isspace
_o_isupper
_o_iswalnum
_o_iswalpha
_o_iswascii
_o_iswblank
_o_iswcntrl
_o_iswctype
_o_iswdigit
_o_iswgraph
_o_iswlower
_o_iswprint
_o_iswpunct
_o_iswspace
_o_iswupper
_o_iswxdigit
_o_isxdigit
_o_ldexp
_o_lgamma
_o_lgammaf
F_ARM_ANY(_o_lgammal) ; Can't use long double functions from the CRT on x86
_o_llrint
_o_llrintf
F_ARM_ANY(_o_llrintl) ; Can't use long double functions from the CRT on x86
_o_llround
_o_llroundf
F_ARM_ANY(_o_llroundl) ; Can't use long double functions from the CRT on x86
_o_localeconv
_o_log
_o_log10
F_NON_I386(_o_log10f)
_o_log1p
_o_log1pf
F_ARM_ANY(_o_log1pl) ; Can't use long double functions from the CRT on x86
_o_log2
_o_log2f
F_ARM_ANY(_o_log2l) ; Can't use long double functions from the CRT on x86
_o_logb
_o_logbf
F_ARM_ANY(_o_logbl) ; Can't use long double functions from the CRT on x86
F_NON_I386(_o_logf)
_o_lrint
_o_lrintf
F_ARM_ANY(_o_lrintl) ; Can't use long double functions from the CRT on x86
_o_lround
_o_lroundf
F_ARM_ANY(_o_lroundl) ; Can't use long double functions from the CRT on x86
_o_malloc
_o_mblen
_o_mbrlen
_o_mbrtoc16
_o_mbrtoc32
_o_mbrtowc
_o_mbsrtowcs
_o_mbsrtowcs_s
_o_mbstowcs
_o_mbstowcs_s
_o_mbtowc
_o_memset
_o_modf
F_NON_I386(_o_modff)
_o_nan
_o_nanf
F_ARM_ANY(_o_nanl) ; Can't use long double functions from the CRT on x86
_o_nearbyint
_o_nearbyintf
F_ARM_ANY(_o_nearbyintl) ; Can't use long double functions from the CRT on x86
_o_nextafter
_o_nextafterf
F_ARM_ANY(_o_nextafterl) ; Can't use long double functions from the CRT on x86
F_ARM_ANY(_o_nexttoward) ; Can't use long double functions from the CRT on x86
F_ARM_ANY(_o_nexttowardf) ; Can't use long double functions from the CRT on x86
F_ARM_ANY(_o_nexttowardl) ; Can't use long double functions from the CRT on x86
_o_pow
_o_powf
_o_putc
_o_putchar
_o_puts
_o_putwc
_o_putwchar
_o_qsort
_o_qsort_s
_o_raise
_o_rand
_o_rand_s
_o_realloc
_o_remainder
_o_remainderf
F_ARM_ANY(_o_remainderl) ; Can't use long double functions from the CRT on x86
_o_remove
_o_remquo
_o_remquof
F_ARM_ANY(_o_remquol) ; Can't use long double functions from the CRT on x86
_o_rewind
_o_rint
_o_rintf
F_ARM_ANY(_o_rintl) ; Can't use long double functions from the CRT on x86
_o_round
_o_roundf
F_ARM_ANY(_o_roundl) ; Can't use long double functions from the CRT on x86
_o_scalbln
_o_scalblnf
F_ARM_ANY(_o_scalblnl) ; Can't use long double functions from the CRT on x86
_o_scalbn
_o_scalbnf
F_ARM_ANY(_o_scalbnl) ; Can't use long double functions from the CRT on x86
_o_set_terminate
_o_setbuf
_o_setvbuf
_o_sin
F_NON_I386(_o_sinf)
_o_sinh
F_NON_I386(_o_sinhf)
_o_sqrt
F_NON_I386(_o_sqrtf)
_o_srand
_o_strcat_s
_o_strcoll
_o_strcpy_s
_o_strerror
_o_strerror_s
_o_strftime
_o_strncat_s
_o_strncpy_s
_o_strtod
_o_strtof
_o_strtok
_o_strtok_s
_o_strtol
F_ARM_ANY(_o_strtold) ; Can't use long double functions from the CRT on x86
_o_strtoll
_o_strtoul
_o_strtoull
_o_system
_o_tan
F_NON_I386(_o_tanf)
_o_tanh
F_NON_I386(_o_tanhf)
_o_terminate
_o_tgamma
_o_tgammaf
F_ARM_ANY(_o_tgammal) ; Can't use long double functions from the CRT on x86
_o_tmpfile_s
_o_tmpnam_s
_o_tolower
_o_toupper
_o_towlower
_o_towupper
_o_ungetc
_o_ungetwc
_o_wcrtomb
_o_wcrtomb_s
_o_wcscat_s
_o_wcscoll
_o_wcscpy
_o_wcscpy_s
_o_wcsftime
_o_wcsncat_s
_o_wcsncpy_s
_o_wcsrtombs
_o_wcsrtombs_s
_o_wcstod
_o_wcstof
_o_wcstok
_o_wcstok_s
_o_wcstol
F_ARM_ANY(_o_wcstold) ; Can't use long double functions from the CRT on x86
_o_wcstoll
_o_wcstombs
_o_wcstombs_s
_o_wcstoul
_o_wcstoull
_o_wctob
_o_wctomb
_o_wctomb_s
_o_wmemcpy_s
_o_wmemmove_s
_open
_open_osfhandle
_pclose
_pipe
_popen
_purecall
_putc_nolock
_putch
_putch_nolock
_putenv
_putenv_s
_putw
_putwc_nolock
_putwch
_putwch_nolock
_putws
_query_app_type
_query_new_handler
_query_new_mode
_read
_realloc_base
F_DEBUG(_realloc_dbg)
_recalloc
F_DEBUG(_recalloc_dbg)
_register_onexit_function
_register_thread_local_exe_atexit_callback
_resetstkoflw
_rmdir
_rmtmp
_rotl
_rotl64
_rotr
_rotr64
_scalb
F_X64(_scalbf)
_searchenv
_searchenv_s
_seh_filter_dll
_seh_filter_exe
F_X64(_set_FMA3_enable)
F_I386(_seh_longjmp_unwind4@4)
F_I386(_seh_longjmp_unwind@4)
F_I386(_set_SSE2_enable)
_set_abort_behavior
_set_app_type
_set_controlfp
_set_doserrno
_set_errno
_set_error_mode
_set_fmode
_set_invalid_parameter_handler
_set_new_handler
_set_new_mode
_set_printf_count_output
_set_purecall_handler
_set_se_translator
_set_thread_local_invalid_parameter_handler
_seterrormode
F_I386(_setjmp3)
_setmaxstdio
_setmbcp
_setmode
_setsystime
_sleep
_sopen
_sopen_dispatch
_sopen_s
_spawnl
_spawnle
_spawnlp
_spawnlpe
_spawnv
_spawnve
_spawnvp
_spawnvpe
_splitpath
_splitpath_s
_stat32
_stat32i64
_stat64
_stat64i32
_statusfp
F_I386(_statusfp2)
_strcoll_l
_strdate
_strdate_s
_strdup
F_DEBUG(_strdup_dbg)
_strerror
_strerror_s
_strftime_l
_stricmp
_stricmp_l
_stricoll
_stricoll_l
_strlwr
_strlwr_l
_strlwr_s
_strlwr_s_l
_strncoll
_strncoll_l
_strnicmp
_strnicmp_l
_strnicoll
_strnicoll_l
_strnset
_strnset_s
_strrev
_strset
_strset_s
_strtime
_strtime_s
_strtod_l
_strtof_l
_strtoi64
_strtoi64_l
_strtoimax_l
_strtol_l
F_ARM_ANY(_strtold_l) ; Can't use long double functions from the CRT on x86
_strtoll_l
_strtoui64
_strtoui64_l
_strtoul_l
_strtoull_l
_strtoumax_l
_strupr
_strupr_l
_strupr_s
_strupr_s_l
_strxfrm_l
_swab
_tell
_telli64
_tempnam
F_DEBUG(_tempnam_dbg)
_time32
_time64
_timespec32_get
_timespec64_get
_tolower
_tolower_l
_toupper
_toupper_l
_towlower_l
_towupper_l
_tzset DATA ; This is wrapped in the compat code.
_ui64toa
_ui64toa_s
_ui64tow
_ui64tow_s
_ultoa
_ultoa_s
_ultow
_ultow_s
_umask
_umask_s
_ungetc_nolock
_ungetch
_ungetch_nolock
_ungetwc_nolock
_ungetwch
_ungetwch_nolock
_unlink
_unloaddll
_unlock_file
_unlock_locales
_utime32
_utime64
_waccess
_waccess_s
_wasctime
_wasctime_s
_wassert
_wchdir
_wchmod
_wcreat
_wcreate_locale
_wcscoll_l
_wcsdup
F_DEBUG(_wcsdup_dbg)
_wcserror
_wcserror_s
_wcsftime_l
_wcsicmp
_wcsicmp_l
_wcsicoll
_wcsicoll_l
_wcslwr
_wcslwr_l
_wcslwr_s
_wcslwr_s_l
_wcsncoll
_wcsncoll_l
_wcsnicmp
_wcsnicmp_l
_wcsnicoll
_wcsnicoll_l
_wcsnset
_wcsnset_s
_wcsrev
_wcsset
_wcsset_s
_wcstod_l
_wcstof_l
_wcstoi64
_wcstoi64_l
_wcstoimax_l
_wcstol_l
F_ARM_ANY(_wcstold_l) ; Can't use long double functions from the CRT on x86
_wcstoll_l
_wcstombs_l
_wcstombs_s_l
_wcstoui64
_wcstoui64_l
_wcstoul_l
_wcstoull_l
_wcstoumax_l
_wcsupr
_wcsupr_l
_wcsupr_s
_wcsupr_s_l
_wcsxfrm_l
_wctime32
_wctime32_s
_wctime64
_wctime64_s
_wctomb_l
_wctomb_s_l
_wctype DATA
_wdupenv_s
F_DEBUG(_wdupenv_s_dbg)
_wexecl
_wexecle
_wexeclp
_wexeclpe
_wexecv
_wexecve
_wexecvp
_wexecvpe
_wfdopen
_wfindfirst32
_wfindfirst32i64
_wfindfirst64
_wfindfirst64i32
_wfindnext32
_wfindnext32i64
_wfindnext64
_wfindnext64i32
_wfopen
_wfopen_s
_wfreopen
_wfreopen_s
_wfsopen
_wfullpath
F_DEBUG(_wfullpath_dbg)
_wgetcwd
F_DEBUG(_wgetcwd_dbg)
_wgetdcwd
F_DEBUG(_wgetdcwd_dbg)
_wgetenv
_wgetenv_s
_wmakepath
_wmakepath_s
_wmkdir
_wmktemp
_wmktemp_s
_wopen
_wperror
_wpopen
_wputenv
_wputenv_s
_wremove
_wrename
_write
_wrmdir
_wsearchenv
_wsearchenv_s
_wsetlocale
_wsopen
_wsopen_dispatch
_wsopen_s
_wspawnl
_wspawnle
_wspawnlp
_wspawnlpe
_wspawnv
_wspawnve
_wspawnvp
_wspawnvpe
_wsplitpath
_wsplitpath_s
_wstat32
_wstat32i64
_wstat64
_wstat64i32
_wstrdate
_wstrdate_s
_wstrtime
_wstrtime_s
_wsystem
_wtempnam
F_DEBUG(_wtempnam_dbg)
_wtmpnam
_wtmpnam_s
_wtof
_wtof_l
_wtoi
_wtoi64
_wtoi64_l
_wtoi_l
_wtol
_wtol_l
_wtoll
_wtoll_l
_wunlink
_wutime32
_wutime64
_y0
_y1
_yn
abort
abs
acos
F_NON_I386(acosf)
acosh
acoshf
F_ARM_ANY(acoshl) ; Can't use long double functions from the CRT on x86
asctime
asctime_s
asin
F_NON_I386(asinf)
asinh
asinhf
F_ARM_ANY(asinhl) ; Can't use long double functions from the CRT on x86
atan
atan2
F_NON_I386(atan2f)
F_NON_I386(atanf)
atanh
atanhf
F_ARM_ANY(atanhl) ; Can't use long double functions from the CRT on x86
atof
atoi
atol
atoll
bsearch
bsearch_s
btowc
c16rtomb
c32rtomb
cabs
cabsf
F_ARM_ANY(cabsl) ; Can't use long double functions from the CRT on x86
cacos
cacosf
cacosh
cacoshf
F_ARM_ANY(cacoshl) ; Can't use long double functions from the CRT on x86
F_ARM_ANY(cacosl) ; Can't use long double functions from the CRT on x86
calloc
carg
cargf
F_ARM_ANY(cargl) ; Can't use long double functions from the CRT on x86
casin
casinf
casinh
casinhf
F_ARM_ANY(casinhl) ; Can't use long double functions from the CRT on x86
F_ARM_ANY(casinl) ; Can't use long double functions from the CRT on x86
catan
catanf
catanh
catanhf
F_ARM_ANY(catanhl) ; Can't use long double functions from the CRT on x86
F_ARM_ANY(catanl) ; Can't use long double functions from the CRT on x86
cbrt
cbrtf
F_ARM_ANY(cbrtl) ; Can't use long double functions from the CRT on x86
ccos
ccosf
ccosh
ccoshf
F_ARM_ANY(ccoshl) ; Can't use long double functions from the CRT on x86
F_ARM_ANY(ccosl) ; Can't use long double functions from the CRT on x86
ceil
F_NON_I386(ceilf)
cexp
cexpf
F_ARM_ANY(cexpl) ; Can't use long double functions from the CRT on x86
cimag
cimagf
F_ARM_ANY(cimagl) ; Can't use long double functions from the CRT on x86
clearerr
clearerr_s
clock
clog
clog10
clog10f
F_ARM_ANY(clog10l) ; Can't use long double functions from the CRT on x86
clogf
F_ARM_ANY(clogl) ; Can't use long double functions from the CRT on x86
conj
conjf
F_ARM_ANY(conjl) ; Can't use long double functions from the CRT on x86
copysign
copysignf
F_ARM_ANY(copysignl) ; Can't use long double functions from the CRT on x86
cos
F_NON_I386(cosf)
cosh
F_NON_I386(coshf)
cpow
cpowf
F_ARM_ANY(cpowl) ; Can't use long double functions from the CRT on x86
cproj
cprojf
F_ARM_ANY(cprojl) ; Can't use long double functions from the CRT on x86
creal
crealf
F_ARM_ANY(creall) ; Can't use long double functions from the CRT on x86
csin
csinf
csinh
csinhf
F_ARM_ANY(csinhl) ; Can't use long double functions from the CRT on x86
F_ARM_ANY(csinl) ; Can't use long double functions from the CRT on x86
csqrt
csqrtf
F_ARM_ANY(csqrtl) ; Can't use long double functions from the CRT on x86
ctan
ctanf
ctanh
ctanhf
F_ARM_ANY(ctanhl) ; Can't use long double functions from the CRT on x86
F_ARM_ANY(ctanl) ; Can't use long double functions from the CRT on x86
div
erf
erfc
erfcf
F_ARM_ANY(erfcl) ; Can't use long double functions from the CRT on x86
erff
F_ARM_ANY(erfl) ; Can't use long double functions from the CRT on x86
exit
exp
exp2
exp2f
F_ARM_ANY(exp2l) ; Can't use long double functions from the CRT on x86
F_NON_I386(expf)
expm1
expm1f
F_ARM_ANY(expm1l) ; Can't use long double functions from the CRT on x86
fabs
F_ARM_ANY(fabsf)
fclose
fdim
fdimf
F_ARM_ANY(fdiml) ; Can't use long double functions from the CRT on x86
; Don't use the float env functions from UCRT; fesetround doesn't seem to have
; any effect on the FPU control word as required by other libmingwex math
; routines.
feclearexcept DATA
fegetenv DATA
fegetexceptflag DATA
fegetround DATA
feholdexcept DATA
feof
ferror
fesetenv DATA
fesetexceptflag DATA
fesetround DATA
fetestexcept DATA
fflush
fgetc
fgetpos
fgets
fgetwc
fgetws
floor
F_NON_I386(floorf)
fma
fmaf
F_ARM_ANY(fmal) ; Can't use long double functions from the CRT on x86
fmax
fmaxf
F_ARM_ANY(fmaxl) ; Can't use long double functions from the CRT on x86
fmin
fminf
F_ARM_ANY(fminl) ; Can't use long double functions from the CRT on x86
fmod
F_NON_I386(fmodf)
fopen
fopen_s
fputc
fputs
fputwc
fputws
fread
fread_s
free
freopen
freopen_s
frexp
fseek
fsetpos
ftell
fwrite
getc
getchar
getenv
getenv_s
gets
gets_s
getwc
getwchar
hypot
ilogb
ilogbf
F_ARM_ANY(ilogbl) ; Can't use long double functions from the CRT on x86
imaxabs
imaxdiv
is_wctype
isalnum
isalpha
isblank
iscntrl
isdigit
isgraph
isleadbyte
islower
isprint
ispunct
isspace
isupper
iswalnum
iswalpha
iswascii
iswblank
iswcntrl
iswctype
iswdigit
iswgraph
iswlower
iswprint
iswpunct
iswspace
iswupper
iswxdigit
isxdigit
labs
ldexp
ldiv
; The UCRT lgamma functions don't set/provide the signgam variable like
; the mingw ones do. Therefore prefer the libmingwex version instead.
lgamma DATA
lgammaf DATA
F_ARM_ANY(lgammal DATA) ; Can't use long double functions from the CRT on x86
llabs
lldiv
llrint
llrintf
F_ARM_ANY(llrintl) ; Can't use long double functions from the CRT on x86
llround
llroundf
F_ARM_ANY(llroundl) ; Can't use long double functions from the CRT on x86
localeconv
log
log10
F_NON_I386(log10f)
log1p
log1pf
F_ARM_ANY(log1pl) ; Can't use long double functions from the CRT on x86
log2
log2f
F_ARM_ANY(log2l) ; Can't use long double functions from the CRT on x86
logb
logbf
F_ARM_ANY(logbl) ; Can't use long double functions from the CRT on x86
F_NON_I386(logf)
longjmp
lrint
lrintf
F_ARM_ANY(lrintl) ; Can't use long double functions from the CRT on x86
lround
lroundf
F_ARM_ANY(lroundl) ; Can't use long double functions from the CRT on x86
malloc
mblen
mbrlen
mbrtoc16
mbrtoc32
mbrtowc
mbsrtowcs
mbsrtowcs_s
mbstowcs
mbstowcs_s
mbtowc
memchr
memcmp
memcpy
memcpy_s
memmove
memmove_s
memset
modf
F_NON_I386(modff)
nan
nanf
F_ARM_ANY(nanl) ; Can't use long double functions from the CRT on x86
nearbyint
nearbyintf
F_ARM_ANY(nearbyintl) ; Can't use long double functions from the CRT on x86
nextafter
nextafterf
F_ARM_ANY(nextafterl) ; Can't use long double functions from the CRT on x86
; All of the nexttoward functions take the second parameter as long double,
; making them unusable for x86.
F_ARM_ANY(nexttoward) ; Can't use long double functions from the CRT on x86
F_ARM_ANY(nexttowardf) ; Can't use long double functions from the CRT on x86
F_ARM_ANY(nexttowardl) ; Can't use long double functions from the CRT on x86
norm
normf
norml
perror
pow
F_NON_I386(powf) ; Missing in Wine's ucrtbase.dll for i386 in Wine 9.15 and older
putc
putchar
puts
putwc
putwchar
qsort
qsort_s
quick_exit
raise
rand
rand_s
realloc
remainder
remainderf
F_ARM_ANY(remainderl) ; Can't use long double functions from the CRT on x86
remove
remquo
remquof
F_ARM_ANY(remquol) ; Can't use long double functions from the CRT on x86
rename
rewind
rint
rintf
F_ARM_ANY(rintl) ; Can't use long double functions from the CRT on x86
round
roundf
F_ARM_ANY(roundl) ; Can't use long double functions from the CRT on x86
scalbln
scalblnf
F_ARM_ANY(scalblnl) ; Can't use long double functions from the CRT on x86
scalbn
scalbnf
F_ARM_ANY(scalbnl) ; Can't use long double functions from the CRT on x86
set_terminate
set_unexpected
setbuf
F_X64(setjmp)
setlocale
setvbuf
signal
sin
F_NON_I386(sinf)
; if we implement sinh, we can set it DATA only.
sinh
F_NON_I386(sinhf)
sqrt
F_NON_I386(sqrtf)
srand
strcat
strcat_s
strchr
strcmp
strcoll
strcpy
strcpy_s
strcspn
strerror
strerror_s
strftime
strlen
strncat
strncat_s
strncmp
strncpy
strncpy_s
strnlen
strpbrk
strrchr
strspn
strstr
strtod
strtof
strtoimax
strtok
strtok_s
strtol
F_ARM_ANY(strtold) ; Can't use long double functions from the CRT on x86
strtoll
strtoul
strtoull
strtoumax
strxfrm
system
tan
F_NON_I386(tanf)
; if we implement tanh, we can set it to DATA only.
tanh
F_NON_I386(tanhf)
terminate
tgamma
tgammaf
F_ARM_ANY(tgammal) ; Can't use long double functions from the CRT on x86
tmpfile
tmpfile_s
tmpnam
tmpnam_s
tolower
toupper
towctrans
towlower
towupper
trunc
truncf
F_ARM_ANY(truncl) ; Can't use long double functions from the CRT on x86
unexpected
ungetc
ungetwc
wcrtomb
wcrtomb_s
wcscat
wcscat_s
wcschr
wcscmp
wcscoll
wcscpy
wcscpy_s
wcscspn
wcsftime
wcslen
wcsncat
wcsncat_s
wcsncmp
wcsncpy
wcsncpy_s
wcsnlen
wcspbrk
wcsrchr
wcsrtombs
wcsrtombs_s
wcsspn
wcsstr
wcstod
wcstof
wcstoimax
wcstok
wcstok_s
wcstol
F_ARM_ANY(wcstold) ; Can't use long double functions from the CRT on x86
wcstoll
wcstombs
wcstombs_s
wcstoul
wcstoull
wcstoumax
wcsxfrm
wctob
wctomb
wctomb_s
wctrans
wctype
wmemcpy_s
wmemmove_s

; These symbols were added in some later version of ucrtbase.dll and ucrtbased.dll
; They were added into ucrtbase.dll version 10.0.10563.0 which is part of the Microsoft Visual C++ 2015 Redistributable version 14.0.23506.0
_o____lc_codepage_func
_o____lc_collate_cp_func
_o____lc_locale_name_func
_o____mb_cur_max_func
_o___std_exception_copy
_o___std_exception_destroy
_o___std_type_info_destroy_list
_o___std_type_info_name
_o__cexit
_o__configthreadlocale
_o__configure_narrow_argv
_o__controlfp_s
_o__crt_atexit
_o__exit
_o__get_initial_narrow_environment
_o__get_initial_wide_environment
_o__initialize_narrow_environment
_o__initialize_wide_environment
_o__purecall
_o__seh_filter_dll
_o__seh_filter_exe
_o__set_app_type
_o__set_fmode
_o_exit
_o_memcpy_s
_o_rename
_o_setlocale

; All symbols below this line are not available in Windows XP version of ucrtbase.dll
; Also those symbols are not available in any version of ucrtbased.dll

; These symbols were added in ucrtbase.dll version 10.0.14393.0
; This is part of the Windows 10 Anniversary Update (Redstone 1)
F_NON_DEBUG(__std_terminate)
F_NON_DEBUG(__uncaught_exceptions)

; These symbols were added in ucrtbase.dll version 10.0.17134.1
F_NON_DEBUG(F_NON_I386(__C_specific_handler_noexcept))

; These symbols were added in ucrtbase.dll version 10.0.19041.1
F_NON_DEBUG(F_X64(__CxxFrameHandler4))
